<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog of 太极儒]]></title>
  <link href="http://frank19900731.github.io/atom.xml" rel="self"/>
  <link href="http://frank19900731.github.io/"/>
  <updated>2015-09-11T00:07:51+08:00</updated>
  <id>http://frank19900731.github.io/</id>
  <author>
    <name><![CDATA[Frank Song]]></name>
    <email><![CDATA[scr_0731@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[每周一软之 Hider 2]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/"/>
    <updated>2015-05-31T19:14:44+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="http://macpaw.com/hider">Hider 2</a> （曾用名 MacHider）是一款文件夹加密隐藏工具，与 <a href="http://macpaw.com/cleanmymac">CleanMyMac</a> 来自同一厂商 <a href="http://macpaw.com/">MacPaw</a>。Hider 的加密隐藏的主要做法可以概括为：</p>

<ul>
  <li>用户设置软件访问密码，可以添加文件或文件夹并切换其显示/隐藏，也可以类似 1PassWord 等软件直接添加 Secure Note；</li>
  <li>系统自动生成密钥，使用 AES-256 进行加解密，密钥和具体加解密流程对用户透明；</li>
  <li>加密操作保持加密文件夹的目录结构，<strong>分别随机打乱文件名与后缀名中的字符</strong>（比如 photo.jpg 变成 othpo.pjg），<strong>对每个文件进行单独加密</strong>，保存加密结果到用户设置的全局 Vault 中，同时<strong>对源文件进行安全删除</strong>（见下图）； </li>
  <li>解密操作还原目录结构，删除（似乎不是安全删除）加密文件；</li>
  <li>加解密操作过程中，<strong>均有一份完整的原始文件或加密文件保存在磁盘中</strong>，防止加解密失败导致数据丢失。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-5/15.png" class="img-up" title="安全删除"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/15.png" width="65%" title="安全删除" /></a></p>

<!-- excerpt end -->

<p>对于保持目录结构仅打乱命名的作法（目的应该是降低被搜索到的可能性吧，也只是降低而已）我是不太喜欢的，如果他人知晓文件名或后缀名，那么通过简单的枚举搜索就能够发现隐藏文件的存在，<strong>特别是在中文命名的情况下</strong>。虽然不知道密钥密码还是无法解析文件内容，但既然是隐藏为什么不做得更彻底一些呢。</p>

<p>Hider 2 对加密文件大小没有限制，只是在用户添加大文件（夹）时给出警告，如果文件需要经常切换显示、隐藏，自然还是分开处理更好。Hider 2 加解密速度大致相当，在固态硬盘、i5 CPU 条件下实测，100M 文件耗时几秒，1G 耗时 几十秒，3G 耗时约两分钟，单个文件大小几 K 到几 M 不等。</p>

<p>和大多数隐藏加密软件一样，<strong>忘记密码则无法恢复数据</strong>，所以 Hider 2 会建议用户将密码保存到 Key Chain 当中，不过更稳妥的方式自然是死记……</p>

<p>Hider 2 的特性还包括：</p>

<ul>
  <li>支持创建 Group，便于文档分类管理；</li>
  <li>支持识别文件在 Finder 中被指定的 Tag，便于查询；</li>
  <li>支持外置硬盘，会在该硬盘上创建 Vault 以隐藏文件。</li>
</ul>

<p>当然，也有 Hider 2 无法加密或不便加密的文件，前者比如说 Vault 自身，后者比如软件，因为解密后的软件无法通过 <a href="https://support.apple.com/en-gb/HT202491">GateKeeper</a> 校验。</p>

<h2 id="section-1">界面设计</h2>

<p>设计美观。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/14.png" class="img-up" title="Hider 2 主界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/14.png" width="90%" title="Hider 2 主界面" /></a></p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>一般地，文件的加密隐藏主要有三种形式。</p>

<ul>
  <li>不加密隐藏
    <ul>
      <li><a href="http://www.apimac.com/mac/secretfolder/">Apimac Secret Folder</a> 属于此类，前者仅在文件名前加 <code>.</code>，使成为系统隐藏文件，不够安全；</li>
    </ul>
  </li>
  <li>设置访问密码
    <ul>
      <li><strong>Finder 不支持对文件夹或文件夹设置访问密码</strong>；</li>
      <li>LameSecure 是早期 OS X 中的一款支持对文件夹设置密码的第三方应用，不过现在似乎已经不可用，而且也有相应的 <a href="https://discussions.apple.com/thread/3208638?tstart=0">规避手段</a>，也不够安全；</li>
    </ul>
  </li>
  <li>内容加密，<strong>通常只能暴力破解，较安全</strong>
    <ul>
      <li>全盘加密
        <ul>
          <li><a href="https://support.apple.com/en-us/HT204837">FileVault</a>是 OS X 的自带功能，<strong>需要登录密码解密磁盘</strong>，也即无法设置自动登录，如果私密文件仅占磁盘较小容量则不合适；</li>
        </ul>
      </li>
      <li>指定文件加密
        <ul>
          <li>Disk Utility 中 <a href="https://support.apple.com/en-us/HT201599">新建磁盘映像</a> 的功能可以设置密码和加密方式；</li>
          <li>rar 等压缩文件也可以设置密码，压缩的同时会对文件内容加密，比如 rar 采用 AES 算法加密； </li>
          <li><a href="https://www.espionageapp.com/">Espionage</a> 是一款与 Hider 2 功能类似的软件，号称可以做到 Plausible Deniability（合理性推诿），不过我觉得有点吹大了，以下作简要讨论。</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Espionage 采取的措施主要是：</p>

<ul>
  <li>支持用户创建多个 Vault，不同 Vault 对应不同密码，如此用户可以创建虚假 Vault 和虚假文件；</li>
  <li>软件初始化时帮助用户随机创建虚假 Vault 和虚假文件。</li>
</ul>

<p>软件作者认为，当犯罪分子威胁人质时，人质可以输入密码进入假 Vault，或者还原一套假文件，这就算是合理性推诿了。然而，只要犯罪分子稍微研究一下 Espionage 的机制，人质就得遭殃了。</p>

<p>Vault 中的每个文件夹在数据目录中都以 sparsebundle 格式的文件存在，而不同 Vault 的 sparsebundle 文件是混在一起的。虽然无法知道有多少个 Vault、哪个 sparsebundle 存储的是虚假文件，但只要真实文件混在其中，犯罪分子就可以要求人质逐个解密，只要还有 sparsebundle 无法打开，就说明还有 Vault 密码没有交代出来。更奇葩的是，系统生成的虚假 Vault 密码人质是不知道的，对于无法打开的 sparsebundle，可能是人质真的不知道密码，但犯罪分子心里想的却是：你 TM 糊弄鬼呢？</p>

<p>那将 sparsebundle 后缀名去掉可否解决上述问题呢？理论上是不行的，因为该类型文件的二进制表示中有固定编码，还是会被搜索出来。</p>

<p>总的来说，Espionage 宣称的合理性推诿的成立场合是：</p>

<ul>
  <li>犯罪分子太菜，眼睁睁的看你在 Espionage 界面输入密码骗他，就是不去了解软件的工作机制；</li>
  <li>虚假文件创建水平高，在内容、时间戳、大小等各方面都能以假乱真；</li>
  <li>犯罪分子得到文件后无法验证真伪，或在证伪前就放走了人质。</li>
</ul>

<p>我不是很了解合理性推诿方面的研究，但也没蠢到轻信 Espionage，凭感觉想了几条起码的要求：</p>

<ul>
  <li><strong>加密隐藏机制封闭，而不是曝光于大众视野</strong>；</li>
  <li>加密文件的伪装性要高，可以是分布式存储；</li>
  <li>结合真实文件有针对性的作假，而不是随机作假；</li>
  <li>可<strong>设置文件自毁的触发条件</strong>，比如输入某个密码或输错密码多次。</li>
</ul>

<p>大部分人一辈子也不会负责保存比人命还重要的数据，所以这几条也只是想想而已。对于日常私密数据，<strong>用两三种不同的加密软件嵌套加密，注意数据的物理转移和安全删除</strong>，已经算得上稳妥了，毕竟大家隐藏小电影的方式也只是嵌套文件夹 + 重命名而已。</p>

<p>最后要提到的是 <a href="http://macpaw.com/encrypto">Encrypto</a>，它是 MacPaw 推出的与 Hider 2 相配套的软件，功能是使加密文件可分享，类似于加密的压缩文件。Encrypto 兼有 OS X 和 Windows 客户端，界面设计美观，加解密操作简单。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/16.png" class="img-up" title="设置密码"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/16.png" width="60%" title="设置密码" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/17.png" class="img-up" title="加密中"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/17.png" width="60%" title="加密中" /></a></p>

<p>Encrypto 加密文件相比压缩文件的好处是文件格式相对小众，修改后缀名能让安全系数更高一些。然而，查看加密文件的二进制表示发现有固定的 4 字节头部，所以还是可能被针对的。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>加解密操作简单快捷；</li>
  <li>对原始数据有安全删除操作；</li>
  <li>有 Encrypto 作为配套应用，便于加密文件分享。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>加密文件仍保持目录结构，文件名和后缀名只作字符乱序。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/">http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Today Scripts]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/"/>
    <updated>2015-05-24T20:45:37+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://github.com/SamRothCA/Today-Scripts">Today Scripts</a> 是一款开源的通知栏插件，顾名思义是可以编写脚本并将结果显示于通知栏的 Today 面板。功能用法上它和此前我们介绍的 <a href="http://http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/">GeekTool</a> 类似，只不过前者占据桌面，而后者顺应 Yosemite 的潮流以通知栏插件形式出现。</p>

<p>从自身使用习惯的来看，通知中心出场率很低，偶尔访问一般是为了叉掉已有通知。我的第三方插件主要来自社交、效率、文摘类软件，它们的作用是提醒、展示，也是快速访问入口，但我第一想到的还是通过 Alfred 这种快速启动工具打开软件查看。个人比较喜欢的两款第三方插件是 <a href="http://doublerew.net/en/app/os-x/monthlycal/">MonthlyCal</a> 和 <a href="http://bjango.com/mac/istatmini/">iStat Mini</a>，前者是一款待办事项日历，数据来自 Calendar，后者是系统状态监控。还有一款名为 <a href="https://itunes.apple.com/us/app/stat/id931063335?mt=12">Stat</a> 的软件，可以指定 Git 管理的文件夹，在 Finder 中显示文件状态（新增、修改等），并在通知栏里显示状态变化文件的数量信息，不过当前软件版本对新建文件数的统计总是 0……</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/11.png" class="img-up" title="iStat Mini"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/11.png" width="50%" title="iStat Mini" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/10.png" class="img-up" title="MonthlyCal"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/10.png" width="50%" title="MonthlyCal" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/12.png" class="img-up" title="Stat"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/12.png" width="50%" title="Stat" /></a></p>

<!-- excerpt end -->

<p>Today Scripts 的用法很简单，启动一次软件，就能够在通知栏中插件列表中找到它，将其添加到 Today 面板。系统更新后可能发现找不到该插件，启动一次软件可再次添加进插件列表。点击右上角 info 标记可以添加、删除脚本，点击脚本旁的齿轮标记可以修改脚本设置。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/13.png" class="img-up" title="新建脚本"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/13.png" width="50%" title="新建脚本" /></a></p>

<p>脚本设置有三项：</p>

<ul>
  <li>标签，插件会在脚本输出结果的上方显示该标签，<strong>点击标签即可手动触发脚本的执行</strong>；</li>
  <li>执行环境，比如 <code>/bin/bash</code>、<code>/usr/bin/python</code>；</li>
  <li>脚本代码。</li>
</ul>

<p>当然，也可以<strong>在执行环境中填入可执行文件路径</strong>，而将脚本代码留空。</p>

<p>具体设置方法与代码示例可见 <a href="https://github.com/SamRothCA/Today-Scripts/wiki">官方 wiki</a> 或其它网络资源，比如 <a href="http://www.waerfa.com/today-scripts-for-yosemite-today-view">Today Scripts：打造个性化 Yosemite 通知栏插件</a>、<a href="http://sspai.com/27662">用终端命令定制你的 OS X 通知中心：Today Scripts 体验详解</a>（系统信息里的代码似乎有问题，可以将两处 <code>awk -F''</code> 修改为 <code>awk -F'&lt;configCode&gt;'</code> 和 <code>awk -F'&lt;/configCode&gt;'</code>）。</p>

<p>常见的脚本无外乎获取日期、天气、股票、系统状态（CPU、内存、温度、风扇、电量等）等信息，虽然可以暂时带来某种心理愉悦，但<strong>通知栏好不容易打开了，就让我看这个</strong>？对于程序员来说，将 Today Scripts 用作工作面板（GeekTool 当然也能做到，只是 <a href="http://frank19900731.github.io/blog/2015/02/08/mei-zhou-yi-ruan-zhi-blotter/">Blotter</a> 已经占据了我整个桌面……）才是正道，可以是 Git 信息，可以是后台程序的运行进度，可以是数据库信息，也可以是网站监控…… Today Scripts 相比终端减少重复劳动、节省时间，而这才是我们打开通知中心的动力。</p>

<p>此外，不同于绝大多数通知栏插件，Today Scripts 的<strong>显示结果支持复制、拖拽</strong>。</p>

<h2 id="section-1">界面设计</h2>

<p><a href="http://frank19900731.github.io/img/post/2015-5/9.png" class="img-up" title="Today Scripts"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/9.png" width="50%" title="Today Scripts" /></a></p>

<h2 id="section-2">易用性</h2>

<p>定制要求不高则简单，进阶一点需要掌握某种脚本语言（AppleScript、Shell、Python、Ruby 等），再进一步需要熟悉 Today Scripts 的源代码，诸如修改字体字号、设置刷新时间等功能应该就可以实现吧。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好，不过脚本多了感觉每个都会很慢。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>放眼 OS X 界面，允许我们编写脚本显示自定制信息的也就是桌面、菜单栏、通知栏再加上仪表板（Dashboard）了。</p>

<p>桌面显示的代表软件自然是 <a href="http://projects.tynsoe.org/en/geektool/">GeekTool</a>，空间够大，若能细心设计，美观程度也是妥妥儿的。</p>

<p>菜单栏寸土寸金，限于尺寸无法完整显示长文本，代表性的软件有 <a href="http://www.richsomerfield.com/apps/">TextBar</a>、<a href="http://www.shellwrangler.com/?inclick">Shellwrangler</a>，前者在功能、可定制性、美观程度上远优于免费的后者，可参见 <a href="https://github.com/richie5um/TextBar-Recipes">脚本实例</a>。</p>

<p>通知栏的尺寸特点能够让信息完整、紧凑的显示出来，双指滑动调用也比较流畅，不过尚未发现与 Today Scripts 类似的软件。</p>

<p>Dashboard 空间虽大，但估计不太有用户会经常光顾这里。Dashboard 插件少，开发也不活跃，目前仅能找到 <a href="http://www.apple.com/downloads/dashboard/networking_security/shellwatcher.html">Shellwatcher</a> 可以执行脚本并显示结果，效果很土的说，还有一款名为 Quickcommand 的插件已经下架了。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>开源；</li>
  <li>可定制性强，功能实用。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>插件本身的定制成本高，需要学习源代码。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/">http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 HoudahSpot]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/"/>
    <updated>2015-05-17T20:50:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="http://www.houdah.com/houdahSpot/">HoudahSpot</a> 是一款文件搜索工具，典型的功能强大界面糙，见过的没见过的功能都浓缩在四列之中。<strong>HoudahSpot 的搜索基于 Spotlight</strong>，<strong>搜索速度快</strong>，但也<strong>受限于索引更新</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/8.png" class="img-up" title="HoudahSpot 软件界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/8.png" width="99%" title="HoudahSpot 软件界面" /></a></p>

<p>HoudahSpot 提供了丰富的查询条件和过滤功能。常见的查询条件有文本内容、文件类型、文件大小、最近打开时间等，还包括<strong>近 300 种与特定文件类型相关的属性</strong>，比如图片尺寸。这些查询条件各自可以做精细定制，也可以<strong>以逻辑与或非的关系进行组合</strong>。选中搜索结果中的一项，最右侧列显示了该文件的详细信息、预览和文本预览。详细信息的各项可以作为过滤条件对搜索结果进行筛选，预览显示该文件在默认打开程序中的效果，文本显示文件的文本信息（如果有）、<strong>高亮搜索关键词</strong>。</p>

<!-- excerpt end -->

<p>HoudahSpot 除可以指定搜索路径，还可以跳过某些路径，与一般搜索软件不同的是<strong>路径可以是多个文件夹的组合</strong>。</p>

<p>HoudahSpot 允许我们将上述<strong>查询条件保存为片段</strong>（Snippet）<strong>或模板</strong>（Template），便于今后重复使用或微调。</p>

<p>HoudahSpot 提供的高级搜索功能和便捷操作还包括：</p>

<ul>
  <li>支持输入如 <code>kind:wordProcessing date:thisYear</code> 的搜索语句，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">Advanced Features</a> 一节；</li>
  <li>一次查询以<strong>标签页</strong>形式展现，可同时展示多个标签页；</li>
  <li>支持拖拽文件到查询条件上以修改查询条件与该文件相符；</li>
  <li>支持<strong>查询结果格式化拷贝</strong>，可直接粘贴到 Excel中；</li>
  <li>支持添加全局热键唤起搜索框，和 Spotlight 类似；</li>
  <li>支持 AppleScript 调用，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">AppleScript</a> 一节；</li>
  <li>支持 Calendar、Reminder 和 Contacts 搜索。</li>
</ul>

<h2 id="section-1">界面设计</h2>

<p>简暴。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>Spotlight、Finder 提供了 OS X 基本的文件搜索功能，只有文件名、标签等有限的搜索条件。</p>

<p><a href="http://www.alfredapp.com/">Alfred</a>、<a href="http://qsapp.com/">QuickSilver</a> 也支持简单的文件搜索，可以设置待索引的文件夹和目录深度，全盘索引压力较大也没有必要。</p>

<p><a href="http://www.devontechnologies.com/products/freeware.html">EasyFind</a> 是一款免费的轻量级搜索工具，在了解 HoudahSpot 以前常用。题外话，写这篇博客的时候才知道它居然和大名鼎鼎的 <a href="http://www.devontechnologies.com/products/devonnote.html">DEVONnote</a> 出自同一家公司。EasyFind 的好处是不只依赖于索引，所以可以<strong>实时查询</strong>。</p>

<p>当然，说到文件搜索，<a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?find">find</a> 命令自然不能不提，用法网上有很多，此处不展开。</p>

<p>如果搜索目标是文本文件的内容，那一些编辑器也是可用的，比如 Sublime 的插件 <a href="https://github.com/titoBouzout/SideBarEnhancements">SideBarEnhancements</a> 提供了 Find Advanced 功能。虽然说到底是封装了命令行，但毕竟也省去了记忆参数的麻烦。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>标签式管理；</li>
  <li>查询条件可以保存为模板；</li>
  <li>搜索可跳过某些路径，路径可指定多个文件夹；</li>
  <li>查询结果可以格式化拷贝。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>功能实在强大，长得丑点也就忍了。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/">http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Disk Sensei]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/"/>
    <updated>2015-05-10T20:49:48+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://www.cindori.org/software/disksensei/">Disk Sensei</a> 是一款磁盘工具软件，与知名软件 <a href="https://www.cindori.org/software/trimenabler/">Trim Enabler</a> 来自同一软件厂商。前者除包含后者功能外，还提供了磁盘信息检测、健康度评估、垃圾清理、优化设置、基准检测、可视化分析和读写监控等功能。这些功能（除优化设置、Trim 设置）普遍存在于其它磁盘管理或系统优化软件中，Disk Sensei 算是功能全面的一个，界面设计也很美观，如下图，显示的是磁盘信息。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/2.png" class="img-up" title="磁盘信息"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/2.png" width="80%" title="磁盘信息" /></a></p>

<p><a href="http://en.wikipedia.org/wiki/Trim_%28computing%29">Trim</a> 指令的主要功能是<strong>标记文件删除并通知固态硬盘相应的磁盘存储空间可回收</strong>，使得固态硬盘可以早做垃圾回收和磁盘优化，从而<strong>提高固态硬盘的读写速度并减少读写请求数</strong>。这一指令在 OS X 中默认关闭，<strong>每次系统更新后也都是关闭</strong>，可以通过 Trim Enabler 等工具激活。</p>

<!-- excerpt end -->

<p>优化设置是我觉得做的比较贴心的一项功能，包括四点：</p>

<ul>
  <li>瞬间移动下的磁盘保护，关闭可以省电；</li>
  <li>本地 Time Machine，关闭可以省空间，减少磁盘读写，延长磁盘使用寿命；</li>
  <li>深度睡眠状态下内存数据会被写入磁盘，关闭可以省空间；</li>
  <li>文件访问记录，关闭可以减少磁盘读写，延长磁盘使用寿命。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-5/4.png" class="img-up" title="优化设置"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/4.png" width="80%" title="优化设置" /></a></p>

<p>我们完全可以通过手工设置（可能是终端中输入命令行）来控制这些功能，只是 Disk Sensei 把它们简化为开关就更方便一些。</p>

<p>磁盘可视化显示是很有用的功能，比如便于在磁盘空间有异常变化时分析原因，<a href="https://www.apple.com/osx/server/features/">OS X Server</a> 的日志就曾吞噬过我几百 G 的空间。可视化不但能帮我们寻找大文件，也能寻找大文件夹。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/5.png" class="img-up" title="磁盘可视化"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/5.png" width="80%" title="磁盘可视化" /></a></p>

<p>最后要说的磁盘读写监控，比 Activity Monitor 更精细一些，可以点击进程查看其详细的读写操作。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/6.png" class="img-up" title="各进程磁盘读写"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/6.png" width="80%" title="各进程磁盘读写" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/7.png" class="img-up" title="磁盘读写实时统计"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/7.png" width="80%" title="磁盘读写实时统计" /></a></p>

<h2 id="section-1">界面设计</h2>

<p>界面设计清新美观。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>普通功能稳定，磁盘基准测试和可视化扫描时会占用大量资源，可能崩溃。特别是可视化扫描，多次出现耗尽 16G 系统内存的情况，后来发现在扫描前先选择 clear results 就会好很多。</p>

<h2 id="section-4">跨平台</h2>

<p>仅在 OS X 下。</p>

<h2 id="section-5">类似软件</h2>

<p><a href="http://mainmenuapp.com/">MainMenu</a>、<a href="https://apps.adnx.com/en">xScan</a> 等都是老牌系统维护、监控软件，包含了一定的磁盘监控功能。</p>

<p><a href="http://daisydiskapp.com/">DaisyDisk</a>、<a href="https://nektony.com/disk-inspector">Disk Inspector</a> 均为磁盘可视化工具，功能大同小异，只是前者可以 <strong>Scan as Administrator</strong>，且具有预览功能。</p>

<p>Disk Utility 是系统小工具，可以实现磁盘权限修复、错误修复等功能；Activity Monitor 也是系统小工具，可以简单观察磁盘读写。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>功能全面，且集成四项优化功能；</li>
  <li>界面清新美观。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>可视化扫描时没有进度条，容易崩溃。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/">http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Sublime]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/"/>
    <updated>2015-05-03T11:50:44+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>论文肿算写完鸟，会一点点把落下的每周一软补回来。</p>

<h2 id="section">功能介绍</h2>

<p>每周一软不打算介绍开发工具，只是觉得 Sublime 对普通人的工作学习也有很大帮助，所以将它选入主题。</p>

<p><a href="http://www.sublimetext.com/">Sublime Text</a> 是一款轻量级的编辑器，最初多用于前端开发（现在也是这样吧），堪比瑞士军刀，现在也逐渐受到非前端程序员的喜爱。一些人会拿它与 Emacs、Vim、Eclipse、Jet Brains 系列作比较，我觉得还是看使用目的和个人习惯吧。Sublime 精简美观，上手比 Emacs、Vim 简单，功能上是它们的子集，取而代之也是无稽之谈；相比 IntelliJ IDEA、RubyMine 等 IDE，Sublime 在项目的支持上更弱，但做小规模开发还是绰绰有余的。</p>

<p>对有情怀的程序员来说，Emacs 或 Vim 是世界上雷打不动的最佳编辑器，这是无法撼动的<strong>人生哲学</strong>，但对于俺这种功利主义普通程序员来说，还是啥得劲儿用啥，Vim 还在慢慢学（对使用 Vim 如飞的人只能羡慕嫉妒恨），远程开发优先版本控制和目录挂载。</p>

<p>事先声明，以下介绍的<strong>大部分功能在别的软件中也有</strong>……</p>

<!-- excerpt end -->

<p>Sublime 上手简单、易用性强主要体现在：</p>

<ul>
  <li><strong>功能查找方便</strong>
    <ul>
      <li>快捷键要常用才记得牢，所以 Vim 中我只能记住一小部分。Sublime 的菜单栏提供了较丰富的编辑功能，比如行排序、随机打乱行、分屏等，方便调用。</li>
      <li>Sublime 提供了 Command Palette （Mac 下快捷键为 Shift + Command + P）进行命令搜索，支持模糊匹配，方便查询、调用自带功能和插件功能。</li>
    </ul>
  </li>
  <li><strong>插件系统强大</strong>
    <ul>
      <li>插件是软件功能的扩展，能在满足用户需求的同时减少软件本身的系统占用，之后我们会介绍一些普通用户也能用得到的插件。</li>
      <li>主题也是一种插件，一个赏心悦目的编辑界面无疑能够提高用户的写作效率。</li>
    </ul>
  </li>
  <li><strong>可定制性强</strong>
    <ul>
      <li>Sublime 的插件功能使用 Python 实现，辅之以 json 文件作配置，编写者有基本的 Python 开发知识就足够。</li>
      <li>Sublime 的配置都是 json 文件，区分用户配置和系统配置，前者覆盖后者。这样做能够防止用户定义设置被软件或插件更新覆盖，也方便配置的移植。</li>
    </ul>
  </li>
</ul>

<p>系统自带功能中，个人脚着最实用的是 Goto Anything。一个常见场景是，打开某个目录，需要不断点击子文件夹找到某个文件进行编辑，之后又要到另外一个子文件夹打开别的文件，这时有一个<strong>支持路径模糊匹配的文件搜索</strong>就会方便很多。Mac 下 Command + P 调用 Goto Anything，可以跳转到文件、跳转到行或跳转到符号。再者就是<strong>多点编辑</strong>功能，可自行查询学习。</p>

<p>随便搜一下“Sublime 插件推荐”就有很多结果，这里只介绍一些<strong>普通用户适用的插件</strong>。</p>

<ul>
  <li>Markdown 系列，详见<a href="http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/">《在 Sublime 中配置 Markdown 环境》</a>，插件安装方式也见该文；</li>
  <li><strong>ConvertToUTF8</strong>，对 Sublime 现有文件编码支持的扩展，如支持 GBK；</li>
  <li><strong>Advanced New File</strong>，新建文件时指定路径，而不必先找到文件夹再右键 New File；</li>
  <li><strong>SideBarEnhancements</strong>，必装插件，扩展侧边栏功能，如 Open With、Find Advanced 等，其中 Find in Folder 功能用起来很带劲；</li>
  <li><strong>SyncdSideBar</strong>，在侧边栏目录结构中同步定位到当前打开的文件，配合 Goto Anything 使用；</li>
  <li><strong>FileHistory/LocalHistory</strong>，文件备份；</li>
  <li><strong>Trimmer</strong>，删除行末空白字符，无论是编程还是撰写文档都会用到；</li>
  <li><strong>SFTP</strong>，通过 FTP 映射本地目录和远程目录，使得编辑同步，但实际用起来并不方便，不如使用 <a href="http://fuse.sourceforge.net/sshfs.html">SSHFS</a> 进行目录挂载来得方便，前提是网速够快；</li>
  <li><strong>Sublimall</strong>，在不同的 Sublime 安装间同步配置；</li>
  <li><strong>Evernote</strong>，操作 Evernote 文档； </li>
  <li><strong>DictionaryAutoComplete</strong>，英文单词自动补全；</li>
  <li><strong>PlainTasks</strong>，一个 todo list 工具，待办事项记录在后缀名为 todo 的文档中，提供了一个简单效率软件所应具有的全部功能，包括新建条目、完成、取消、截止日期、开始时间、暂停时间、结束时间、归档等，还可以链接文件与网址。</li>
</ul>

<p>对最后一个插件 PlainTasks 要多说两句，现在我习惯于在写作或代码项目下建立一个 todo 文件，把以前写在 Readme 文件里的进度和待添加特性挪到这里。todo 文件其实就是文本文件，在没有 Sublime 的情况下也是可以查看、编辑的。当然，这只是一个简便的选择，没法跟 Emacs 下的 orgmode 比啦。</p>

<h2 id="section-1">界面设计</h2>

<p>简洁美观，会让一些人觉得是<strong>编辑器中的花瓶</strong>，其实是有货滴。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/1.png" class="img-up" title="Sublime 界面展示"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/1.png" width="100%" title="Sublime 界面展示" /></a></p>

<h2 id="section-2">易用性</h2>

<p>对普通用户有一定上手难度，但带来的效率提升远大于付出的努力，学习性价比高。</p>

<h2 id="section-3">稳定性</h2>

<p>总的来说是稳定的，但有过几次需要重启电脑才能正常工作的情况，原因未知。</p>

<h2 id="section-4">跨平台</h2>

<p>Windows、Linux、OS X 均可，只有图形界面。</p>

<h2 id="section-5">类似软件</h2>

<p>CodeRunner，Foobar，CodePad，TextMate 等都是代码编辑器，总体以 TextMate 名气大、功能全面，但它<strong>绚烂绽放的菊花图标</strong>让我颇为羞涩，Mac 下 CodeRunner 也很知名。Visual Studio Code 也是近期不能不提的代码编辑器，微软粉的最爱吧。</p>

<p>文本编辑器推荐可见<a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">《每周一软之 Markdown 笔记软件 Ulysses III》</a>，Ulysses III 最近更名为 Ulysses，改版之后运行效率优化不少，但界面美观性大不如前，特别是蝴蝶图标吓到不少对虫子有阴影的用户。还发现一款名为 Storyist 的软件，本来是用于小说、剧本写作的，但用来成体系地写一份学习笔记也是很不错的，类似 Gitbook。</p>

<h2 id="section-6">闪光点</h2>

<p>学习性价比高。</p>

<h2 id="section-7">缺点</h2>

<p>可以提很多，但想了想这不就是个编辑器嘛。如果觉得不适用，说明应该找找插件或换用更强大的工具了，比如 Vim、Emacs，排名不分先后……</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/">http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Napkin]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/"/>
    <updated>2015-04-25T17:24:57+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/">http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yosemite 加速安装]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang/"/>
    <updated>2015-04-25T16:06:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>有些人或物是不禁夸的，稍不留神就整一出幺蛾子，OS X 就是如此。昨日重启电脑后只显示禁止图标，无法进入系统。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/6.png" class="img-up" title="禁止图标"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/6.png" width="30%" title="禁止图标" /></a></p>

<p>Shift + Command + V 尝试进入恢复模式，日志输出倒数第二行显示 <code>pci pause: SDXC </code>，之后仍会跳出禁止图标，且与日志交叠，导致最后一行日志看不清……按照官方给出的 <a href="https://support.apple.com/en-us/HT204325">解决方案</a> 修复磁盘（权限）、重建 NVRAM 等无效。</p>

<p>重启之前，我大概做了如下几项操作：</p>

<ul>
  <li>CleanMyMac 清理系统垃圾；</li>
  <li>AppStore 安装系统更新，主要是更新 iMovie 和一个名为 Pro Video Formats 的更新，让我纳闷的是后者已经在我的系统更新中出现了三次，每次的更新版本号、更新说明、更新文件大小都是一模一样的；</li>
  <li>Time Machine 备份。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-4/7.png" class="img-up" title="一模一样的更新"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/7.png" width="90%" title="一模一样的更新" /></a></p>

<p>清理完垃圾，在没有完成 AppStore 更新和 Time Machine 备份的情况下，我通过正常途径关闭了电脑，就再没起来。</p>

<p>苹果客服（我又无耻的打了客服，虽然帮助还是有限）向我表示曾遇到过<strong>用户使用类似 CleanMyMac 的第三方工具清理后重启无法进入系统</strong>的案例。也是，谁让 AppStore、Time Machine 都是苹果亲儿子。之前使用 CleanMyMac 清理系统都是直接输入密码、给予权限，确实没关心具体删除了哪些内容，以后不用就是了。</p>

<!-- excerpt end -->

<p><strong>对于目前系统和恢复模式都无法进入的情况，客服又祭出重装系统的方法，我可耻地从了</strong>。大概有三种解决方案： </p>

<ol>
  <li>开机 Command + R，选择 Reinstall 系统，<strong>用户文件、系统设置等都不会丢失</strong>，但也存在无法修复当前错误的可能（我很纳闷既然是 CleanMyMac 误删，那重装系统后为何仍旧可能无法进入系统，客服没有给出解答，只是说遇到过此类情况）；</li>
  <li>使用 Time Machine 还原，问题在于<strong>最近一次备份的系统可能就是错的</strong>，可能需要还原更早的时间节点，而该时间节点后的新文件难于找回，未备份的则更找不回了；</li>
  <li>使用另外一块硬盘安装系统，类似于 WinPE，读取原系统盘中的文件进行备份，或者干脆把原系统盘拆出来用硬盘读取器备份，然后使用第二种方法。</li>
</ol>

<p>显然第一种方法最简便。虽然当初安装 OS X 的时候没有分区操作，但重装系统还是可以做到不影响用户文件的。跟 AppStore 进行系统版本升级一样，都是先从苹果的服务器下载系统安装文件，安装末尾遇到了与之前博文 <a href="http://frank19900731.github.io/blog/2014/10/18/yosemite-sheng-ji-ji-hou-xu/">《Yosemite 升级及后续 》</a> 里提到的相同的问题：最后一分钟无比漫长。</p>

<p>这次深入查询的结果是：<strong>系统更新过程中会将 /user/local 文件夹移出，然后在系统安装末尾再一点点拷贝回来</strong>。<strong>当时我就蒙逼了</strong>，Homebrew、TexLive 都在里面，而且 TexLive 还是 2011、2014 两个版本，这不闹呢么。打开日志（Comand  + L），发现确实在进行拷贝，1s 大概输出 10个文件名吧。虽说找到了 <a href="https://jimlindley.com/blog/yosemite-upgrade-homebrew-tips/">加速建议</a>，但安装过程中是妥妥儿用不了了。我的 /usr/local 文件夹大小 20 G（很多是历史遗留物），20G 的零七八碎的文件拷贝也就花了六七个小时吧 ==</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/9.png" class="img-up" title="local 文件夹大小"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-4/9.png" width="100%" title="local 文件夹大小" /></a></p>

<p>加速的方法很简单，就是把 /usr/local 文件夹在更新前移出 /usr 文件夹，在更新后再移动回来，但此时系统会有一个新的 /usr/local 文件夹，所以不是简单地移动，而是 merge。按 <a href="https://jimlindley.com/blog/yosemite-upgrade-homebrew-tips/">加速建议</a> 的做法，merge 也很耗时，我不清楚是否可以将新的 /usr/local merge 到老的上然后直接做替换，这种快速做法如果只是造成某些日志的断档，似乎就是可行的，以后再重装的话可以试下。</p>

<p>一觉醒来，系统可以进入，用户文件没有变化，Tex、Homebrew 运行正常，截至目前只发现三处有改动：</p>

<ol>
  <li>系统设置中隐私设置的软件来源变成默认设置，即来自 AppStore 和通过验证的开发者；</li>
  <li>Server 中 Apache 的设置被重置，幸好有备份；</li>
  <li>JDK 1.6 被清除（因为默认装在 /System/Library 下，其它版本都无影响），<a href="https://support.apple.com/kb/DL1572?viewlocale=en_US&amp;locale=en_US">下载</a> 重装即可。</li>
</ol>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang/">http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 1Password]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/"/>
    <updated>2015-04-20T21:00:45+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/">http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yosemite 10.10.3 更新后 Finder 剩余容量显示错误问题的解决]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/"/>
    <updated>2015-04-20T19:38:24+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>最近刚升级过 Yosemite 10.10.3，使用中发现 Finder 状态栏的剩余容量信息信息显示错误：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/4.png" class="img-up" title="剩余容量错误"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/4.png" width="90%" title="剩余容量错误" /></a></p>

<p>查看关于本机、Disk Utility 以及 <code>df -h</code> 命令输出的剩余容量是正常的，重启电脑、关闭 TotalFinder 插件、使用 Disk Utility 修复磁盘（权限）都无法修正错误。求助苹果热线，<strong>一如既往的毫无帮助</strong>。</p>

<p>后来在苹果的技术支持社区发现了相关帖子 <a href="https://discussions.apple.com/thread/6983320?start=0&amp;tstart=0">10.10.3 Finder Status Bar information is wrong, TB not GB</a>，给出的建议是重新设置 NVRAM 和 SMC。</p>

<!-- excerpt end -->

<p>按照技术支持里的说法，NVRAM（非易失随机访问内存）存储了一些系统经常访问的数据与设置，比如屏幕分辨率、启动盘等。既然重设 NVRAM 可以修正状态栏的信息错误，那可以推测，剩余空间信息可能被写在其中（？）。NVRAM 的重新设置方法如下，一两秒的时间就可以完成重置。</p>

<blockquote>
  <p>Resetting NVRAM</p>

  <ul>
    <li>Shut down your Mac.</li>
    <li>Locate the following keys on the keyboard: Command (⌘), Option, P, and R. </li>
    <li>Turn on your Mac.</li>
    <li>Press and hold the Command-Option-P-R keys immediately after you hear the startup sound.</li>
    <li>Hold these keys until the computer restarts and you hear the startup sound for a second time.</li>
    <li>Release the keys.</li>
  </ul>
</blockquote>

<p>再来看 <a href="https://support.apple.com/en-us/HT201295">SMC 的功能</a>，我并不很理解这与 Finder 状态栏信息有什么关系，不过读了重设 SMC 的步骤后也就照做了，因为我们平时无意中会经常重新设置它，就是插拔电源这么简单。</p>

<blockquote>
  <p>On Mac Pro, iMac, Mac mini, and Xserve</p>

  <p>To reset the SMC on Intel-based Mac Pro, iMac, and Mac mini computers, as well as Xserve:</p>

  <ul>
    <li>Shut down the computer.</li>
    <li>Unplug the power cord.</li>
    <li>Wait fifteen seconds.</li>
    <li>Attach the power cord.</li>
    <li>Wait five seconds, then press the power button to turn on the computer.</li>
  </ul>
</blockquote>

<p>备份系统，第一次修复尝试失败。考虑到 <a href="https://discussions.apple.com/thread/6983320?start=0&amp;tstart=0">帖子</a> 里提到可能是 Time Machine 带来的影响，所以<strong>禁用了 Time Machine 后进行第二次尝试</strong>，状态栏恢复正确显示。此后开启 Time Machine、重启机器等操作后，错误未复现。</p>

<p>最后想说的是，通过若干次笔记本相关的技术咨询，对苹果公司客服团队中<strong>基础客服的专业性</strong>实在不敢恭维（高级客服接触不多，不敢妄下结论）。他们解决问题的思路是用解决方案套问题，而不是根据问题表现分析原因进而解决，实在不行就建议<strong>重装系统</strong>。撇开解决方案不提，对于每打一次咨询热线都要报一次产品序列号、姓名和手机的做法我也是很不理解，想来对于顺丰客服能够快速调取我历史下单记录询问我是否和之前下单地点相同的做法，我真应该点 32 个赞了。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/1.jpg" class="img-up" title="点32个赞"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/1.jpg" width="70%" title="点32个赞" /></a></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/">http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在 Sublime 中配置 Markdown 环境]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/"/>
    <updated>2015-04-13T12:11:53+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#package-control">Package Control</a></li>
  <li><a href="#monokai-extended--markdown-extended">Monokai Extended &amp; Markdown Extended</a></li>
  <li><a href="#markdownediting">MarkdownEditing</a></li>
  <li><a href="#markdowntoc">MarkdownTOC</a></li>
  <li><a href="#table-editor">Table Editor</a></li>
  <li><a href="#markdown-preview">Markdown Preview</a></li>
  <li><a href="#academicmarkdown">AcademicMarkdown</a></li>
  <li><a href="#citer">Citer</a></li>
  <li><a href="#pandoc">Pandoc</a></li>
  <li><a href="#section">参考文档</a></li>
</ul>

<!-- excerpt start -->

<p>最近在编写项目 Readme.md 文件的时候，发现 Sublime 默认对 Markdown 几乎没有支持，需要通过安装、配置插件（算上 Package Control 共 10 个）来完成。在此记录下完整过程（其实就是整合了网上资料，自己配置来用而已），非 OS X 系统快捷键有不同。</p>

<h2 id="package-control">Package Control</h2>

<p>通过包管理器 <a href="https://packagecontrol.io/">Package Control</a> 安装插件的好处就是便于自动更新。</p>

<p>在 Sublime 中使用 Ctrl + ` 快捷键调出控制台，输入如下代码、回车，等待安装完成。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Package Contorl 安装</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="python"><span class="line"><span class="kn">import</span> <span class="nn">urllib.request</span><span class="o">,</span><span class="nn">os</span><span class="o">,</span><span class="nn">hashlib</span><span class="p">;</span> <span class="n">h</span> <span class="o">=</span> <span class="s">&#39;eb2297e1a458f27d836c04bb0cbaf282&#39;</span> <span class="o">+</span> <span class="s">&#39;d0e7a3098092775ccb37ca9d6b2e4b7d&#39;</span><span class="p">;</span> <span class="n">pf</span> <span class="o">=</span> <span class="s">&#39;Package Control.sublime-package&#39;</span><span class="p">;</span> <span class="n">ipp</span> <span class="o">=</span> <span class="n">sublime</span><span class="o">.</span><span class="n">installed_packages_path</span><span class="p">();</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">install_opener</span><span class="p">(</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">build_opener</span><span class="p">(</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">ProxyHandler</span><span class="p">())</span> <span class="p">);</span> <span class="n">by</span> <span class="o">=</span> <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlopen</span><span class="p">(</span> <span class="s">&#39;http://packagecontrol.io/&#39;</span> <span class="o">+</span> <span class="n">pf</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s">&#39; &#39;</span><span class="p">,</span> <span class="s">&#39;%20&#39;</span><span class="p">))</span><span class="o">.</span><span class="n">read</span><span class="p">();</span> <span class="n">dh</span> <span class="o">=</span> <span class="n">hashlib</span><span class="o">.</span><span class="n">sha256</span><span class="p">(</span><span class="n">by</span><span class="p">)</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">();</span> <span class="k">print</span><span class="p">(</span><span class="s">&#39;Error validating download (got </span><span class="si">%s</span><span class="s"> instead of </span><span class="si">%s</span><span class="s">), please try manual install&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">dh</span><span class="p">,</span> <span class="n">h</span><span class="p">))</span> <span class="k">if</span> <span class="n">dh</span> <span class="o">!=</span> <span class="n">h</span> <span class="k">else</span> <span class="nb">open</span><span class="p">(</span><span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">join</span><span class="p">(</span> <span class="n">ipp</span><span class="p">,</span> <span class="n">pf</span><span class="p">),</span> <span class="s">&#39;wb&#39;</span> <span class="p">)</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">by</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- excerpt end -->

<h2 id="monokai-extended--markdown-extended">Monokai Extended &amp; Markdown Extended</h2>

<p>Markdown 格式在 Sublime 中默认无高亮，很多主题也不支持 Markdown 的高亮（包括 Markdown 代码块内的代码），<a href="https://github.com/jonschlinkert/sublime-monokai-extended">Monokai Extended</a> 和 <a href="https://github.com/jonschlinkert/sublime-markdown-extended">Markdown Extended</a> 是一套解决方案。</p>

<p>插件的安装方式是 Shift + Command + P 调出 Command Palette，输入 <strong>pci</strong>（模糊匹配），找到 <code>Package Control: Install Package</code>、回车，输入插件名称、回车，等待安装。</p>

<p>注意需要将 Markdown 的文件格式与 Markdown Extended 这种语法关联起来，做法是点击 Sublime 右下角文档格式，在列表最上方名为 <code>Open all with current extension as</code> 二级列表中选择 Markdown Extended。一种临时设置方式可以是 Shift + Command + P 调出 Command Palette，输入 <strong>ssm</strong>，选择 <code>Set Syntax: Markdown Extended</code>。</p>

<p>输入点内容看看，是舒服了不少。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/3.png" class="img-up" title="Markdown 语法高亮"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/3.png" width="95%" title="Markdown 语法高亮" /></a></p>

<h2 id="markdownediting">MarkdownEditing</h2>

<p>在 Sublime 中编写 Markdown 还有一个直观的不适就是<strong>缺少辅助提示</strong>，比如输入 *，编辑器应当自动补上一个 *，并使光标保持在两 * 之间，又比如应当支持选中一段文字快捷键添加链接。</p>

<p><a href="https://github.com/SublimeText-Markdown/MarkdownEditing">Markdown Editing</a> 提供了这些支持，它也提供配色方案（略丑）。</p>

<p>个人常用的三个快捷键是：</p>

<ul>
  <li>Option + Command + K - 插入链接；</li>
  <li>Option + Command + V - 粘贴为链接格式；</li>
  <li>Shift + Command + K - 插入图片。</li>
</ul>

<h2 id="markdowntoc">MarkdownTOC</h2>

<p>编写 heading 较多的长文档，希望能够自动生成目录方便跳转，<a href="https://github.com/naokazuterada/MarkdownTOC">MarkdownTOC</a> 可以帮助我们实现。</p>

<p>安装完成需要对其做一定配置，方法是打开 Preferences -&gt; Package Settings -&gt; MarkdownTOC -&gt; Setting - User，键入以下配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MarkdownTOC 配置</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nt">&quot;default_autolink&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;default_bracket&quot;</span><span class="p">:</span> <span class="s2">&quot;round&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;default_depth&quot;</span><span class="p">:</span> <span class="mi">0</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>User Setting 覆盖 Default Setting，修改 User Setting 而非 Default Setting 是为了将来插件升级用户配置不被覆盖。配置文件都是 json 格式，上面的三个配置作用分别是：</p>

<ul>
  <li>目录以链接形式呈现；</li>
  <li>链接以圆括号包裹；</li>
  <li>无限目录深度。</li>
</ul>

<p>将光标置于文档首部，点击 Tools -&gt; MarkdownTOC -&gt; Insert TOC，会自动在文首生成目录，效果如下图。这个目录会随文档内容改变自动更新（可能需要保存来触发）。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/2.png" class="img-up" title="Markdown 目录"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/2.png" width="95%" title="Markdown 目录" /></a></p>

<h2 id="table-editor">Table Editor</h2>

<p>键入表格是个体力活，<a href="https://github.com/vkocubinsky/SublimeTableEditor">Table Editor</a> 可以帮助我们减轻工作量。</p>

<h2 id="markdown-preview">Markdown Preview</h2>

<p>现在，<strong>代码、公式、表格、图片、链接、目录</strong>都齐活儿了，最后一步就是将 Markdown 文档渲染成我们想要的文档格式，<a href="https://github.com/revolunet/sublimetext-markdown-preview">Markdown Preview</a> 责无旁贷。</p>

<p>安装后也需要进行一定配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Markdown Preview 配置</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;parser&quot;</span><span class="p">:</span> <span class="s2">&quot;github&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;build_action&quot;</span><span class="p">:</span> <span class="s2">&quot;browser&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enable_mathjax&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enable_uml&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enable_highlight&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enable_pygments&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enabled_extensions&quot;</span><span class="p">:</span> <span class="s2">&quot;github&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enabled_parsers&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;github&quot;</span><span class="p">],</span>
</span><span class="line">    <span class="nt">&quot;github_mode&quot;</span><span class="p">:</span> <span class="s2">&quot;markdown&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;github_inject_header_ids&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;enable_autoreload&quot;</span><span class="p">:</span> <span class="kc">false</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在以上配置中我们设定渲染样式为 github，渲染结束后用浏览器打开，开启 uml、mathjax、pygments 等支持，最重要的一个配置项是 <code>"github_inject_header_ids": true</code>，<strong>保证 heading 的 id 与 heading 内容一致</strong>，<strong>也就与 MarkdownTOC 生成的一致</strong>，<strong>也就恰好能够锚点定位</strong>。最后我们关闭了 autoreload，否则每当保存 Markdown 文件，后台都会进行一次渲染操作，你就会看到一颗彩虹糖在打转。</p>

<p>使用快捷键 Shift + Command + B，选择 Build with Markdown，一会儿就能在弹出的浏览器框里看到渲染结果了。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/1.png" class="img-up" title="Markdown 渲染结果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/1.png" width="90%" title="Markdown 渲染结果" /></a></p>

<h2 id="academicmarkdown">AcademicMarkdown</h2>

<p>在查找资料的过程中发现可以用 Sublime + Markdown 写论文，就跟着学了一把。</p>

<p><a href="https://packagecontrol.io/packages/AcademicMarkdown">AcademicMarkdown</a> 通过在 Markdown 文档中添加一定的信息，具体说是文件头，来帮助我们将 Markdown 文档渲染为符合指定论文格式的文章。以下文件头摘自插件作者给出的 <a href="http://frank19900731.github.io/downloads/file/sample-paper.zip">样例</a>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>文件头</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="text"><span class="line">title: A sample paper
</span><span class="line">author: Donald Duck
</span><span class="line">date: October 1, 2014
</span><span class="line">csl: /Users/frank/Documents/My Markdown/sample-paper/chicago.csl
</span><span class="line">abstract: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enimad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>csl 是论文模板格式，更多格式可在 <a href="https://www.zotero.org/styles">Zotero Style Repository</a> 寻找。</p>

<p>Academic 还允许指定 bib 文件，在 Markdown 文档内添加引用，格式是 <code>@citation_key</code>，下面介绍的 Citer 可以帮助我们管理引用。</p>

<h2 id="citer">Citer</h2>

<p>具体说，<a href="https://github.com/mangecoeur/Citer">Citer</a> 帮助我们搜索、插入引用。</p>

<p>安装后需要进行一定配置：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Citer 配置</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="err">//REQUIRED:</span>
</span><span class="line">    <span class="nt">&quot;bibtex_file_path&quot;</span><span class="p">:</span> <span class="s2">&quot;/Users/frank/Documents/Mendeley/reference.bib&quot;</span><span class="p">,</span>
</span><span class="line">
</span><span class="line">    <span class="err">//OPTIONAL:</span>
</span><span class="line">
</span><span class="line">    <span class="err">//By</span> <span class="err">default</span> <span class="err">Citer</span> <span class="err">Search</span> <span class="err">looks</span> <span class="err">for</span> <span class="err">your</span> <span class="err">keyword</span> <span class="err">in</span> <span class="err">the</span>
</span><span class="line">    <span class="err">//author,</span> <span class="err">title,</span> <span class="err">year,</span> <span class="err">and</span> <span class="err">Citekey</span> <span class="err">(id)</span> <span class="err">feilds</span>
</span><span class="line">    <span class="nt">&quot;search_fields&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;author&quot;</span><span class="p">,</span> <span class="s2">&quot;title&quot;</span><span class="p">,</span> <span class="s2">&quot;year&quot;</span><span class="p">,</span> <span class="s2">&quot;id&quot;</span><span class="p">]</span> <span class="p">,</span>
</span><span class="line">    <span class="err">//Default</span> <span class="err">format</span> <span class="err">is</span> <span class="err">@Citekey</span>
</span><span class="line">    <span class="nt">&quot;citation_format&quot;</span><span class="p">:</span> <span class="s2">&quot;@%s&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="err">//list</span> <span class="err">of</span> <span class="err">scopes.</span> <span class="err">Could</span> <span class="err">be</span> <span class="err">top</span> <span class="err">level</span> <span class="nt">&quot;text&quot;</span> <span class="err">or</span> <span class="s2">&quot;source&quot;</span><span class="p">,</span> <span class="err">or</span> <span class="err">limit</span> <span class="err">to</span>
</span><span class="line">    <span class="err">//</span> <span class="err">e.g</span> <span class="nt">&quot;text.html.markdown&quot;</span>
</span><span class="line">    <span class="s2">&quot;completions_scopes&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;text&quot;</span><span class="p">],</span>
</span><span class="line">    <span class="nt">&quot;enable_completions&quot;</span><span class="p">:</span> <span class="kc">true</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>只要修改 <code>bibtex_file_path</code> 即可，其它都是默认配置项，我的 bib 文件是由 <a href="https://www.mendeley.com/">Mendeley</a> 维护的。值得一提的是，AcademicMarkdown 支持在文件头指定其它 bib 文件，Citer 中的 bib 是全局的。</p>

<p>Shift + Command + P 调出 Command Palette，输入 Citer，Show All 会列举全局 bib 文件中的所有项（如果是刚配置好可能结果为空，请稍作等待或重启 Sublime），Search 则显然用于搜索。</p>

<h2 id="pandoc">Pandoc</h2>

<p>最终由神器 <a href="https://github.com/tbfisher/sublimetext-Pandoc">Pandoc</a> 将 AcademicMarkdown 文档编译成论文。</p>

<p>这个插件只是 Pandoc 的使用配置接口，需要在系统中手动安装 <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a>，OS X 下我使用 <code>brew install pandoc</code> 安装。我们要用到的两个命令是 <code>pandoc</code> 和 <code>pandoc-citeproc</code>。除了 Pandoc，我们还需要配置 Latex 编译环境，我使用的是 <a href="http://tug.org/texlive/">TeX Live</a>。</p>

<p>接下来配置 Pandoc 插件：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Pandoc 配置</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nt">&quot;default&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="err">**</span><span class="nt">&quot;pandoc-path&quot;</span><span class="p">:</span> <span class="s2">&quot;/usr/local/bin/pandoc&quot;</span><span class="err">**</span><span class="p">,</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&quot;transformations&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="err">...</span>
</span><span class="line">
</span><span class="line">      <span class="nt">&quot;PDF&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="nt">&quot;text.html&quot;</span><span class="p">:</span> <span class="s2">&quot;html&quot;</span><span class="p">,</span>
</span><span class="line">          <span class="nt">&quot;text.html.markdown&quot;</span><span class="p">:</span> <span class="s2">&quot;markdown&quot;</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="nt">&quot;pandoc-arguments&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">          <span class="s2">&quot;-t&quot;</span><span class="p">,</span> <span class="s2">&quot;pdf&quot;</span><span class="p">,</span> <span class="err">**</span><span class="s2">&quot;--latex-engine=/usr/texbin/pdflatex&quot;</span><span class="err">**</span><span class="p">,</span>
</span><span class="line">          <span class="err">**</span><span class="s2">&quot;--filter=/usr/local/bin/pandoc-citeproc&quot;</span><span class="err">**</span><span class="p">,</span>
</span><span class="line">          <span class="err">**</span><span class="s2">&quot;--bibliography=/Users/frank/Documents/Mendeley/reference.bib&quot;</span><span class="err">**</span>
</span><span class="line">        <span class="p">]</span>
</span><span class="line">      <span class="p">},</span>
</span><span class="line">
</span><span class="line">      <span class="nt">&quot;Microsoft Word&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">&quot;scope&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">          <span class="nt">&quot;text.html&quot;</span><span class="p">:</span> <span class="s2">&quot;html&quot;</span><span class="p">,</span>
</span><span class="line">          <span class="nt">&quot;text.html.markdown&quot;</span><span class="p">:</span> <span class="s2">&quot;markdown&quot;</span>
</span><span class="line">        <span class="p">},</span>
</span><span class="line">        <span class="nt">&quot;pandoc-arguments&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">          <span class="s2">&quot;-t&quot;</span><span class="p">,</span> <span class="s2">&quot;docx&quot;</span><span class="p">,</span>
</span><span class="line">          <span class="err">**</span><span class="s2">&quot;--filter=/usr/local/bin/pandoc-citeproc&quot;</span><span class="err">**</span><span class="p">,</span>
</span><span class="line">          <span class="err">**</span><span class="s2">&quot;--bibliography=/Users/frank/Documents/Mendeley/reference.bib&quot;</span><span class="err">**</span>
</span><span class="line">        <span class="p">]</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&quot;pandoc-format-file&quot;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&quot;docx&quot;</span><span class="p">,</span> <span class="s2">&quot;epub&quot;</span><span class="p">,</span> <span class="s2">&quot;pdf&quot;</span><span class="p">,</span> <span class="s2">&quot;odt&quot;</span><span class="p">]</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改内容以 ** 标出，主要是指定相关命令、文件的路径作为 pandoc 命令的参数。</p>

<p>Shift + Command + P 调出 Command Palette，输入 Pandoc、选择 PDF 作为输出格式即可，这是一个<a href="http://frank19900731.github.io/downloads/file/sample-paper.pdf">示例</a>。</p>

<h2 id="section">参考文档</h2>

<ul>
  <li><a href="http://blog.cigrainger.com/2014/07/pandoc-markdown.html">Writing academic papers in Markdown using Pandoc</a></li>
  <li><a href="http://nikolasander.com/writing-in-markdown/">Writing academic papers in Markdown using Sublime Text and Pandoc</a></li>
  <li><a href="https://blog.mariusschulz.com/2014/12/16/how-to-set-up-sublime-text-for-a-vastly-better-markdown-writing-experience">How to Set Up Sublime Text for a Vastly Better Markdown Writing Experience</a></li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/">http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Paste]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/"/>
    <updated>2015-04-11T14:07:26+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/">http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 TexPad]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/07/mei-zhou-yi-ruan-zhi-texpad/"/>
    <updated>2015-04-07T13:12:18+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/07/mei-zhou-yi-ruan-zhi-texpad</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/07/mei-zhou-yi-ruan-zhi-texpad/">http://frank19900731.github.io/blog/2015/04/07/mei-zhou-yi-ruan-zhi-texpad/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 GeekTool]]></title>
    <link href="http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/"/>
    <updated>2015-03-30T19:48:49+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/">http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Curio]]></title>
    <link href="http://frank19900731.github.io/blog/2015/03/23/mei-zhou-yi-ruan-zhi-curio/"/>
    <updated>2015-03-23T00:36:42+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/03/23/mei-zhou-yi-ruan-zhi-curio</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/03/23/mei-zhou-yi-ruan-zhi-curio/">http://frank19900731.github.io/blog/2015/03/23/mei-zhou-yi-ruan-zhi-curio/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Soulver]]></title>
    <link href="http://frank19900731.github.io/blog/2015/03/15/mei-zhou-yi-ruan-zhi-soulver/"/>
    <updated>2015-03-15T18:21:49+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/03/15/mei-zhou-yi-ruan-zhi-soulver</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a>    <ul>
      <li><a href="#section-6">普通计算器</a></li>
      <li><a href="#section-7">交互式编程环境</a></li>
    </ul>
  </li>
  <li><a href="#section-8">闪光点</a></li>
  <li><a href="#section-9">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.acqualia.com/soulver/">Soulver</a> 是一款智能计算器，允许<strong>计算公式与文档混排</strong>，提供汇率与股价的查询计算、变量定义、结果引用、版本保存、简单统计等功能。</p>

<p>下面先以软件自带样例文件具体介绍其功能。</p>

<p>Soulver 使用文档保存计算过程，文档格式为 XML，可导出 PDF 文件。</p>

<p>这幅图显示了文档块定义（比如 Simple Math 粗体）、简单计算、以语义表示的计算、注释以及汇率转换、单位转换的用法。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/13.png" class="img-up" title="Soulver 使用样例一"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/13.png" width="100%" title="Soulver 使用样例一" /></a></p>

<!-- excerpt end -->

<p>这幅图显示了结果引用、变量、股票价格、函数的用法。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/14.png" class="img-up" title="Soulver 使用样例二"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/14.png" width="100%" title="Soulver 使用样例二" /></a></p>

<p>结果引用、汇率、股票价格都是<strong>依赖某一个数值</strong>，当依赖值改变，使用此依赖值的计算结果也会随之变化。我们需要做的仅是列写公式，更新依赖值。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/15.png" class="img-up" title="汇率值、股票价格更新"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/15.png" width="90%" title="汇率值、股票价格更新" /></a></p>

<p>上图 Variables 窗格中可以定义<strong>全局变量</strong>，对每个计算文档生效。</p>

<p>可以在设置中修改支持中文输入，如下图所示。计算时可以切换弧度制、角度制，设置小数点保留精度。点击 Answer Palette 可以看到结果的其它表示形式，角度、分数、十进制、二进制、十六进制等。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/16.png" class="img-up" title="Soulver 使用样例三"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/16.png" width="100%" title="Soulver 使用样例三" /></a></p>

<p>Soulver 所支持的函数列表、逻辑计算、单位换算表等详见 Reference。</p>

<h2 id="section-1">界面设计</h2>

<p>界面设计美观，自定义方便。</p>

<h2 id="section-2">易用性</h2>

<p>容易使用，参考 Reference 即可。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好，有一个瑕疵见 <a href="#section-8">缺点</a> 第三条。</p>

<h2 id="section-4">跨平台</h2>

<p>提供 iOS 版本。</p>

<h2 id="section-5">类似软件</h2>

<h3 id="section-6">普通计算器</h3>

<ul>
  <li>Mac 自带计算器，可放置于边栏；</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/19.png" class="img-up" title="Mac 自带计算器"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/19.png" width="40%" title="Mac 自带计算器" /></a></p>

<ul>
  <li>
    <p><a href="https://itunes.apple.com/cn/app/numeric/id564960788?mt=12">Numeric</a> 特点是将输入区域映射到触摸板上，不必移动鼠标点击；</p>
  </li>
  <li>
    <p><a href="https://itunes.apple.com/us/app/addism-the-calculator/id943947757?mt=12">Addism</a> 可进行简单的科学计算，可以保存、分享结果；</p>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/18.png" class="img-up" title="Addism 界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/18.png" width="80%" title="Addism 界面" /></a></p>

<ul>
  <li><a href="http://getnumi.info/">Numi</a> 运行于菜单栏，和 Soulver 类似，也支持以语义定义简单计算。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/17.png" class="img-up" title="Numi 界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/17.png" width="70%" title="Numi 界面" /></a></p>

<h3 id="section-7">交互式编程环境</h3>

<p>对于理工科同学来说，以上计算功能还是不够的，一般会采用专门软件或编程语言，比如 Matlab、Mathematica、R、C、Python 等。<strong>联系 Soulver 文档与计算混排的特点</strong>，在相似软件中我推荐 <a href="http://yihui.name/knitr/">knitr</a> 和 <a href="http://ipython.org/notebook.html">iPython notebook</a>，可分别配合 R 与 Python 使用，<strong>用于生成图文数据详实的报告</strong>。此外，RStudio 提供了 <a href="http://www.rstudio.com/products/rstudio/download-server/">RStudio Server</a>，可以架设在个人服务器上提供网络访问，应付普通计算任务绰绰有余。</p>

<h2 id="section-8">闪光点</h2>

<ul>
  <li>计算公式与文档混排，方便阅读、理解；</li>
  <li>单位转换、汇率、股价等功能实用。</li>
</ul>

<h2 id="section-9">缺点</h2>

<ul>
  <li>函数库仍需扩展，min、max 函数竟都没有；</li>
  <li>无法进行条件判断，功能受限；</li>
  <li>文档中有大数字计算时，输入会异常卡顿，推测软件隔段时间计算文档每一行的结果，即便该行及该行的依赖未改变，应当予以优化。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/03/15/mei-zhou-yi-ruan-zhi-soulver/">http://frank19900731.github.io/blog/2015/03/15/mei-zhou-yi-ruan-zhi-soulver/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 FocusMask]]></title>
    <link href="http://frank19900731.github.io/blog/2015/03/08/mei-zhou-yi-ruan-zhi-focusmask/"/>
    <updated>2015-03-08T20:39:54+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/03/08/mei-zhou-yi-ruan-zhi-focusmask</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://tentrip.net/focusmask/">FocusMask</a> 是一款效率软件，通过在屏幕上隔离出某一区域（其它区域被遮罩），使用户专注于某项工作，比如隔离出编辑环境以专注写作。</p>

<p>FocusMask 虽然只是一招鲜，但个人觉得它提供的<strong>遮罩功能</strong>在日常工作学习中还是很实用的。类似于截图，FocusMask 的遮罩区域可以是框定的，也可以是当前窗口或视图，均可由快捷键触发。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/10.png" class="img-up" title="FocusMask 设置"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/10.png" width="80%" title="FocusMask 设置" /></a></p>

<!-- excerpt end -->

<p>以 Byword 写作为例，选定工作区域，之外的区域被遮罩。可以<strong>调整遮罩层的透明度</strong>，设定<strong>是否允许在工作区域外点击鼠标</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/11.png" class="img-up" title="区域框定"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/11.png" width="90%" title="区域框定" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/12.png" class="img-up" title="运行效果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/12.png" width="90%" title="运行效果" /></a></p>

<p>如此，菜单栏、Docker 以及通知栏均不可见，可以在编辑区域安心工作了……</p>

<h2 id="section-1">界面设计</h2>

<p>界面设计简陋。</p>

<h2 id="section-2">易用性</h2>

<p>易于使用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>无。</p>

<h2 id="section-5">类似软件</h2>

<p>迫使用户专注的一般做法是<code>屏蔽</code>。</p>

<p><code>视觉屏蔽</code>，比如 FocusMask，又比如 <a href="http://willmore.eu/software/isolator/">Isolator</a>，后者将工作区域设置为处于输入焦点的软件，之外的区域同样是遮罩。Isolator 相比 FocusMask 为遮罩提供了更多选项，可以设置颜色，也可以设置滤镜，不过滤镜功能在 OS X 10.8 及以上的系统中已无法使用。</p>

<p><code>听觉屏蔽</code>，推荐 <a href="https://coffitivity.com/">Coffitivity</a>，播放咖啡馆白噪音，网页版、PC 客户端、移动版均有提供。</p>

<p>比<code>视觉屏蔽</code>、<code>听觉屏蔽</code>更彻底的是<code>接触屏蔽</code>，比如禁止浏览器对某些网址的访问，禁止某时段某些软件的开启。</p>

<ul>
  <li>命令行工具
    <ul>
      <li><a href="https://github.com/amoffat/focus">Focus</a>，Python 编写，可屏蔽网址；</li>
      <li><a href="https://github.com/xtrementl/focus">Focus</a>，Python 编写，是一款强大的<strong>任务管理工具</strong>，除了可以屏蔽网址、软件，还可以给任务关联需要开启的软件、需要运行的脚本，也可以记录工作时间，生成简单的报告，称得上是极客工具；</li>
    </ul>
  </li>
  <li>图形界面工具
    <ul>
      <li><a href="http://selfcontrolapp.com/">SelfControl</a> ，<a href="https://github.com/SelfControlApp/selfcontrol">开源软件</a>，可屏蔽网址；</li>
      <li><a href="http://www.publicspace.net/Vitamin-R/">Vitamin-R</a>，大体是一款番茄工作法工具，可记录工作历史并生成图表，可于工作时段屏蔽指定软件，也可播放咖啡馆白噪音；</li>
      <li><a href="https://heyfocus.com/">Focus</a> ，屏蔽指定网址、软件，也可以在命令行操作，曾是 <a href="https://github.com/bradjasper/Focus">开源软件</a>。</li>
    </ul>
  </li>
</ul>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>工作区域选择方式多样；</li>
  <li>可以屏蔽工作区域外的鼠标点击。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>遮罩区域样式单一，应允许自定义背景。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/03/08/mei-zhou-yi-ruan-zhi-focusmask/">http://frank19900731.github.io/blog/2015/03/08/mei-zhou-yi-ruan-zhi-focusmask/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Smart Scroll]]></title>
    <link href="http://frank19900731.github.io/blog/2015/03/01/mei-zhou-yi-ruan-zhi-smart-scroll/"/>
    <updated>2015-03-01T12:32:51+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/03/01/mei-zhou-yi-ruan-zhi-smart-scroll</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.marcmoini.com/sx_en.html">Smart Scroll</a> 一款<strong>鼠标/触摸板辅助软件</strong>，为滚轮或面板的滚动操作添加智能因素，显示于 System Preferences 面板中。</p>

<p>Smart Scroll 主要有六大功能，与其界面设计相对应。</p>

<ul>
  <li>Scroll Wheel（鼠标设备） 设置
    <ul>
      <li>调节滚动的速度、方向（Reverse）、距离（Range for a single tick）与惯性（Inertia+）；</li>
      <li>测试表明，<strong>在不同速度设置下</strong>，<strong>均可以实现平滑滚动</strong>；</li>
      <li>Multi-Touch（触摸设备）中的功能设置同 Scroll Wheel。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.png" class="img-up" title="Scroll Wheel+"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/1.png" width="80%" title="Scroll Wheel+" /></a></p>

<!-- excerpt end -->

<ul>
  <li>Hover Scroll
    <ul>
      <li>可以设置窗口上下各一定区域，使得鼠标指针在该区域悬停时，窗口自动向上或向下滚动，速度可调整；</li>
      <li>鼠标指针越接近窗口上/下部，窗口向上/下滚动的速度越快（<strong>可能引发视觉抖动</strong>）；</li>
      <li>测试表明，鼠标指针需要<strong>以慢速进入设定区域</strong>，过快则无法触发 Hover Scroll。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/3.png" class="img-up" title="Hover Scroll"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/3.png" width="80%" title="Hover Scroll" /></a></p>

<ul>
  <li>Auto Scroll
    <ul>
      <li>基于 Hover Scroll，以快捷键触发，鼠标指针被自动移到窗口下部，触发向下滚动操作。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/4.png" class="img-up" title="Auto Scroll"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/4.png" width="80%" title="Auto Scroll" /></a></p>

<ul>
  <li>Grab Scroll
    <ul>
      <li>仅支持鼠标，拖拽页面滚动，类似于 <strong>PDF 阅读器中的手形图标拖动效果</strong>；</li>
      <li>同样可以调节速度、方向与惯性；</li>
      <li>Grab Scroll 可以采用快捷键+鼠标键的方式触发，以下图 <code>Option + Command + Secondary Button</code> 这一组合为例，需要先按下 Option 并<strong>保持</strong>，然后点击 Command（<strong>需抬起</strong>），之后按下鼠标右键方可拖动……</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/5.png" class="img-up" title="Grab Scroll"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/5.png" width="80%" title="Grab Scroll" /></a></p>

<ul>
  <li>Scroll Keys
    <ul>
      <li>滚动的快捷键操作，上下左右类似于箭头方向键；</li>
      <li>测试表明，快捷键滚动比箭头方向键滚动<strong>步长更细</strong>，<strong>也更平滑</strong>；</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/6.png" class="img-up" title="Scroll Keys"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/6.png" width="80%" title="Scroll Keys" /></a></p>

<ul>
  <li>Vector Scroll
    <ul>
      <li>仅支持鼠标，鼠标键的点击释放构成向量，向量方向确定滚动方向，向量的模确定滚动速度；</li>
      <li>如果设置 Secondary Button 触发，则右键菜单无法弹出，只能通过 Ctrl + Primary Button（鼠标左键） 查看。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/7.png" class="img-up" title="Vector Scroll"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/7.png" width="80%" title="Vector Scroll" /></a></p>

<h2 id="section-1">界面设计</h2>

<p>界面设计较美观。</p>

<h2 id="section-2">易用性</h2>

<p>用法简单，只是初始需要设置适合自己使用习惯的参数。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>无。</p>

<h2 id="section-5">类似软件</h2>

<p>作为鼠标/触摸板辅助软件中的一款，Smart Scroll 专注于<strong>滚动的定制优化</strong>，而实际上这些设备有待发掘的远不止于此，以下两款软件可以提供更加丰富实用的定制功能。</p>

<ul>
  <li><a href="http://www.jitouch.com/">Jitouch</a> 也是安装后位于 System Preferences 中的一款软件，支持鼠标/触摸板手势、字符笔画识别，并可<strong>关联动作/快捷键</strong>。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/8.png" class="img-up" title="Jitouch"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/8.png" width="80%" title="Jitouch" /></a></p>

<ul>
  <li><a href="http://www.boastr.de/">Better Touch Tool</a> 是一款功能更加强大的辅助工具，几乎涵盖了 Smart Scroll、Jitouch 的所有功能，可定制项很多，有一种<strong>视觉压迫感</strong>，一看就是给 Geek 用的……
    <ul>
      <li>支持鼠标、触摸板、键盘快捷键、Apple Remote、Better Touch Tool 移动端（iOS）等的辅助功能定制；</li>
      <li>手势、动作远较 Jitouch 丰富，也正因为多，<strong>一些手势的识别准确性会降低</strong>，<strong>定制项目多也更容易引发误操作</strong>。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-3/9.png" class="img-up" title="Better Touch Tool"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-3/9.png" width="80%" title="Better Touch Tool" /></a></p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>滚动速度可调，且效果平滑，Hover Scroll 与 Scroll Keys 也能做到平滑滚动。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>Grab Scroll、Vector Scroll 只能配合鼠标使用，对于只用触摸板的用户就鸡肋了，但这些功能完全可以配合触摸板使用（严格说 Vector Scroll 已经可以配合触摸板使用，但只能使用 Secondary Button 触发，而之前我们提到这会影响右键菜单的查看）；</li>
  <li>Hover Scroll 速度快时有轻微抖动（当然，<strong>也很可能是我显卡差</strong>）。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/03/01/mei-zhou-yi-ruan-zhi-smart-scroll/">http://frank19900731.github.io/blog/2015/03/01/mei-zhou-yi-ruan-zhi-smart-scroll/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[返校途中关于学生票的小插曲]]></title>
    <link href="http://frank19900731.github.io/blog/2015/02/27/fan-xiao-tu-zhong-guan-yu-xue-sheng-piao-de-xiao-cha-qu/"/>
    <updated>2015-02-27T12:57:30+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/02/27/fan-xiao-tu-zhong-guan-yu-xue-sheng-piao-de-xiao-cha-qu</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">起因</a></li>
  <li><a href="#section-1">思考</a></li>
  <li><a href="#section-2">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">起因</h2>

<p>春运期间往返北京、大连，购买了两张高铁学生票，而这也成了麻烦的开始。</p>

<p>日常出行大多不是此优惠区间段，再加上订票已近两月，所以我习惯性地只是携带了学校的 IC 卡，而非<strong>带有优惠磁条的学生证</strong>。等到想要在自动取票机取出车票的时候，才发现学生证未带，遭遇取票不能的尴尬。</p>

<p>北京南站的服务台的一位工作人员帮我把票取出，并“严厉”叮嘱我上车补票，又说<strong>从大连站回来也要经此流程</strong>。我虚心接受她的批评，感谢她的帮助，因为最根本的还是自己的疏忽。在高铁上，我主动联系列车员补足票款。</p>

<p>节后，当我以为可以按照这样的流程从大连回京时，却被车站人员告知无法取票，只能<strong>退票后再买</strong>，此时距离发车时间已不足两小时。在这样一个春运回程高峰时段，连<strong>省内（如沈阳）、河北、天津的车票都早已售罄</strong>，我又怎么可能退票后再买到回北京车票呢。</p>

<p>几番央求不过，只能拨打沈阳铁路局 12306 得到的是同样的答复，并被告知，<strong>在北京南站帮助我的工作人员是违规操作</strong>。无奈，我只得退票，一方面是个人减少点损失，另一方面也不占用这宝贵的车票资源。之后尝试把这张票刷回，可想而知是徒劳无功的。最后，改乘飞机总算是在当天返回北京。</p>

<p>事后，我反复琢磨车站<strong>要求退票而不能补票</strong>的原因。限于能力，我实在想不出退票比补票更高明的地方。这当中究竟如何更好地弥补了制度漏洞、<strong>保障了铁路系统和购票乘车人员的权利</strong>呢？我不得而知，反而生发了一连串的疑问。带着这样的疑问，我连续拨打了 12306 的电话咨询，虽然话务员帮我厘清了一些疑难，但也无法解释规定背后的考虑与用意，把截至目前的问答结果记录如下。</p>

<!-- excerpt end -->

<h2 id="section-1">思考</h2>

<ul>
  <li><strong>学生未带学生证需要退票重新购买 这一规定的出处在哪里？</strong></li>
</ul>

<p><a href="http://www.12306.cn/mormhweb/kygfwj/flgz/201001/t20100123_1208.html">《铁路旅客运输规程》</a>中规定</p>

<blockquote>
  <p>下列情况不能发售学生票：</p>

  <p>1．学校所在地有学生父或母其中一方时；</p>

  <p>2．学生因休学、复学、转学、退学时；</p>

  <p>3．学生往返于学校与实习地点时；</p>

  <p>4．学生证未按时办理学校注册的；</p>

  <p>5．学生证优惠乘车区间更改但未加盖学校公章的；</p>

  <p>6．没有“学生火车票优惠卡”、“学生火车票优惠卡”不能识别或者与学生证记载不一致的。</p>
</blockquote>

<p>我的情况属于第六条。</p>

<p>所谓<strong>退票重新购买</strong>并未明文写在《规程》中，而是这一规定的一个自然推论。既然没法取票，那按照人之常情，只能先退了，再买一张。</p>

<ul>
  <li><strong>接第二十条，发售意为出售，我在网上已然和铁路部门达成了学生票购票交易，如何解释？</strong></li>
</ul>

<p>网上购买时，<strong>没有相关手段进行学生证认证</strong>，<strong>凭购票人自觉自检</strong>。</p>

<p>愚见是，既然无法验证学生证，而铁路系统的工作人员又是这么认真的贯彻执行《规程》，那么在网上售卖学生票是不是有些违规？<strong>持学生证到火车站或指定代售点购买学生票</strong>才是唯一合规的购买方式吧。</p>

<p>此外，《规程》第四十四条规定</p>

<blockquote>
  <p>有下列行为时，除按规定补票，核收手续费以外，铁路运输企业有权对其身份进行登记，并须加收已乘区间应补票价50％的票款：</p>

  <p>1．无票乘车时，补收自乘车站（不能判明时自始发站）起至到站止车票票价。持失效车票乘车按无票处理。</p>

  <p>2．持用伪造或涂改的车票乘车时，除按无票处理外并送交公安部门处理。</p>

  <p>3．持站台票上车并在开车20分钟后仍不声明时，按无票处理。</p>

  <p>4．持用低等级的车票乘坐高等级列车、铺位、座席时，补收所乘区间的票价差额。</p>

  <p>5．旅客持儿童票、学生票、残疾军人票没有规定的减价凭证或不符合减价条件时，按照全价票价补收票价差额。</p>
</blockquote>

<p>根据这条规定的第5点，虽然我在网上付款购得学生票一张，但因为我<strong>不持有车票实体</strong>（隐约记得一些车站可以刷身份证进入，不需要报销的话就不用取出车票实体），所以无法将学生票补成全价票。即便我持有这张票也还是不代表我持有的是学生票，那<strong>铁道部门是如何认定以学生身份购买学生票的呢</strong>？</p>

<ul>
  <li>网上购买学生票
    <ul>
      <li><strong>不能确认</strong>，是个人就能在网上买学生票。</li>
    </ul>
  </li>
  <li>凭学生证到火车站或代售点购票，出票成功
    <ul>
      <li><strong>不能确认</strong>，因为上车时还要再次检查学生证，如果未带学生证需补票。</li>
    </ul>
  </li>
  <li>拿着学生票上车且出示学生证
    <ul>
      <li><strong>可以确认</strong>。</li>
    </ul>
  </li>
</ul>

<p>问题又来了，是列车员具有火眼金睛还是别的什么，让最后一个步骤得以一锤定音呢？此外，与身边同学的交谈中得知，在一些乘车经历中，他们并未被列车员要求出示学生证。</p>

<ul>
  <li><strong>小孩子买半票，但实际身高测量显示需要买全票，此时为什么可以补票而非退票再买？</strong></li>
</ul>

<p>《规程》第四十五条规定</p>

<blockquote>
  <p>第四十五条　有下列情况时补收票价，核收手续费：</p>

  <p>1．应买票而未买票的儿童按第十九条规定补收票价。身高超过1.5米的儿童使用儿童票乘车时，应补收儿童票价与全价票价的差额。</p>

  <p>….</p>
</blockquote>

<p>在咨询这一问题的时候，一位话务员的解答中还包含了一个概念错误——他说儿童票非实名制。我询问了身边的孩子家长，他们表示还是需要身份证明的，比如出生证明、户口本、身份证、护照等。如果不是实名制，那岂不给拐卖儿童开了方便之门……</p>

<ul>
  <li><strong>如果带了学生证，但磁条不知何故消磁，也无法取票，是否需要退票重购？</strong></li>
</ul>

<p>是的。</p>

<ul>
  <li><strong>身份证丢失可以补办临时乘车证明，学生证可以补办证明么？</strong></li>
</ul>

<p>不可以。</p>

<ul>
  <li><strong>北京南站帮我取票的工作人员是否涉嫌违规？</strong></li>
</ul>

<p><strong>是违规操作</strong>，<strong>在她帮我取票后</strong>，<strong>我有权检举揭发</strong>。</p>

<p>我终于明白大连站的工作人员不帮我取票的原因了，他们大概怕我是个具有正义感的乘客，把他们告发举报了。<strong>不知道是谁（什么）扭曲了谁（什么）</strong>。</p>

<ul>
  <li><strong>按照《规程》规定，似乎只有退票一种选择，相比补票，可否举例说明其优越性？</strong></li>
</ul>

<p>无法解释。<strong>既然选择乘坐铁路出行</strong>，<strong>就要遵守相关规定</strong>。</p>

<p>听到这里，我心头一紧，猛然想到，乘坐汽车、飞机、轮船都有不同公司可以选择，唯独铁路不能呀。</p>

<p>在我看来，在互联网上购买学生票，<strong>除票价稍有优惠</strong>，<strong>无论是从购票速度还是公平性等角度而言</strong>，<strong>学生票都不具备值得提防的特权</strong>。且在车票实名制的今天，依个人浅见，<strong>补票似无法达到车票过户的目的</strong>，那么在相关条例规定下不得不退票重购的“艰难抉择”，又是给谁谋了福祉呢？</p>

<h2 id="section-2">总结</h2>

<p>已经顺利返校，本不必再为此事计较，权当丰富人生阅历，吸取教训即可，更何况毕业在即，再也不会有用到学生票的场景了。不过面对自己琢磨不透的规定，工科生的死理性的毛病又发作起来。在网上查询相关内容，发现有相当一些人与我有类似经历，既然有一定的普遍性，那还是有必要把原因搞清楚。</p>

<p>作为未携带学生证的一方，我自认<strong>理应受到相应的惩罚</strong>，不过如果补票、交罚金的做法能够妥善处理此事，那<strong>退票重购的代价是不是有些重了</strong>？如果不得不退票重购，我也希望获得一个合理的解释。目前看来，12306 客服热线没有办法回答我这一问题，而我此类经验又不多，正考虑借助媒体的力量。</p>

<p>当我感叹自己生活在这样一个日新月异的互联网时代，移动支付、新年红包等手段大行其道的时候，我也不得不面对这样一种现实：学生票优惠凭证还无法与身份证绑定，只是一张可能被消磁的磁条。</p>

<p>想到春节期间新闻报道中，一些 <a href="http://news.sina.com.cn/o/2015-02-15/031931522395.shtml">高速收费处车辆排队200米却不免费放行的新闻</a>，我大约明白了，<strong>权利不是谁授予的</strong>，<strong>而是自己争取的</strong>。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/02/27/fan-xiao-tu-zhong-guan-yu-xue-sheng-piao-de-xiao-cha-qu/">http://frank19900731.github.io/blog/2015/02/27/fan-xiao-tu-zhong-guan-yu-xue-sheng-piao-de-xiao-cha-qu/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 VideoGIF]]></title>
    <link href="http://frank19900731.github.io/blog/2015/02/20/mei-zhou-yi-ruan-zhi-videogif/"/>
    <updated>2015-02-20T19:46:58+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/02/20/mei-zhou-yi-ruan-zhi-videogif</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.pearlmountainsoft.com/videogif/">VideoGIF</a> 是一款截取视频内容生成 GIF (Graphics Interchange Format) 格式图片的工具。</p>

<p>VideoGIF 支持</p>

<ul>
  <li>摄像头视频采集；</li>
  <li>拖拽选择待转换内容的起止时间点；</li>
  <li>区域裁剪，自定义图像尺寸；</li>
  <li><strong>添加文字、图像元素</strong>，并设定出现的起止时间；</li>
  <li>调整图片色彩指标，包括亮度、对比度等；</li>
  <li>导出 GIF 时设定帧率/帧数+延迟，可自动优化文件体积。</li>
</ul>

<!-- excerpt end -->

<p><strong>功能界面</strong>：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-2/16.png" class="img-up" title="功能界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/16.png" width="90%" title="功能界面" /></a></p>

<p><strong>导出界面</strong>：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-2/17.png" class="img-up" title="导出界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/17.png" width="90%" title="导出界面" /></a></p>

<p>VideoGIF 可以帮助我们方便地从影视作品中导出<strong>精（dou）彩（bi）</strong>片段，或从录屏中导出一段演示。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-2/2.gif" class="img-up" title="逗比片段"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/2.gif" width="80%" title="逗比片段" /></a></p>

<p>除视频外，我们可能还需要将多幅图片拼成 GIF，VideoGIF 的制作方相应提供了 <a href="http://www.pearlmountainsoft.com/picgif/">PicGIF</a>，会在 <a href="#section-5">类似软件</a> 中提到。</p>

<h2 id="section-1">界面设计</h2>

<p>简洁美观。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-2/18.png" class="img-up" title="VideoGIF 界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/18.png" width="80%" title="VideoGIF 界面" /></a></p>

<h2 id="section-2">易用性</h2>

<p>使用方便，会拖拽起止范围、会设置总帧数/帧率即可。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>无。</p>

<h2 id="section-5">类似软件</h2>

<ul>
  <li><a href="http://www.pearlmountainsoft.com/picgif/">PicGIF</a>，根据多幅图片生成 GIF，基本功能如裁剪、调色等同 VideoGIF，也<strong>支持视频输入</strong>，会首先根据用户的起止时间和帧率/帧数设置从视频中提取相应数量的图片，之后处理同多幅图片；</li>
  <li><a href="http://www.helloresolven.com/portfolio/gifbrewery/">GIF Brewery</a>，除界面（略丑），功能与 VideoGIF 完全一致……</li>
  <li><a href="http://www.cockos.com/licecap/">LICEcap</a>，<strong>录屏 + 转 GIF</strong>，损失一些定制灵活性，但操作快捷；</li>
  <li><strong>Photoshop</strong> 可将多幅图片转 GIF，网上有相关 <a href="http://jingyan.baidu.com/article/9158e0006047daa2541228f3.html">教程</a>；</li>
  <li>威锋网上有一篇 <a href="http://bbs.feng.com/read-htm-tid-6980293.html">Mac 下 GIF 制作软件</a> 的讨论，其中的软件在功能、界面上都不超过 VideoGIF、PicGIF；</li>
  <li><strong>命令行工具</strong>，<a href="https://www.ffmpeg.org/">ffmpeg</a>（根据视频生成 GIF 动画）、<a href="http://www.lcdf.org/~eddietwo/gifsicle/">gifsicle</a>（GIF 的创建、拆解、编辑、优化等）
    <ul>
      <li>一个使用案例可见 <a href="http://www.ideawu.net/blog/archives/856.html">OS X 屏幕录制视频转 GIF 动画</a>。</li>
    </ul>
  </li>
</ul>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>功能完善，操作简便。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>不明白为什么要和 PicGIF 分为两个软件，就为了多挣一分钱么……</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/02/20/mei-zhou-yi-ruan-zhi-videogif/">http://frank19900731.github.io/blog/2015/02/20/mei-zhou-yi-ruan-zhi-videogif/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 SiteSucker]]></title>
    <link href="http://frank19900731.github.io/blog/2015/02/12/mei-zhou-yi-ruan-zhi-sitesucker/"/>
    <updated>2015-02-12T01:38:02+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/02/12/mei-zhou-yi-ruan-zhi-sitesucker</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.sitesucker.us/mac/mac.html">SiteSucker</a> 是一款站点下载软件，<strong>复制站点结构</strong>，<strong>下载相关资源文件</strong>，包括 HTML、JS、CSS、图片、视频等，以方便离线查看。</p>

<p>离线查看主要有两种原因，一种是觉得很有价值，比如 API 文档，需要随时查看；另一种就是网页反应太慢，不如一次性下载完成，本地快速查看。基于第二种原因，我用 SiteSucker 对 <a href="https://www.openproject.org/">OpenProject 站点</a> 做了 <a href="http://frank19900731.github.io/ebook/openproject/">镜像</a>，看起来不错的样子。</p>

<p>作为一款爬虫软件，SiteSucker 的下载设置和 wget、curl 等命令行工具的参数设置是相似的，它的优势主要体现在：</p>

<ol>
  <li>图形化界面操作，免除参数记忆，配置可以保存再利用；</li>
  <li>可以方便地暂停、继续、终止、保存抓取过程；</li>
  <li>自带详细的日志输出，为参数调整提供有价值的参考。</li>
</ol>

<p>图形界面设置的精细程度毕竟不如命令行工具，不过对于常见的教程备份、博客备份等需求，我觉得还是绰绰有余的；而更复杂的任务，可能需要<strong>根据抓取结果迭代调整参数设置</strong>来完成。对于一些 <strong>JS 效果复杂</strong>的网页，可能不仅是 SiteSucker，连 wget 都无法胜任了（因为没法模拟一些人为操作去获取链接）。</p>

<!-- excerpt end -->

<p>接下来，我大概从一个用户需求的角度介绍 SiteSucker 的功能。</p>

<ul>
  <li><strong>首先指定种子 url 作为起始，从抓取页面中提取新的 url 作为接下来的抓取目标，可想而知这个过程可能无穷尽的进行下去，如何界定范围？</strong>
    <ul>
      <li>SiteSucker 对 <code>Path Constraints</code> 提供 5 种设置，假设种子 url 是 http://frank19900731.github.io/wx/archives/
        <ul>
          <li><strong>None</strong>  无限制 ；</li>
          <li><strong>Host</strong>  与种子 url 属同一个（子）域，即 http://frank19900731.github.io/*；</li>
          <li><strong>Subdomains</strong>   可以是其它子域（也包括父域），比如 http://hello.github.io/<em>，http://github.io/</em>，但不可以是国家代码子域，比如（如果有的话）http://frank19900731.github.io.hk；</li>
          <li><strong>Directory</strong>  与种子 url 属于统一路径，即 http://frank19900731.github.io/wx/archives/*；</li>
          <li><strong>Paths Settings</strong>  当前 url + 自定义 <code>Paths Settings</code>。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>接上条，如何自定义</strong> <code>Paths Settings</code> <strong>?</strong>
    <ul>
      <li><code>Paths to Include</code> &amp; <code>Paths to Exclude</code>，顾名思义定义希望被抓取/不希望被抓取的模式；</li>
      <li>可以采用正则表达式定义；</li>
      <li>不论 <code>Path Constraints</code> 的选择，<code>Paths Settings</code> 始终是生效的，引用 <a href="http://ricks-apps.com/osx/sitesucker/archive/2.x/2.6.x/2.6/manuals/en/pgs/Overview.html">官方教程</a> 的一段话总结 <strong>SiteSucker 如何判定一个 url 是否该被抓取</strong>：</li>
    </ul>
  </li>
</ul>

<blockquote>
  <p>If this is the <strong>original URL</strong> (that is, the URL specified in the Web URL text box), then SiteSucker downloads the file.</p>

  <p>Otherwise, if the URL begins with one of the strings (or matches one of the regular expressions) in the <strong>Paths to Exclude</strong> text box, then the file is not downloaded.</p>

  <p>Otherwise, if the URL meets the requirements of the current <strong>Path Constraint</strong> setting, then the file is downloaded.</p>

  <p>Otherwise, if the URL begins with one of the strings (or matches one of the regular expressions) in the <strong>Paths to Include</strong> text box, then SiteSucker downloads the file.</p>

  <p>Otherwise, if the <strong>Include Supporting Files</strong> setting is on and the URL references a non-HTML file type, then SiteSucker downloads the file.</p>

  <p>Otherwise, SiteSucker does not download the file.</p>
</blockquote>

<ul>
  <li><strong>设置了</strong>  <code>Path Constraints</code>、<code>Paths Settings</code>，<strong>但还是可能有抓取遗漏，如何查看漏抓 url ？</strong>
    <ul>
      <li>勾选 <code>Export External Links</code>，下载目录中名为 _ExternalLinks.html 的文件记录了漏抓 url，可以将他们填入 <code>Paths Settings</code>，重新抓取。</li>
    </ul>
  </li>
  <li><strong>一些网站需要登录才能抓取，在 SiteSucker 中如何处理？</strong>
    <ul>
      <li>一种登录方式是<strong>弹出框</strong>，比如路由器管理页面，SiteSucker 会首先查询 Keychain 中的密码记录，如果没有则弹出登陆框让用户输入；</li>
      <li>另一种登录方式是<strong>页面登录</strong>，比如人人网。菜单栏点击 Control -&gt; Open Browser 弹出浏览框，在浏览框中登录即可下载，如下图所示。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-2/14.png" class="img-up" title="登录下载"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/14.png" width="70%" title="登录下载" /></a></p>

<ul>
  <li><strong>不希望抓取某些类型的文件，比如压缩包、视频等，该如何设置？</strong>
    <ul>
      <li><code>File Types</code> 中选择 <code>Disallow Specified File Types</code>，然后指定相关文件类型。</li>
    </ul>
  </li>
  <li><strong>希望同时抓取多个网页，怎样设置连接数？</strong>
    <ul>
      <li>Preferences 中可以设置连接数，如下图。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-2/13.png" class="img-up" title="设置连接数"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/13.png" width="60%" title="设置连接数" /></a></p>

<ul>
  <li><strong>一些站点需要隔段时间抓去一次（比如博客），文件覆盖方式如何设置？</strong>
    <ul>
      <li><code>File Replacement</code> 提供三种选择
        <ul>
          <li><strong>Never</strong>  不覆盖；</li>
          <li><strong>Always</strong>  总是覆盖；</li>
          <li><strong>With Newer</strong>  保留较新的那个。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li><strong>如何将 HTML 中的文件链接（如 JS、CSS）修改为本地引用？</strong>
    <ul>
      <li><code>File Modification</code> 设置为 <strong>Localize</strong></li>
    </ul>
  </li>
  <li><strong>如何突破 robots.txt 的限制（不建议）？</strong>
    <ul>
      <li>勾选 <code>Ignore Robot Exclusions</code>。</li>
    </ul>
  </li>
  <li><strong>如何查看抓取日志？</strong>
    <ul>
      <li><code>Logs</code> 中勾选日志级别，log 文件会生成在已设置的下载文件夹中，有如下格式的记录。分析未抓取链接的原因，进行可能的参数调整。</li>
    </ul>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>SiteSucker 日志记录</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">2/12/15, 11:55:35 AM - MEDIA TYPE: <span class="s2">&quot;http://frank19900731.github.io/&quot;</span> has a media <span class="nb">type </span>of
</span><span class="line">	text/html
</span><span class="line">...
</span><span class="line">2/12/15, 11:55:35 AM - WARNING: Unable to download <span class="s2">&quot;http://blog.sina.com/frank19900731&quot;</span>,
</span><span class="line">	referenced from <span class="s2">&quot;http://frank19900731.github.io&quot;</span>,
</span><span class="line">	because its path is not allowed
</span><span class="line">2/12/15, 11:55:35 AM - WARNING: Unable to download <span class="s2">&quot;http://weibo.sina.com/frank19900731&quot;</span>,
</span><span class="line">	referenced from <span class="s2">&quot;http://frank19900731.github.io&quot;</span>,
</span><span class="line">	because its path is not allowed
</span><span class="line">...
</span><span class="line">2/12/15, 11:55:35 AM - WARNING: May not be able to follow all links on <span class="s2">&quot;http://frank19900731.github.io&quot;</span>
</span><span class="line">	because it uses JavaScript
</span><span class="line">2/12/15, 11:55:35 AM - HISTORY: Downloaded <span class="s2">&quot;http://frank19900731.github.io&quot;</span>
</span><span class="line">2/12/15, 11:55:35 AM - MEDIA TYPE: <span class="s2">&quot;http://frank19900731.github.io/favicon.ico&quot;</span> has a media <span class="nb">type </span>of
</span><span class="line">	image/x-icon
</span><span class="line">2/12/15, 11:55:36 AM - HISTORY: Downloaded <span class="s2">&quot;http://frank19900731.github.io/favicon.ico&quot;</span>
</span><span class="line">2/12/15, 11:55:36 AM - MEDIA TYPE: <span class="s2">&quot;http://frank19900731.github.io/javascripts/modernizr.custom.js&quot;</span> has a media <span class="nb">type </span>of
</span><span class="line">	application/javascript
</span><span class="line">...
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>其它参数诸如最大扩展层数、默认页面编码、超时设置等都是网页抓取的基本设置，不再讨论。更多功能使用详见 <a href="http://ricks-apps.com/osx/sitesucker/archive/2.x/2.6.x/2.6/manuals/en/pgs/Overview.html">官方教程</a>。</p>

<h2 id="section-1">界面设计</h2>

<p>简单直接。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-2/15.png" class="img-up" title="SiteSucker 界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/15.png" width="75%" title="SiteSucker 界面" /></a></p>

<h2 id="section-2">易用性</h2>

<p>如<a href="#section">功能介绍</a>中所述，不同站点的提取难度不尽相同，摸索<strong>一套行之有效的参数</strong>的过程可能会比较复杂。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>支持 <a href="http://www.sitesucker.us/ios/ios.html">iOS</a>，网页站点可以打包在 iOS 和 OSX 间传输，对应 File -&gt; (Un)Pack Downloads 的功能。</p>

<h2 id="section-5">类似软件</h2>

<ul>
  <li>命令行工具 <a href="http://curl.haxx.se/">curl</a>、 <a href="https://www.gnu.org/software/wget/">wget</a>
    <ul>
      <li><strong>上手简单</strong>，以 wget 为例，抓取一般站点只需 <code>wget -r -p -np -k url</code> 一条命令；</li>
      <li>深入研究一下，可以进行更精细的设置，也可二次开发；</li>
      <li>也有单条 wget 处理不好的情况，比如一些页面代码中可见 <code>css?v=x.x.x</code> 的写法，一般是为了 <a href="http://blog.csdn.net/zanychou/article/details/8813076">清除客户端缓存</a>，但 wget 会将其直接保存为 <code>css?v=x.x.x</code>（于是离线站点无法加载这一文件），可见这个 <a href="http://superuser.com/questions/703435/using-wget-to-download-css-with-get-params">提问</a>，而不是像 SiteSucker 那样识别并保存为 css 文件。</li>
    </ul>
  </li>
  <li>Adobe Acrobat
    <ul>
      <li>Adobe Acrobat 支持<strong>从网页创建 PDF</strong>，也可以抓取站点，如下图。</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-2/12.png" class="img-up" title="Adobe Acrobat 抓取页面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-2/12.png" width="80%" title="Adobe Acrobat 抓取页面" /></a></p>

<ul>
  <li><a href="http://www.sentenzadesktop.com/easy-script-copier/">Easy Script Copier</a>
    <ul>
      <li>抓取单个页面及相应的 JS、CSS，<strong>扒取网页格式</strong>很管用。</li>
    </ul>
  </li>
  <li>网页抓取框架，如 <a href="http://nutch.apache.org/">Apache Nutch</a>、<a href="https://github.com/scrapy/scrapy">Scrapy</a> 等，功能自然更强大，对普通用户有较高的使用门槛。然而，对于大多数日常需求，还是有种<strong>大炮打蚊子</strong>的赶脚。</li>
</ul>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>可视化定制，功能丰富，特别是支持<strong>登录抓取</strong>。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>官网上有介绍 SiteSucker 的 <a href="http://www.sitesucker.us/mac/limitations.html">Limitations</a>。</p>

<p>总的来说是良心之作，硬要说缺点不如说是建议：如果能有一个插件系统，用户可以开发、分享网页处理过程中某个具体处理环节的代码就更好了。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/02/12/mei-zhou-yi-ruan-zhi-sitesucker/">http://frank19900731.github.io/blog/2015/02/12/mei-zhou-yi-ruan-zhi-sitesucker/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
</feed>
