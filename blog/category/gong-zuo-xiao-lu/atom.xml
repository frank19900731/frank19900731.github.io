<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 工作效率 | Blog of 太极儒]]></title>
  <link href="http://frank19900731.github.io/blog/category/gong-zuo-xiao-lu/atom.xml" rel="self"/>
  <link href="http://frank19900731.github.io/"/>
  <updated>2015-01-22T19:14:50+08:00</updated>
  <id>http://frank19900731.github.io/</id>
  <author>
    <name><![CDATA[Frank Song]]></name>
    <email><![CDATA[scr_0731@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gollum 开机启动配置]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi/"/>
    <updated>2015-01-02T09:31:32+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#gollum-">Gollum 介绍</a></li>
  <li><a href="#section">安装</a></li>
  <li><a href="#section-1">配置</a>    <ul>
      <li><a href="#section-2">编码错误</a></li>
      <li><a href="#mathjax">配置本地 MathJax</a></li>
      <li><a href="#section-3">微调界面</a></li>
      <li><a href="#js-">嵌入 JS 代码</a></li>
    </ul>
  </li>
  <li><a href="#section-4">开机启动</a></li>
  <li><a href="#section-5">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="gollum-">Gollum 介绍</h2>

<p><a href="https://github.com/gollum/gollum">Gollum</a> 是一个轻量级的 Wiki 框架，可以管理以 Git Repository 形式存在的文件夹。相比于 Mediawiki，文档迁移性更灵活，界面也清新美观。支持多种文档格式，包括 Markdown、MediaWiki、Org-mode、Plain Text、reStructuredText、RDoc、Textile 等。</p>

<p><a href="/img/post/2015-1/1.png" class="img-up" title="Gollum 界面"><img class="imgcenter" src="/img/post/2015-1/1.png" width="90%" title="Gollum 界面" ></a></p>

<p>Gollum 自带公式输入支持，可自定义 MathJax 的配置；<strong>支持图片拖拽插入</strong>（并自动上传），这是让我觉得很方便的一点。美中不足的是，Gollum 不支持中文命名的文件，所以</p>

<ul>
  <li>如果 Git Repository 中包含中文命名文档，则无法正确显示；</li>
  <li>对于中文名称链接，Gollum 会将该名称<strong>转为拼音形式作为文件名</strong>，相应链接、文档标题也都是拼音；</li>
  <li>如果上传图片是中文命名的，也无法正确显示。</li>
</ul>

<h2 id="section">安装</h2>

<p>按照 <a href="https://github.com/gollum/gollum#installation">说明</a> 安装即可。</p>

<p>Gollum 安装过程可能会比较慢，或者报 TIME_OUT 错误，可切换至 <a href="http://ruby.taobao.org/">淘宝镜像</a>。</p>

<!-- excerpt end -->

<h2 id="section-1">配置</h2>

<h3 id="section-2">编码错误</h3>

<p>编辑文档过程中，特别是使用非 Gollum 网页编辑器编辑文档<strong>并提交</strong>，可能会出现 <code>incompatible character encodings: UTF-8 and ASCII-8BIT</code> 编码错误，需要 <a href="https://github.com/gollum/gollum/issues/843">修改 gitlab-grit 中的 index.rb 代码的第 176 行</a> 如下</p>

<p><code>ruby Gollum Encoding Fix
tree_contents[k] = "%s %s\0%s" % [tmode, obj.name.force_encoding('ASCII-8BIT'), sha]
</code></p>

<p>也就是加入了强制编码。</p>

<p>gitlab-grit 的路径，如果使用 rvm 的 ruby 安装，是 </p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gitlab-grit/lib/grit/index.rb</code></p>

<p>如果使用系统 ruby 安装，则是</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gitlab-grit/lib/grit/index.rb</code> 。</p>

<h3 id="mathjax">配置本地 MathJax</h3>

<p>因为可能离线查看文档，所以最好将 MathJax 的请求引到本地，下载 <a href="https://github.com/mathjax/MathJax">MathJax</a> 到本地服务器即可，然后修改 Gollum 模板定义。</p>

<p>同上述，文件路径是</p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gollum/lib/gollum/templates/layout.mustache</code></p>

<p>或</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gollum/lib/gollum/templates/layout.mustache</code> 。</p>

<p>第 54 行修改为</p>

<p><code>javascript MathJax 请求修改
j.src = '//localhost/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
</code></p>

<h3 id="section-3">微调界面</h3>

<p>Gollum 的界面定制起来很方便，修改 gollum.css 或者 -\-css 参数指定都可以。</p>

<p>gollum.css 的路径是</p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gollum/lib/gollum/public/gollum/css/gollum.css</code></p>

<p>或</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gollum/lib/gollum/public/gollum/css/gollum.css</code> 。</p>

<p>标题是 h1 、左浮动，菜单是 ul、右浮动。当标题较长时，二者配合搭配不好看，修改为</p>

<p><code>css 标题样式修改
#head h1 {
  font-size: 1.5em;
  /* float: left; */
  line-height: normal;
  /* margin: 0; */
  margin-bottom: 20px;
  padding: 0 0 0 0.667em;
}
</code></p>

<p>现在我们改用 custom.css 做两处定制</p>

<ul>
  <li>二级列表与一级列表项目上下边缘的长度太大，因为默认样式只定义了 <code>ul</code>，没有考虑二级列表的情况，我们希望<strong>多级列表的行是等间距的</strong>；</li>
  <li>表格内容（<code>tbody</code>）没有扩展到整个表格（<code>table</code>）区域，视觉效果是表格偏向页面左侧，我们希望<strong>表格居中、内容充满</strong>。</li>
</ul>

<p>在 Git Repository 的根目录下创建 custom.css，编辑内容为</p>

<p>```css 二级列表与表格居中定制
li &gt; ul {
  margin: 0 !important;
}</p>

<p>.center90 {
	margin: 0 auto !important;
	width: 90%;
	display: table !important;
}</p>

<p>.center80 {
	margin: 0 auto !important;
	width: 80%;
	display: table !important;
}
``` </p>

<p><code>center90</code> 表示表格宽度占父元素 90% 且居中显示，表格内容充满此区域。</p>

<p>保存 custom.css，此时还看不到正确显示，需要 <code>git commit</code> 后查看。</p>

<p>关于表格还要多说一句，如果想实现单元格的<strong>多列/行合并</strong>（columnspan/rowspan），Markdown 是做不到的，可以写 Html 代码，或者改用 MediaWiki 格式的文档。推荐一个 <a href="http://www.tablesgenerator.com/">在线表格生成器</a>（貌似在墙外），支持 Latex、HTML、Plain Text、Markdown、MediaWiki 格式的表格生成，也可参考 <a href="http://pub.lcair.com/index.php?title=MediaWiki%E8%AF%AD%E6%B3%95">MediaWiki 的语法</a>。</p>

<p>那么问题来了，如何将表格的类定义为 <code>center90</code> 、<code>center80</code> ？</p>

<p>MediaWiki 支持直接设置，而 Gollum 使用的 Markdown 编译器则不支持类的设定（本博客使用的 kramdown 是可以的）。一个简单的想法是使用内嵌 JS 代码进行设置，然而由于 Gollum 使用了 <a href="https://github.com/gollum/gollum/blob/master/docs/sanitization.md">Sanitization Rules</a>（相关代码在 <a href="https://github.com/gollum/gollum-lib">gollum-lib</a> 中），所以还是需要一番设置的，见下节介绍。</p>

<h3 id="js-">嵌入 JS 代码</h3>

<p>还是在根目录下，创建 config.rb，编辑内容为</p>

<p><code>ruby 让 Gollum 支持 script 标签和 src 属性
sanitizer = Gollum::Sanitization.new
sanitizer.elements.concat ['script'] # Tags
sanitizer.attributes[:all].push 'src' # Attributes
Precious::App.set(:wiki_options, {:sanitization =&gt; sanitizer})
</code></p>

<p>上段代码的作用是将 script 标签加入白名单，并支持 script 的 src 属性。为什么需要 src 呢，直接在 script 标签里写 JS 代码不行么？</p>

<p>貌似这么直接整确实不行，script 标签里的内容在解析后会被套上一层 <code>CDATA</code> 标记，导致 JS 代码无法执行，不过我没有具体研究 CDATA 是什么时候被加进来的。<strong>改用 src 引入 JS 文件的方式是验证通过的</strong>，这样也能让 MD 文档显得比较干净。</p>

<p>重启 Gollum，用 -\-config 指定 config.rb 的路径即可。</p>

<h2 id="section-4">开机启动</h2>

<p>通常步骤就是把在命令行启动的命令写成脚本，<a href="http://www.tanhao.me/talk/1287.html">按照一定方式加入开机启动</a> 就可以了。然而实际当中被<strong>坑惨了</strong>，主要因为我除了 Octopress 就没怎么用过 ruby。问题有二</p>

<ul>
  <li>Mac 自带的 ruby 是 2.0.0 的，也就是 <code>/usr/bin/ruby</code> 指定的那个，rvm 的版本与之并存，可以通过 <code>rvm system</code> 或者 <code>rvm use X.X.X</code> 来切换，按照我的 bash 环境变量配置，Gollum 被安装到 rvm 下的 ruby 中；</li>
  <li>launchctl 的运行环境与 bash 不同，即便 <code>source ~/.bash_profile</code>，或者 <code>rvm use X.X.X</code>，<strong>环境变量里仍然只有系统自带的 ruby</strong>，想用 rvm 的 ruby 就得自己 export PATH。</li>
</ul>

<p>最后，成功配置开机启动的流程如下。</p>

<ul>
  <li><code>rvm system</code>，将 Gollum 安装在系统自带 ruby 里；</li>
  <li>编写 plist 文件</li>
</ul>

<p>```xml 开机启动 plist 文件
<?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE plist PUBLIC “-//Apple//DTD PLIST 1.0//EN” “http://www.apple.com/DTDs/PropertyList-1.0.dtd”&gt;
<plist version="1.0"></plist></p>
<dict>
    <key>Label</key>
    <string>com.frank.loginscript</string>
    <key>ProgramArguments</key>
    <array>
        <string>/Users/frank/Documents/Startup/startup.sh</string>
    </array>
    <key>RunAtLoad</key>
    <true />
</dict>
<p>&lt;/plist&gt;
```</p>

<ul>
  <li>创建 /usr/bin/gollum，根据 ruby 的配置加载 Gollum。</li>
</ul>

<p>```bash /usr/bin/gollum
#!/usr/bin/env ruby_executable_hooks
#
# This file was generated by RubyGems.
#
# The application ‘gollum’ is installed as part of a gem, and
# this file is here to facilitate running it.
#</p>

<p>require ‘rubygems’</p>

<p>version = “&gt;= 0”</p>

<p>if ARGV.first
  str = ARGV.first
  str = str.dup.force_encoding(“BINARY”) if str.respond_to? :force_encoding
  if str =~ /\A<em>(.*)</em>\z/ and Gem::Version.correct?($1) then
    version = $1
    ARGV.shift
  end
end</p>

<p>gem ‘gollum’, version
load Gem.bin_path(‘gollum’, ‘gollum’, version)
```</p>

<ul>
  <li>编写启动脚本，其中 <code>export PATH</code> 是为了指定 <code>ruby_executable_hooks</code> 的路径。查了一下，系统自带的 ruby 没这个可执行文件，虽然这里用的是 rvm ruby 里的，但没问题……如果不加，则会返回错误代码 127，找不到命令。</li>
</ul>

<p><code>bash 启动脚本
export PATH=$PATH:/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/bin
/usr/bin/gollum --allow-upload dir --mathjax --show-all --config /Users/frank/gitlab/wiki-of-taijiru/config.rb --gollum-path /Users/frank/gitlab/wiki-of-taijiru
</code></p>

<p><code>/usr/bin/gollum</code> 是为了方便以后全局使用而添加的，能根据我对 ruby 的切换调用相应的 Gollum。其实大可以把启动脚本直接写成</p>

<p><code>bash 启动脚本（2）
/Library/Ruby/Gems/X.X.X/gems/gollum/bin/gollum --allow-upload dir --mathjax --show-all --config /Users/frank/gitlab/wiki-of-taijiru/config.rb --gollum-path /Users/frank/gitlab/wiki-of-taijiru
</code> </p>

<h2 id="section-5">总结</h2>

<p>本以为很简单的启动配置花了我好长时间，主要是对 ruby 开发环境配置的不熟悉和对 Launch Daemon 的环境变量不了解造成的。这让我想起大一时第一次配置 Apache 的情境，无论怎么修改 index.html，浏览器显示都没有变化。最后终于发现，我修改的是自己通过源码安装的 apache，而每次开关的是系统自带 apache……</p>

<p>不过也正是在查这种傻逼错误的过程里，自己才会去搜索大量资料反复调试，对相关工具的了解也更深。<strong>菜逼的提升，大抵如此吧 ^-^</strong>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数说 2014]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/"/>
    <updated>2014-12-23T01:31:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">写在前面</a></li>
  <li><a href="#section-1">邮件</a></li>
  <li><a href="#section-2">应用程序</a></li>
  <li><a href="#section-3">网页访问</a></li>
  <li><a href="#section-4">网络流量</a></li>
  <li><a href="#section-5">看过18部电影</a></li>
  <li><a href="#section-6">玩过3款游戏</a></li>
  <li><a href="#section-7">追过9部视频</a></li>
  <li><a href="#section-8">完整读过0本纸版书</a></li>
  <li><a href="#section-9">写了33篇博客</a></li>
  <li><a href="#section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</a></li>
  <li><a href="#section-11">参与报告/讲座/会议20场</a></li>
  <li><a href="#section-12">添置了6个设备</a></li>
  <li><a href="#section-13">参加54场面试，7场笔试</a></li>
  <li><a href="#section-14">其它</a></li>
  <li><a href="#section-15">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">写在前面</h2>

<p>打小对数字和总结有感情，所以就有了这篇 《数说 2014》。</p>

<p><strong>数据不能告诉你全部，但数据对真实情况的刻画比你自以为的更客观</strong>。</p>

<p><blockquote><p></p></p><p><p>数据可能给你当头棒喝，因为你在某些方面乏善可陈；</p></p><p><p>数据可能让你羞愧难当，因为它拆穿了你的自以为是；</p></p><p><p>数据可能令你懊悔不已，因为你看到了大把时间的浪费。</p></p><p><p></p></blockquote></p>

<p><strong>希望在年末的细细回望，能督促自己在新的一年里过得更加充实，像个年轻人应该有的样子</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">邮件</h2>

<p>2014 年邮件往来一万余封。</p>

<p>发送方面，126 邮箱（Frank）发出 926 封，gamil 邮箱（宋成儒）发出 255封，负责维护的博士生论坛邮箱（Forum）发出 298 封。</p>

<p>接收方面，数量靠前的，除了讨厌的广告、推荐（好东西传送门还是很赞的，CSDN 偶尔赞），只剩下四个个人账号。</p>

<ul>
  <li>刘新益老师负责就业，发了很多就业相关的信息；</li>
  <li>黄海燕老师在系办负责研究生相关的工作，信息比较杂。</li>
  <li>花隽芃是上任系研会主席，陈苏是上任研会学术副主席，俺作为上任学术助理协助他俩儿举办了清华大学第 366 期博士生论坛，想想也是颇感慨的。</li>
</ul>

<p>具体收发统计如下（图表数据来自 <a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">Chronories</a>，由 <a href="http://www.chartjs.org/">Chart.js</a> 生成，下同）。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="mail-from-legend" style="text-align: left;"></div>
   <canvas id="mail-from" style="margin-top: 20px;"></canvas>
</div>

<p>下图是分时段的收信量统计，看来应该<strong>多在中午十二点和下午六点查收/删除邮件</strong>，感觉是一句废话。</p>

<canvas id="mail-session"></canvas>

<h2 id="section-2">应用程序</h2>

<p>2014 年全年应用程序使用情况统计如下，单位是小时。Launched 表示软件打开（在内存中驻留吧），Active 表示软件使用（获得输入焦点吧）。</p>

<div style="position: relative; width: 100%; margin-bottom: 10px;">
   <canvas id="application-2014"></canvas>
   <div id="application-2014-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>稍作分析</p>

<ul>
  <li>因为 Finder 在系统中始终处于 Launched 状态，所以粗略估计 <strong>2014 年电脑开机时间超过 180 天</strong>；</li>
  <li>Chrome 使用时间远远领先于其它软件，达到 50 天，<strong>结合下节网页访问的统计，不少时间浪费在社交媒体和视频网站上了</strong>。</li>
  <li>开着不用的典型软件是 Google Chrome、Mail、ZOC、Evernote、WeChat、OmniFocus。</li>
  <li>QSanguosha 就是太阳神三国杀，作为唯一一款游戏软件<strong>赫然在列</strong>。</li>
</ul>

<p>其中一些软件是从下半年开始使用的，所以为了更接近目前的状况，还统计了 2014 年下半年应用程序使用情况。</p>

<div style="position: relative;">
   <canvas id="application-2014-half"></canvas>
   <div id="application-2014-half-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>Ulysses、ByWord 使用时间占比增加，Evernote 已经看不见了。</p>

<p><strong>明年希望看到阅读类、笔记类和编程类软件的使用时间有较大提高</strong>。</p>

<h2 id="section-3">网页访问</h2>

<p>域名访问量统计，非一级域名。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="websites-legend" style="text-align: left;"></div>
   <canvas id="websites" style="margin-top: 20px;"></canvas>
</div>

<ul>
  <li>百度访问次数 23316 次还是让我很惊讶的，Google 访问次数是 8605 次。相比与 Google 的专业性，百度的快或许更实用，使用 Google 的场景，<strong>一种是预感肯定百度不到想要结果，另一种是确实没百度到想要的结果</strong>；</li>
  <li>微博（包括 t.cn，绝大部分是从微博来的）、人人（我真心不觉得有这么多访问，但事实就是如此）、优酷，是三大时间吸血鬼，这还不算上移动端的访问；</li>
  <li>localhost 访问次数多是因为有本地调试和本地 Wiki；</li>
  <li>百度百科、github 访问次数排名尚可，略感欣慰。</li>
</ul>

<p><strong>明年，人人、优酷还是算了吧，没什么营养，微博多用客户端，只关注有价值的分组</strong>。</p>

<h2 id="section-4">网络流量</h2>

<p>清华特色网络流量统计，数据来自清华大学校园网，单位 G。</p>

<div style="position: relative; margin-bottom: 10px;">
   <canvas id="network"></canvas>
   <div id="network-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>近来网络访问有些猖獗，没营养又三俗的节目就别看了，<strong>浪费流量事小，浪费生命事大</strong>。</p>

<p>补一句，毕业了最不留恋的就是学校的网络。</p>

<h2 id="section-5">看过18部电影</h2>

<p>对科幻影片依旧无兴趣，没看过欧美电影，也没看过美剧！</p>

<p>喜欢国产写实影片，以及日本虐心片。</p>

<ul>
  <li><a href="http://movie.douban.com/subject/25779218/">匆匆那年（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/24695611/">北平无战事</a></li>
  <li><a href="http://movie.douban.com/subject/24879858/">分手大师</a></li>
  <li><a href="http://movie.douban.com/subject/25805741/">后会无期</a></li>
  <li><a href="http://movie.douban.com/subject/25798222/">亲爱的</a></li>
  <li><a href="http://movie.douban.com/subject/25717233/">心花路放</a></li>
  <li><a href="http://movie.douban.com/subject/10545939/">黄金时代</a></li>
  <li><a href="http://movie.douban.com/subject/24743711/">催眠大师</a></li>
  <li><a href="http://movie.douban.com/subject/3732800/">我们天上见</a></li>
  <li><a href="http://movie.douban.com/subject/3036997/">立春</a></li>
  <li><a href="http://movie.douban.com/subject/4268598/">告白</a></li>
  <li><a href="http://movie.douban.com/subject/1292444/">大逃杀</a></li>
  <li><a href="http://movie.douban.com/subject/24843198/">同桌的你</a></li>
  <li><a href="http://movie.douban.com/subject/24736566/">北京爱情故事（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/1756073/">我们俩</a></li>
  <li><a href="http://movie.douban.com/subject/1293323/">大红灯笼高高挂</a></li>
  <li><a href="http://movie.douban.com/subject/24735062/">青春派</a></li>
  <li><a href="http://movie.douban.com/subject/1291858/">鬼子来了</a></li>
</ul>

<h2 id="section-6">玩过3款游戏</h2>

<ul>
  <li>太阳神三国杀</li>
  <li>千军破2</li>
  <li>影之刃</li>
</ul>

<p>影之刃、千军破2 都是为了网易游戏面试玩的，太阳神三国杀纯消磨时光。太阳神三国杀的 Mac 端那叫一个渣，顺手、过拆就能让程序崩溃，始终无人维护。即便如此，我还玩得挺嗨，也是服了自己。</p>

<p><strong>本年度手机端只有影之刃一款游戏，Mac 端只有太阳神三国杀一款，均已卸载，千军破2 已停玩，望继续保持</strong>。</p>

<h2 id="section-7">追过9部视频</h2>

<ul>
  <li>晓松奇谈（周五）</li>
  <li>罗辑思维（周五）</li>
  <li>鸿观（周五）</li>
  <li>相征（周四）</li>
  <li>都嘟（周三、周六）</li>
  <li>奇葩说（周六、周日）</li>
  <li>历代经济变革得失</li>
  <li>万万没想到、报告老板</li>
  <li><a href="http://i.youku.com/u/UMTE3Njc4ODM2">张坤解说三国杀</a>（不定）</li>
</ul>

<p>看三国杀解说是最无脑的放松方式，虽然我已经多年不上 Online 实操，<strong>明年要戒掉平时的，只看周末娱乐</strong>。</p>

<h2 id="section-8">完整读过0本纸版书</h2>

<p>回想一下好像确实是这样。</p>

<ul>
  <li>到图书馆借书主要是为参阅章节，比如《具体数学》，<strong>特别缺乏系统性学习</strong>；</li>
  <li>今年本身买书就很少，有电子书则不会购买纸质书，主要是考虑到快毕业了，减轻搬家负担；</li>
  <li>读了很多技术教程、博客，人文类书籍阅读很少。</li>
</ul>

<p><blockquote><p>书读得少人就容易浮躁，视频看得多人就容易浮夸。</p></blockquote></p>

<p><strong>毕业了就不能以学生身份为借口，何况岁数也不小了，明年要踏踏实实在书籍阅读上给自己做一点规划</strong>。</p>

<h2 id="section-9">写了33篇博客</h2>

<p>新浪博客两篇</p>

<ul>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">Mac实用软件及功能吐血总结</a></li>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10102uwjo.html">word2vec代码注释</a></li>
</ul>

<p>Github 的博客 31 篇</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/08/24/wo-de-di-yi-pian-octopress-bo-ke/">我的第一篇 Octopress 博客</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/09/01/2015nian-xiao-zhao-ru-kou/">2015年校招入口</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/">提高效率与情趣的九种程序工具推荐</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/octopress-gai-zao-ji-lu/">Octopress 改造记录</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/yosemite-sheng-ji-ji-hou-xu/">Yosemite 升级及后续</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/">飞维美地笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/">IDG 联合招聘笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/">记某游戏公司面试经历</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的知识管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/25/qiu-zhi-ji-de-yi-dian-jing-yan-zhi-tan/">求职季的一点经验之谈</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/27/wo-de-shi-jian-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的时间管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">面试经验分享之机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">面试经验分享之智力题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/">一个工具控的效率观</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/18/mian-shi-jing-yan-fen-xiang-zhi-shu-ju-jie-gou-suan-fa-fen-xiang/">面试经验分享之数据结构、算法题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/20/pocket-lei-mu-biao-qian-de-zhi-ding/">Pocket 类目标签的制订</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/">2014 年百度、腾讯与搜狐的校招笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/23/open-workshop-scalacong-ling-dao-ru-men-ke-tang-bi-ji/">《Open Workshop — Scala 从零到入门》课堂笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">面试经验分享之编程语言题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/">面试经验分享四篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/">《测试驱动开发和函数式编程》在线演示</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/">Matrix67 博客中智力题粗分类</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/">若干有用有趣的网站</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/">DIY Deep Learning for Vision: A Tutorial with Caffe 报告笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/">微博卡片 — 微博收藏的可视化</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">每周一软之日记软件 Chronories</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/">Wunderlist 添加快捷键启动</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">每周一软之 Markdown 笔记软件 Ulysses III</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/">数说 2014</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/">2014 面试终结篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/">每周一软之 Proxifier</a></li>
</ul>

<p><strong>明年希望继续减少无病呻吟，保证一周1-2篇。缩短博客撰写时间，书面化的弊端就是耽于形式</strong>。</p>

<h2 id="section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</h2>

<p>8月11日那周开始写周报，8月末开始写月报，就是在周/月末抽半小时，对照任务管理软件梳理本周/月事项，总结得失，提出下阶段目标。现在回头翻看，说给自己听的鸡汤、对自己提出的批评、骂人/感谢的话等等，都鲜活还原了记录时的场景……</p>

<p>周报、月报对自己而言有三点好处</p>

<ul>
  <li>及时总结，快速调整状态；</li>
  <li><strong>机械、规律的行为，让工作、生活体现出阶段性，这阶段感是我从研究生不再上课以来一直求而不得的，阶段感带来紧张性，有助于避免拖延</strong>；</li>
  <li>汇集成一份完整、真实的年度总结，从中可以看到自己的成长、发现缺点不足，真心不是年底才想写就能够写出来的。</li>
</ul>

<p>10月13日制定日常任务完成度打分表并开始执行，目前每天在50分左右徘徊，明年应该会有大修订，并<strong>争取更高的完成度</strong>。</p>

<p>根据周报、月报的记录，自己这一年<strong>在加强运动、规律作息方面做的最差</strong>，特别是进入冬季以后。要向6月到8月的表现看齐，早七点半、晚十一点半，上班后应该就能做到吧。</p>

<h2 id="section-11">参与报告/讲座/会议20场</h2>

<ul>
  <li>Randomized Methods in Big Data Analytics, Ping Ma</li>
  <li>阿里图像搜索分享，雷音</li>
  <li>ICML 2014</li>
  <li>Statistical Learning Theory, Jerry Zhu</li>
  <li>CCF ADL-46 机器学习</li>
  <li>The Future of Mobile Computing, Hedy Lamarr</li>
  <li>Deep Learning in Object Detection, Segmentation, and Recognition, Xiaogang Wang</li>
  <li>Imaging Arithmetic Physics U Math &gt; Physics + Math, Gaurav Sharma</li>
  <li>Making the Impossible Possible Randomized Machine Learning Algorithms for Big Data, Rong Jin</li>
  <li>移动互联网时代的大数据挖掘技术研讨会，三星</li>
  <li>DIY Deep Learning for Vision: A Tutorial with Caffe</li>
  <li>Scaling Deep Learning, Jeaf Dean</li>
  <li>百度、阿里深度学习碰撞，余凯、漆远 </li>
  <li>百度技术沙龙53期，基于大数据的预测实践</li>
  <li>无穷沙龙 互联网泡沫真的来了吗</li>
  <li>无穷沙龙 走近 HTML5 的应用生态</li>
  <li>FreeWheel 技术分享，王迪</li>
  <li>万花筒活动: 测试驱动开发和函数式编程，姚若舟</li>
  <li>Open Workshop — Scala 从零到入门，吴雪峰</li>
  <li>码农大会 Spark 分享，连城</li>
</ul>

<p>如果听的时候热血沸腾，散场了就忘了个干净，那真的就是浪费了时间，不如不去。所以参加报告/讲座/会议一定要注意三点</p>

<ul>
  <li>认真听、认真记，不要指望自己会再听一遍录音/看一遍录像；</li>
  <li><strong>带着问题听，积极提问</strong>；</li>
  <li><strong>务必在当天查一查在听讲中遇到的陌生技术与概念，考虑是否可以为己所用</strong>。</li>
</ul>

<h2 id="section-12">添置了6个设备</h2>

<ul>
  <li>希捷 4T 移动硬盘，快毕业了，赶紧从北邮人、六维扒东西；</li>
  <li>三星 1T SSD，血本效率投资，还是很值的；</li>
  <li>Apple Magic Trackpad，基本没用;</li>
  <li>Wacom 数位板，写公式、画草图很实用；</li>
  <li>红米 Note，与中国移动携手保障了求职季里的通信畅通；</li>
  <li>小米手环，当闹钟用很实在。</li>
</ul>

<h2 id="section-13">参加54场面试，7场笔试</h2>

<p>其中实习面试 5 面，求职面试 49 面（电面 5 面）。</p>

<p>面试大部分集中在 9、10 月份，从八月初开始准备。一个自认为比较好也比较推荐的习惯是，<strong>在笔试、面试过后立刻回忆内容，针对弱点和错误进行学习完善</strong>。我的一般做法是从面试地点出来后用手机录制自己的快速复述，并务必在当年做书面化整理。</p>

<h2 id="section-14">其它</h2>

<ul>
  <li>运动健康统计缺乏数据，期待小米手环能开放 API；</li>
  <li>阅读论文篇数、写代码行数未知，明年要做规范的整理和统计，不是说越多越好，而是要用心积累；</li>
  <li>和父母的联系次数很多，和父母呆在一起的天数很少，想想就要工作了，可以拿来陪父母的时间又少了，不免伤感。</li>
</ul>

<h2 id="section-15">总结</h2>

<p>2014年，自己最深刻的一个感受是自身想法、观念变化越来越快，因为即将面临的是人生很重要的过渡期——从读书到工作。有压力，才会逼迫自己去思考之前懒得思考的问题。随着经验的累积、信息的收集与分析、和他人沟通讨论的深入，逐渐在自己身上发现了一些可喜的变化。不夸张地说，有时候回头看一个月前的自己，都会觉得幼稚可笑。</p>

<p><strong>有方向的忙碌才是充实</strong>，庆幸自己在2014年即将结束的时候，似乎找到了自己的方向，而属于2014年的诸多遗憾，希望在新的一年一一实现。</p>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/Chart.js"></script>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/mychart.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pocket 类目标签的制订]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/20/pocket-lei-mu-biao-qian-de-zhi-ding/"/>
    <updated>2014-11-20T00:52:08+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/20/pocket-lei-mu-biao-qian-de-zhi-ding</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>由于Pocket自身不带有分类或建目录的功能，所以类目只能以标签的方式体现。综合个人使用习惯并参考了 <a href="http://www.zwbk.org/MyLemmaShow.aspx?lid=116762#137">《中文百科知识体系目录》</a>，特制订分类体系。此分类体系亦适用于其它知识积累工具。</p>

<h2 id="section">2014年11月20日第一次制订</h2>

<p><strong>一级类目共20个，其中只有信息科学下设二级类目，有21个。</strong></p>

<p><strong>各类目间可能有重叠，特定网页可能与多个类目相关，由本人判决该网页的最大相关类目。</strong></p>

<p><strong>如果判决标准中存在某种规律或约定，会在今后修订时注明。</strong></p>

<ol>
  <li>宗教哲学   </li>
  <li>政治政策</li>
  <li>法律法规  </li>
  <li>文化艺术     </li>
  <li>历史典故</li>
  <li>天文地理 </li>
  <li>社会科学</li>
  <li>健康养生</li>
  <li>生物医学</li>
  <li>数理科学
<!-- excerpt end --></li>
  <li>化学化工</li>
  <li>农林环境</li>
  <li>工程技术</li>
  <li>信息科学
    <ul>
      <li>编程方法</li>
      <li>实用软件</li>
      <li>脚本编程</li>
      <li>网页编程</li>
      <li>网页设计</li>
      <li>网络安全</li>
      <li>操作系统</li>
      <li>数据结构</li>
      <li>算法设计</li>
      <li>系统架构</li>
      <li>产品设计</li>
      <li>机器学习</li>
      <li>数据挖掘</li>
      <li>统计</li>
      <li>优化建模</li>
      <li>大数据处理</li>
      <li>计算机视觉</li>
      <li>自然语言处理</li>
      <li>业界动态</li>
      <li>互联网创业</li>
      <li>互联网其它</li>
    </ul>
  </li>
  <li>经济管理</li>
  <li>军事科技  </li>
  <li>人物</li>
  <li>效率</li>
  <li>吃喝玩乐</li>
  <li>其它知识</li>
</ol>

<p><strong>2014年12月8日第一次修订</strong></p>

<p><strong>信息科学</strong> 一级分类 中补充 <strong>数据库</strong> 二级分类。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个工具控的效率观]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/"/>
    <updated>2014-11-13T15:49:04+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">时间轴</a>    <ul>
      <li><a href="#section-2">2014年5月12日</a></li>
      <li><a href="#section-3">2014年6月3日补充</a></li>
      <li><a href="#section-4">2014年6月20日补充</a></li>
      <li><a href="#section-5">2014年6月21日补充</a></li>
      <li><a href="#section-6">2014年8月17日补充</a></li>
      <li><a href="#section-7">2014年8月21日补充</a></li>
      <li><a href="#section-8">2014年8月24日补充</a></li>
      <li><a href="#section-9">2014年8月27日补充</a></li>
      <li><a href="#section-10">2014年8月29日补充</a></li>
      <li><a href="#section-11">2014年10月13日补充</a></li>
      <li><a href="#section-12">2014年10月29日补充</a></li>
      <li><a href="#section-13">2014年11月8日补充</a></li>
      <li><a href="#section-14">2014年12月7日补充</a></li>
      <li><a href="#section-15">2015年1月12日补充</a></li>
    </ul>
  </li>
</ul>

<!-- excerpt start -->

<h2 id="section">前言</h2>

<p><strong>这是一篇在不断更新中的文章，主要用于记录我在学习工作过程中为解决效率瓶颈而发掘的软件工具，以及该工具的使用体验和配套的工作方式。</strong></p>

<ul>
  <li><code>何为工具控？</code> 在使用 MacBook Pro 的近两年时间里，自己大大小小“使用”过超过1000款软件，常驻笔记本里的大概有700款，每周都会有添加删除，详细列表见 <a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">这篇文章</a>。“使用”的含义可就多了，可能是常用以至于开机自启动，可能是专门用于某项用途，也可能只是摸过、了解功能和适用场景。这么多软件，管理上主要使用 QuickSilver（因为自己最早用的就是这个，虽然现在大家更多提到的是 Alfred）。我觉得自己还担不起拜物教的名号，顶多是个实用主义者和收藏强迫症。工具对我的意义有两点，<strong>其一是提供了外界刺激，让我内在的学习动力有了平稳释放的渠道，比如记录美感刺激、时间规划刺激、任务消除刺激，其二是让我有了记录成长历程的手段，解放了大脑</strong>。</li>
  <li><code>工具如何提高效率？</code>
    <ul>
      <li>加速知识记录、知识分享、知识利用的过程，质量也得到保障；</li>
      <li>时间规划清晰合理，帮助自己应对纷繁复杂的事务和对象；</li>
      <li>通常，工具是手脚的延伸，而这篇文章里将要提到的软件工具则是主要是感官和记忆的延伸，让大脑做更有意义的事情，也就是思考。</li>
    </ul>
  </li>
  <li><code>为什么是 Mac？</code> 当然可以不是 Mac，只是这篇文章里的很多软件在别的操作系统上是没有的。Mac 在<strong>易用性</strong>（比如系统的升级，软件的安装卸载，强悍的 trackpad）的角度来看是最佳的，优秀的图形界面和基于 UNIX 的操作系统也算是在 Windows 和 Linux 之间取得了良好的折中，适用于科研工作者和程序猿（最近走访的一些企业要么是全 Mac，要么是 Mac 比例在提升），而 MacBook Air 的时尚感与轻便性（索尼的本感觉也有这样的特性）则赢得了白领、女性的青睐。其他方面的话不好评价优劣，毕竟我们大多数人对于 Windows和Linux的掌握也只是皮毛，别人在 Windows 下效率比你在 Mac 下高也是很正常的，因人而异。我不是果吹，但还是有一个比较矫情的想法，那就是我总感觉<strong>在 Mac 上是我在工作，而在 Windows 上是工在做我</strong>。</li>
</ul>

<p>现在 MacBook 已然不是高枝上的凤凰了，其他厂商的笔记本价格与 MacBook 持平或更贵的有很多，强烈建议有换电脑打算的时候给予考虑。有钱把手机换成 iPhone 6、6+，还不如攒个 MacBook，个人感觉性价比更高，<strong>壕请忽略我的话</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">时间轴</h2>

<h3 id="section-2">2014年5月12日</h3>

<p>最近这段时间使用Ulysses真是如有神助，</p>

<ul>
  <li>Markdown书写；</li>
  <li>层次清晰分明，非常方便组织思路，文字有魂不零碎；</li>
  <li>输出格式丰富，主题模板也很赞，直接看原稿就已经很舒服了；</li>
  <li>界面清爽，全屏模式酷炫；</li>
  <li>Typewriter 模式，写作代入感强；</li>
  <li>支持版本保存，功能相当不鸡肋；</li>
  <li>支持过滤器，虽然自己还没有用过；</li>
  <li>可以附加笔记、图片、关键词和协作目标，有助于搜索，也可以作为效率上的督促。</li>
</ul>

<p>不足之处在于，不能够编辑公式，代码段比较简单，也不能输入表格。</p>

<p>正在使用的有助效率提升的软件梳理</p>

<ul>
  <li><code>OmniFocus</code> GTD 工具，配合 iCalendar 使用爽歪歪，功能暂时掌握不全，但不耽误基本使用。</li>
  <li><code>Evernote</code> 大有被取代之势，重要性在降低，记录一些零七碎八的事情。</li>
  <li><code>FocusMask</code> 效率新贵，提高自身工作时注意力！！！</li>
  <li><code>Papers</code> 支持文献阅读、批注与引用的好工具，可以和 iOS 设备同步。</li>
  <li><code>Eggscellent</code> 番茄工作法，分段限时完成工作，把自己<strong>从无截止时间估计的低效率工作状态中拉出来</strong>。</li>
  <li><code>Timeline 3D</code> 制作高逼格的时间计划表。</li>
  <li><code>Ulysses</code> 出色的写作软件，之前说过，废话不表。</li>
</ul>

<p>期待日后更多的发现。</p>

<h3 id="section-3">2014年6月3日补充</h3>

<ul>
  <li><code>Pocket</code> 极佳的网页保存待查工具，有 Mac、iOS 客户端以及 Chrome 插件，<strong>特别适用于记录问题解决过程中所查询的重要网页资料，省得要保留大量标签页或者来回翻找浏览历史</strong>。</li>
  <li><code>Wunderlist</code> OmniFocus 的精细化补充，跨平台通用。</li>
</ul>

<h3 id="section-4">2014年6月20日补充</h3>

<p>ICML、实习接踵而至，是时候 Papers（读 Paper）以及 Ulysses（会议记录，每日总结）发挥作用的时候了。最近要<strong>规范化记录的方式方法</strong>，让自己在暑假里高效运转起来。</p>

<h3 id="section-5">2014年6月21日补充</h3>

<p>今天被 Ulysses 坑到了，软件无响应，强制关闭，重新打开后部分文件夹和文件顺序错乱、名称显示错误，今后一定要<strong>注意备份</strong>。</p>

<h3 id="section-6">2014年8月17日补充</h3>

<p>Ulysses 虽然非常强大，但是有些事情做得还不是那么好，比如表格上不如 Numbers，而涉及到复杂计算和图表，Numbers 又不如 Excel。</p>

<p>最近调试 ODPS 的过程中发现，还是需要 Numbers 做记录，才能够使得每一个步骤清晰明确，每一个对比结果记录可靠。</p>

<h3 id="section-7">2014年8月21日补充</h3>

<p>目前个人效率存在的三大瓶颈</p>

<ul>
  <li><strong>资料碎片化，需要跳跃式阅读的时候寻址消耗大</strong>；</li>
  <li><strong>项目繁多，接头人、需求、目标、工期预计等需即时管理</strong>；</li>
  <li><strong>文档管理体系亟待完善，不能沿用文件夹模式</strong>。</li>
</ul>

<p>Ulysses 搜索功能还很弱（注：当时系统还是装在机械硬盘上，后来在光驱位加了一块 1T 的 SSD 后，那都不是事儿了），要打造 Ulysses 周边生态环境。</p>

<ul>
  <li><code>Producteev</code> 可以创建 Network 和 Project，适合多项目跟踪，界面美观，可定制项丰富，满足多人协作需求。</li>
  <li><code>iDocument</code> 可导入本地文件夹，也可以维护一个iDocument自身的目录，保存相关的文件，提供标签查找。</li>
  <li><code>OneNote</code> 富文本、交互式文本定制，可以保存图片、生成表格、插入文件，排版布局方便，是对 Ulysses 的有益补充。</li>
  <li><code>mediawiki</code> 网页版 wiki，常见于某些实验室的网站，优点是其索引、链接能力，便于分享，还可以输入表格、公式，大大弥补了 Ulysses 的不足。</li>
</ul>

<h3 id="section-8">2014年8月24日补充</h3>

<p>补充使用体验</p>

<ul>
  <li><code>Producteev</code> 评论功能很赞，可以存储事件相关的命令行、网页链接、文件等，使得在众多事情的切换中保持脑袋不乱。</li>
  <li><code>iDocument</code> 界面很棒，今后零散的微博文件分享也有方法保存啦！每一个文件都要打好 tag，方便搜索查找，目前 iDocument 还不支持文件的内容搜索，可以用 EasyFind 实现。</li>
  <li><code>mediawiki</code> 从这两天的经验看，Ulysses 里面经常翻阅的东西就要考虑写到 mediawiki 中了，作为个人知识库的 cache。最最最重要的是，<strong>有效解决了诸如 Ulysses、Evernote 等笔记软件中笔记间无法加链接的问题</strong>。</li>
</ul>

<h3 id="section-9">2014年8月27日补充</h3>

<ul>
  <li><code>Octopress</code> 用法见 <a href="http://frank19900731.github.io/blog/2014/08/24/wo-de-di-yi-pian-octopress-bo-ke/">此篇博客</a>，配置见 <a href="http://frank19900731.github.io/blog/2014/10/16/octopress-gai-zao-ji-lu/">此篇博客</a>。养成知识输出与分享的习惯，争取让自己的博客小有名气。</li>
  <li><code>Byword</code> 考察了不下十款 Mac 下的 Markdown 编辑器，最终敲定此软件。非常棒的界面设计，写起来很带感的说，段落聚焦（Paragraph Focus）的功能尤赞，专注写作的不二之选，Typewritter 模式也可用，支持字体的自定义，用于 Octopress 写作。</li>
</ul>

<h3 id="section-10">2014年8月29日补充</h3>

<ul>
  <li><code>Dash</code> API大全，程序员必备，从诞生伊始就开始关注，一直用到现在，作为一个收藏强迫症患者当然全部下载，<strong>光是索引文件就有40多G</strong>，但是心里满满的踏实感。支持代码片段存储，且在 Dash 开启时，支持在代码编辑器中使用缩写替换，问题在于没有办法进行云同步。</li>
  <li><code>Gistify</code> 这是 gist 的比较好的 Mac 客户端，缺点是不能指定文件名和Description，优点是创建后自动生成的 url 在剪贴板里，可以到网页上进行修改。</li>
  <li><code>PopClip</code> 万金油，插件丰富强大，功能在不断完善。</li>
</ul>

<h3 id="section-11">2014年10月13日补充</h3>

<ul>
  <li><code>Caffeinated</code> RSS阅读器，虽然还有这排版上的一些问题，但是其优雅的展示效果还是令我不能舍弃。最近花了大力气整理了各方面的RSS资源，希望能够养成此类阅读习惯，将碎片化的时间以及之前浪费在游戏等方面的时间充分利用起来。此外，<strong>这还相当于一个优质博客集合的入口，比起让这些链接沉睡在浏览器收藏夹里要好很多</strong>。</li>
</ul>

<h3 id="section-12">2014年10月29日补充</h3>

<ul>
  <li><code>SketchBookPro</code> <strong>配合 Wacom 手写输入板，记录公式快快哒</strong>。</li>
</ul>

<h3 id="section-13">2014年11月8日补充</h3>

<ul>
  <li><code>Notebooks</code> 较好的三列组织形式，支持 Markdown 语言，是较好的写书工具。</li>
  <li><code>Gitbook</code> 类似于 pandoc，支持丰富格式导出，比如 epub、mobi、pdf、网页版，特别是网页版会有较好的传播价值。</li>
  <li><code>Daum Equation Editor</code> Latex 公式书写利器，方便博客写作。</li>
  <li><code>花瓣网（Chrome插件）</code> 图片采集神器，非常有于前端积累，<strong>给图片的高效保存提供了较完美的解决方案</strong>。</li>
</ul>

<h3 id="section-14">2014年12月7日补充</h3>

<ul>
  <li><code>Quiver</code> 分 Text、Latex、Code、Markdown 四种 Cell，文章撰写分块明细，界面美观，适合博客、工程报告写作。</li>
</ul>

<h3 id="section-15">2015年1月12日补充</h3>

<ul>
  <li><code>hypothes.is</code> 一款在网页上做标记、笔记和评论的 Chrome 插件，非常方便知识的就地保存整理，而不用麻烦的搬运到笔记中。</li>
</ul>

<p><strong>未完待续</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我的时间管理经验与工具分享]]></title>
    <link href="http://frank19900731.github.io/blog/2014/10/27/wo-de-shi-jian-guan-li-jing-yan-yu-gong-ju-fen-xiang/"/>
    <updated>2014-10-27T10:01:58+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/10/27/wo-de-shi-jian-guan-li-jing-yan-yu-gong-ju-fen-xiang</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">引子</a></li>
  <li><a href="#section-1">第一式：安排好你知道将要发生的</a></li>
  <li><a href="#section-2">第二式：建立消息队列</a></li>
  <li><a href="#section-3">第三式：记录你的灵感</a></li>
  <li><a href="#section-4">第四式：建立等待队列</a></li>
  <li><a href="#section-5">第五式：建立拖延事件队列</a></li>
  <li><a href="#section-6">第六式：创建富消息</a></li>
  <li><a href="#section-7">第七式：日常任务定量化</a></li>
  <li><a href="#section-8">时间管理的其它贴士</a></li>
  <li><a href="#section-9">总结</a></li>
  <li><a href="#section-10">附录</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">引子</h2>

<p>前一段时间写的<a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/">《我的知识管理经验与工具分享》</a>（<a href="http://frank19900731.github.io/wx/2014-10-23-wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang.html">移动版</a>）一文发布后得到了不错的反响，自己倍受鼓舞，以至于这两天自己做着做着事情都会不自主的笑出来……特别是分享到微信朋友圈后，有众位同学朋友的热心支持，才使得拙作得以被展现在更多人的面前。不得不承认，社交网络给知识分享提供了太多的可能，除此以外自己觉得还有两点很关键</p>

<ul>
  <li><code>写什么</code> 分享生活工作中所思所想，不要无病呻吟、无信息量；</li>
  <li><code>怎么写</code> 尽量还原最真实的想法（人们在回忆时容易把时隔已久的困难淡化甚至扭转过来，也就是用结果重绘过程，姑且称为自我粉饰倾向吧）。</li>
</ul>

<p>我会始终坚守这两点原则进行博客写作。自己也不是什么成功人士，只是想记录分享一下自身在人生动荡的年代（从校园到社会）里头脑中的真实想法，<strong>欢迎大家提出各种意见建议</strong>。</p>

<p>一通感想之后就谈一谈自己关于时间管理的一点想法，<strong>共七式，附赠心法</strong>。对，<strong>七</strong>确实是我凑出来的，为了便于理解就得条条款款系统化嘛。我也不是学院派，没读过时间管理的书籍，都是在实践中发现问题再想解决方案的。</p>

<!-- excerpt end -->

<h2 id="section-1">第一式：安排好你知道将要发生的</h2>

<p>组会每周一次，笔试/面试安排在X月X日，大牛讲座在X月X日……这些事项一般都可以提前至少一天知道，将它们详细记录在电子日历（Google Calender）或者 GTD（Getting Things Done） 工具中，包括起止时间、项目归属、地点、要见的人、要带的东西（2B铅笔、准考证之类的）等。所使用的工具最好是PC端和移动端可同步的，前一天晚上录入事项，之后在移动端查看、标记完成。</p>

<p>GTD 源于一本书 <a href="http://book.douban.com/subject/1316569/">Getting Things Done: The Art of Stress-Free Productivity</a>。没看过原书，不过从豆瓣的这篇 <a href="http://book.douban.com/review/1930909/">GTD 心法</a> 介绍来看，有不少理念我们都在平时有意无意的实践着。大家公认的一款与原书理念匹配的 GTD 软件是 OmniFocus，入门稍复杂，只能用于苹果系列产品。大家使用自己趁手的工具就成，我的体会是再牛逼的工具也无法解决你所有的时间管理需求。</p>

<p>另，推荐一个非常知名的时间管理方面的博客——<a href="http://www.mifengtd.cn/">褪墨</a>，虽然我平时不怎么看……原因是我觉得工具和方法都是给人服务的，痴迷于工具和方法的研究有点买椟还珠的意味，把握一个度就好。</p>

<h2 id="section-2">第二式：建立消息队列</h2>

<p>有些事情你只有当天才知道将要发生，区别于 GTD 工具中记录的你提早知道的<strong>离线数据</strong>，我们可以定制一个消息队列，存入当天得到的<strong>在线数据</strong>，用这两套数据指导当天的工作。消息队列的主要考量因素是便捷性，录入一定要迅速，当然，也有跨平台同步的需求。我选择轻量级的 To Do List 工具中的 Wunderlist，主要利用到其创建任务列表、创建任务和给任务加星标的功能。</p>

<p>我把<strong>在线数据</strong>分为<code>紧急确定</code>、<code>普通未定</code>两类：</p>

<ul>
  <li><code>紧急确定</code> 如发现牙膏快用完了得买去或老板通知你下周的组会你来讲，我会仅向消息队列中记录事项名称，必要时再加入时间地点等信息，当天必须完成的事项加星标以作区别。当我遇到空闲，或者到了睡前要总结并安排今后工作的时候，我就会<strong>将积累到消息队列里的任务转移到 GTD 工具中</strong>，录入尽量详细的信息。可能有两个问题
    <ul>
      <li><code>都转移么？</code> 我觉得买牙膏就不录入了吧，消息队列侧重紧急，而 GTD 侧重重要，<a href="http://baike.baidu.com/view/6303330.htm?fr=aladdin">紧急和重要的四象限分析</a> 已是老生常谈；</li>
      <li><code>在消息队列里已经完成的任务还要转移么？</code> 我觉得还是很有必要的，在 GTD 工具中完整地、原生态地保留工作记录，方便回顾总结，特别是领导让你写个报告什么的，可好使了。一个经典场景是，<strong>当我回顾这一周的工作，我印象中已经发生了大半个月的事情其实就发生在本周二</strong>，记忆偏差实在是大，不记不行啊。每天坚持写工作日记可能耽误时间、不实用，但什么都不记也不合适，还是要找到一个<strong>前进</strong>和<strong>存档</strong>的平衡点。</li>
    </ul>
  </li>
</ul>

<div></div>

<ul>
  <li><code>普通未定</code> 比如你在碎片化阅读的过程中看到一项自己感兴趣的技术或一本众人称赞的书，让你立刻就去学习阅读有点不太可能，但仅仅将他们记录到笔记中（包括收藏啦，@我的印象笔记啦，复制粘贴啦）或者只记到脑子里，那没过两天就忘了这茬儿了，不要低估自己喜新厌旧的能力哦。我的做法是在 Wunderlist 里建一个<strong>慢消息队列，冷处理但不是不处理</strong>。队列中的每一项就是个技术名或者书名之类的。这个列表的事项是不急于转移到 GTD 工具里的，因为随便挑其中一个出来可能都是项目量级而非任务量级，甚至需要一点调研规划。比如你打算学学 hadoop 框架，得先找点儿资料、论坛什么的看看，大致掌握它的学习路径然后量化到你的 GTD 工具里。可能的问题是
    <ul>
      <li><code>记在慢消息队列和记笔记里不还是一样么？</code> 嗯，也差不多，如果你在笔记里专辟一篇记录这些东西的话。重点在于把它们聚在一起，而不是分散记录。</li>
    </ul>
  </li>
</ul>

<h2 id="section-3">第三式：记录你的灵感</h2>

<p>灵感这词儿有点夸大，不是牛顿被苹果砸了产生的那种，只是突然想明白了一个问题或者产生了一个自认为有价值的想法。比如这篇文章不少内容就是站地铁里发呆的时候寻思出来的。</p>

<p>如果你的灵感比较简短，那 Wunderlist 还是一个不错的选择，创建一个任务列表专门记录。一定要想到了就尽快掏手机记，不然一会儿的状态就是，我刚想的是什么来着？</p>

<p>如果你的灵感来的跟泄洪一样，那就赶紧用录音软件记录吧，当然如果是搞设计的，需要的就是绘图软件。多媒体笔记软件挺多的，印象中还有专门以记录灵感为卖点的。等到有时间整理灵感的时候，就有两种可能</p>

<ul>
  <li>删了，当我没说过；</li>
  <li><strong>转换成任务，实现它！</strong></li>
</ul>

<h2 id="section-4">第四式：建立等待队列</h2>

<p>等待队列想要解决的问题是，有些任务虽然我标记完成，但我仍旧需要跟踪反馈，比如我申请了XX公司的职位，但该公司要过好久才能给我确认通知及笔试通知。我的做法是原任务标记完成后，如果该任务还有待后续确认，那就在等待队列（也是在 Wunderlist 里建）里添加一条。<strong>等不到就催一催，等到了就结束</strong>。码农朋友们可能笑了，这个想法确实是受 <a href="http://baike.baidu.com/view/185289.htm?fr=aladdin">异步调用</a> 的启发。</p>

<p>还是那句话，没什么特别之处，只要把所有需要等待的任务放在一起，效果就是<strong>脑子不乱了，焦虑感也减轻了，刷起新任务更有劲儿了</strong>。</p>

<h2 id="section-5">第五式：建立拖延事件队列</h2>

<p>有时间管理工具使用经验的童鞋可能都有过类似的经历，就是有一些顽固的任务，你总倾向于把它从今天拖到明天，从这周拖到下周，依次类拖。大家都爱打任务列表里的小怪，不想打大 boss。这是一个<strong>世界性难题</strong>，我们会因此变得情绪焦虑、产生挫败感。</p>

<p>我的方法，按照故事的尿性，相信大家都能猜得出来，就是把这些顽固的任务聚在一起……剔除那些不重要的，因为拖延也可能是分配任务不合理导致的。剩下的要像狠心老板压榨员工一样强迫自己逐渐完成，人们不总是喜欢说最大的对手其是自己嘛。</p>

<p>关于拖延事件的解决，自己也还在探索中，方法还包括在 <a href="#section-7">第七式：日常任务定量化</a> 规定<strong>每日完成拖延事件队列中的一条</strong>。那么你的问题来了，<strong>拖延事件队列中还会有一些压箱底的拖延事件怎么办</strong>？</p>

<p>我也没什么好办法，一方面自己不是拖延症研究专家，相信也没有哪个专家敢说自己有完美的解决方案，另一方面，还是很看主观因素的，我就时常用大锤的 <code>走向人生巅峰</code> 这句话激励自己，拖延这副熊样是走不到巅峰的。实在不行，你就采用随机化的方法，通过掷骰子来选择做先解决哪个拖延事件吧。</p>

<h2 id="section-6">第六式：创建富消息</h2>

<p>有些任务光光记录时间、地点、人物是不够滴，还可能会包含附加资源，比如填写就业推荐表的任务需要表，申请某公司职位的任务需要网址。我期望任务的资源就近安放，点选任务就会出现。</p>

<p>前面提到的 OmniFocus 可以给任务添加笔记，但无法添加附件，而 Wunderlist 则通过评论的方式实现了这一功能。Wunderlist 起初也是没有这项功能的，更早的时候我选择用 Producteev 建立富消息，这也是一款功能和界面都让人舒服的软件，收费版和免费版对于我们小用户来说基本无差。</p>

<p>我想举例说明一下富消息的使用。</p>

<p>算法当中需要调参数，于是我们会运行多组程序对比结果。普通做法是将每次运行的结果记录到笔记或Excel里，容易记混乱，导致抓狂；高档做法是让程序生成一个总的报表，需要额外编程费时间。富消息可以为我们提供一个折中的解决方案，方法是你创建一个任务，任务名是程序id、参数与启动时间之类的，评论里可以记录运行结束的时间、运行结果、log文件、效果截图等等。妥妥儿的不会乱，还便于查看对比。需要补充的一点是，因为可能云同步，所以机密的东西就不要乱传了。</p>

<p>我估计软件设计者当初也没太想到这种用法，嘿嘿。</p>

<h2 id="section-7">第七式：日常任务定量化</h2>

<p>自己的日常任务包括，逛逛技术博客收藏点儿文章、关注周边的讲座信息、整理时间规划、完成知识输出等。既然每天都要做，那还是放在一起列成单子好一些，每天标定完成度。具体有三点好处</p>

<ul>
  <li>目标明确，是<strong>你知道要做，而不是想到了再做</strong>；</li>
  <li>积累属于自己的“大数据”，监控自己的工作状态；</li>
  <li>有助于培养长期习惯。</li>
</ul>

<p>这个想法很普通，不过真正促成我做成这件事是因为我玩了一款网页游戏。这类网页游戏都会有日常任务，比如打某个副本5次啦，招募一个新武将啦之类的，完成后给你相应的奖励。我边玩边想，你这家伙对游戏里的任务这么上心，每天都是高完成率，就不能自己给自己建立一个类似的任务列表，每天保质保量的完成么。于是我给自己建了第一张清单，分专业学习、身体健康、情绪控制、时间规划、人际拓展、新事物接触六大板块，每类有子项，总计100分。</p>

<p><strong>清单可以打印出来，也可以做成可勾选的 Excel 文件的形式</strong>。现在这种清单方式是我主要的<strong>日回顾</strong>手段。</p>

<h2 id="section-8">时间管理的其它贴士</h2>

<p>除了以上七式，还有几条感触想与大家分享。</p>

<ul>
  <li><code>注意时间的权重不均匀性</code> 典型的例子是 <a href="http://book.douban.com/subject/1083762/">《人类群星闪耀时》</a> 这本书里的故事，当然，普通人很难经历这些啦。我们身边的一个例子是，<strong>平时可以打游戏，考前必须抱佛脚，考试就那么几天，刷——，说没就没啊</strong>。</li>
  <li><code>记录周报、月报</code> 暑假里养成了记周报、月报的习惯，作用不仅仅是梳理工作，也让阶段性规划管理成为可能。平时，任务创建大多是被动的（别人口述的、邮件里通知的等等）、预告式的，而在阶段性规划中我们可以主动为下周或者下个月制定发展计划与侧重点，比如把对 hadoop 的学习穿插在下月日程中，月末总结验收。</li>
  <li><code>注意运用纸笔</code> 大部分（不敢说得太绝对呀）效率管理工具都是纸笔的延伸，在有些问题上，纸笔或许就是最高效的解决方案。</li>
</ul>

<h2 id="section-9">总结</h2>

<p>本文总结了时间管理七式，分别是</p>

<ul>
  <li>第一式：安排好你知道将要发生的</li>
  <li>第二式：建立消息队列</li>
  <li>第三式：记录你的灵感</li>
  <li>第四式：建立等待队列</li>
  <li>第五式：建立拖延事件队列</li>
  <li>第六式：创建富消息</li>
  <li>第七式：日常任务定量化</li>
</ul>

<p>有招式还要有心法口诀，那就是</p>

<ul>
  <li>遇到问题不抱怨，抽象出问题的本质，思考解决问题的手段；</li>
  <li>把相似的问题集中起来，合力解决；</li>
  <li>多给自己提需求，不要安于现状。</li>
</ul>

<p>阅读本文的亲，</p>

<p>如果你正在做类似的事情，那我很高兴自己的想法得到了印证；</p>

<p>如果对你产生了一点启发，我也很高兴自己对他人起到帮助作用；</p>

<p>如果你觉得自己有更好的办法，请不吝赐教，乐意为你传播你的想法~</p>

<h2 id="section-10">附录</h2>

<p>本文提到的软件图标合集</p>

<p><a href="/img/post/2014-10/2.png" class="img-up" title="OmniFocus"><img class="imgcenter-no-shadow" src="/img/post/2014-10/2.png" width="20%" title="OmniFocus" ></a>
<a href="/img/post/2014-10/14.png" class="img-up" title="Wunderlist"><img class="imgcenter-no-shadow" src="/img/post/2014-10/14.png" width="20%" title="Wunderlist" ></a>
<a href="/img/post/2014-10/12.png" class="img-up" title="Producteev"><img class="imgcenter-no-shadow" src="/img/post/2014-10/12.png" width="20%" title="Producteev" ></a></p>
]]></content>
  </entry>
  
</feed>
