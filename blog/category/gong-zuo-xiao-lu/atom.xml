<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 工作效率 | Blog of 太极儒]]></title>
  <link href="http://frank19900731.github.io/blog/category/gong-zuo-xiao-lu/atom.xml" rel="self"/>
  <link href="http://frank19900731.github.io/"/>
  <updated>2014-10-16T18:28:01+08:00</updated>
  <id>http://frank19900731.github.io/</id>
  <author>
    <name><![CDATA[Frank Song]]></name>
    <email><![CDATA[scr_0731@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[【撰写中】我的知识管理经验与工具分享]]></title>
    <link href="http://frank19900731.github.io/blog/2014/10/16/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/"/>
    <updated>2014-10-16T18:21:07+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/10/16/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang</id>
    <content type="html"><![CDATA[<p><img class="imgcenter" src="/img/post/2014-10/2.png" width="256" height="256" title="OmniFocus" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【撰写中】提高效率与情趣的九种程序工具推荐]]></title>
    <link href="http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/"/>
    <updated>2014-10-16T17:28:06+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#section">选题目的</a></li>
  <li><a href="#section-1">介绍角度</a></li>
  <li><a href="#section-2">代码开发篇</a>    <ul>
      <li><a href="#section-3">引言</a></li>
      <li><a href="#git">Git</a></li>
      <li><a href="#shell-script">Shell Script</a></li>
    </ul>
  </li>
  <li><a href="#section-4">文档整理篇</a>    <ul>
      <li><a href="#section-5">引言</a></li>
      <li><a href="#markdown">Markdown</a></li>
      <li><a href="#octopress">Octopress</a></li>
      <li><a href="#knitr">knitr</a></li>
    </ul>
  </li>
  <li><a href="#section-6">自我展示篇</a>    <ul>
      <li><a href="#tpp">tpp</a></li>
      <li><a href="#jmpressjs">jmpress.js</a></li>
    </ul>
  </li>
  <li><a href="#section-7">数据展示篇</a>    <ul>
      <li><a href="#shiny">Shiny</a></li>
      <li><a href="#d3">d3</a></li>
    </ul>
  </li>
  <li><a href="#section-8">其它工具</a></li>
  <li><a href="#section-9">总结</a></li>
</ul>

<!-- excerpt start -->
<p>自己平时爱鼓捣些工程上的小玩意儿，在一次实验室的Paper Reading上给大家分享了自己的一点体会，给大家推荐了几款能够提高工作效率与生活情趣的工具，整理于此。</p>

<h2 id="section">选题目的</h2>

<ul>
  <li>把自己知道的，用过的，感觉有意思或有用的分享给大家，实现自己的知识梳理与输出</li>
  <li>让大家在遇到类似应用场景的时候知道有某种工具是很适用的</li>
  <li>督促大家掌握某种工具（比如 git，shell，markdown ），进而提升工作效率，也可以以工具为杠杆撬动更多的资源</li>
</ul>

<h2 id="section-1">介绍角度</h2>
<ul>
  <li>类型</li>
  <li>星级评定（1星-5星）
    <ul>
      <li>入门难度</li>
      <li>实用性</li>
      <li>装X效果</li>
    </ul>
  </li>
  <li>描述</li>
  <li>适用场合</li>
  <li>实例说明</li>
  <li>参考资料</li>
</ul>

<!-- excerpt end -->

<h2 id="section-2">代码开发篇</h2>

<h3 id="section-3">引言</h3>
<p>摘自<a href="http://www.oschina.net/question/817257_112066">《程序员装逼指南》</a></p>

<p><blockquote><p>千万不要说自己是做Java或者.Net的，一下子就屌丝了。</p></p><p><p>PHP也不行，Python稍微有点烂大街，但还是明显要强过前几个。</p></p><p><p>剩下的可以说自己是做Ruby的，但不要做Rails，说Sinatra。</p></p><p><p>Go、Erlang、Clojure、Scala能给80分，你要是说会个Lisp就是85分，Haskell直接捅到90分，但是千万注意，一定要说只是精通Haskell，没事喜欢研究Haskell，千万不要说干这个的。</p></p><p><p>最后再拽出来一个Prolog就成仙了。</p></p><p><p>如果怕被继续追问就说自己做C++的，就是放了个大烟雾弹，让对面也猜不透究竟有几斤几两。</p></p><p><p>C是什么？不知道。</p></blockquote></p>

<p>以上顺序列举的编程语言（C、C++除外）学习难度增大，对逻辑思维能力要求提升，代码实现向人的思维靠拢。</p>

<p>TIOBE程序语言排行榜<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，2014年5月最新统计（括号内前一数值为排名，后一数值为占比）：</p>

<p>Java（2，16.907%）</p>

<p>.Net（C# 6，3.745%，VB.NET 11，1.264%，F# 13，1.030%）</p>

<p>PHP（7，3.386%） Python（8，3.057%）</p>

<p>Ruby（12，1.242%）</p>

<p>Go（31，0.423%） Erlang（47，0.236%） Clojure（65, -） Scala（35，0.331）</p>

<p>Lisp（16，0.967）</p>

<p>Haskell（40，0.281%）</p>

<p>Prolog（45，0.252%）</p>

<p>C++ （4，5.986%）</p>

<p>C （1，16.926%）</p>

<p>以上结果与《程序员装逼指南》中对编程语言的逼格划定大致接近。</p>

<p>至于C、C++，个人感觉，它们向来是程序员入门语言，使用的人也很多，但真正驾驭它们还是很难的。有兴趣请移步欣赏 <a href="http://v.youku.com/v_show/id_XNzEyMDU2NDYw.html">猿泡沫</a></p>

<p>更多有关程序语言的种类与它们之间的程序关联请见 <a href="http://exploringdata.github.io/vis/programming-languages-influence-network/">编程语言关系图</a>，这是一件优美的数据可视化作品，托管于Github。</p>

<p><img class="imgcenter" src="/img/post/2014-10/1.png" width="549" height="384" title="程序语言关系图" ></p>

<p>扯远了，举例说明与人类语言、思维相近的编程语言：</p>

<ul>
  <li>Haskell</li>
</ul>

<p>Haskell号称“证明即程序，命题为类型”。</p>

<p>以下代码中，<code>[a | a &lt;- xs, a &lt;= x]</code> 是集合语言，<code>smallerSorted ++ [x] ++ biggerSorted</code> 蕴含了递归。</p>

<p><code>haskell Haskell 快速排序
quicksort :: (Ord a) =&gt; [a] -&gt; [a]   
quicksort [] = []   
quicksort (x:xs) =   
  let smallerSorted = quicksort [a | a &lt;- xs, a &lt;= x]  
      biggerSorted = quicksort [a | a &lt;- xs, a &gt; x]   
  in smallerSorted ++ [x] ++ biggerSorted
</code></p>

<ul>
  <li>Prolog</li>
</ul>

<p>人工智能中的演绎推理，谓词逻辑。</p>

<p><code>prolog Prolog 示例
human(kate).
human(bill).
likes(kate,bill).
friend(X,Y):-likes(X,Y),likes(Y,X).
</code></p>

<p><strong>引言讲了这么多，意义何在？</strong></p>

<ul>
  <li>茶余饭后的谈资；</li>
  <li>程序语言的设计也是一门很深的学问，流行的语言有自身的优势，小众的语言也有不俗的理念，多一些了解有助于我们认清程序语言——我们每天打交道的日常工具——的本质属性；</li>
  <li>程序语言是开源世界的钥匙。</li>
</ul>

<h3 id="git">Git</h3>

<p><strong>类型</strong>  ——  版本控制</p>

<p><strong>入门难度</strong>  ——  ★✩✩✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★★</p>

<p><strong>装X效果</strong>  ——  ★★✩✩✩</p>

<p><strong>描述</strong></p>

<ul>
  <li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137402760310626208b4f695940a49e5348b689d095fc000">Git诞生的故事</a></li>
  <li>集中式（SVN为代表） vs 分布式（Git为代表）</li>
  <li>SVN与Git的区别与优劣争论有很多，不予详述，但Github着实具有很强的吸引力</li>
  <li>Github Education
    <ul>
      <li>Private空间免费使用</li>
      <li>教学使用
        <ul>
          <li>收发作业的平台</li>
          <li>自动测试</li>
        </ul>
      </li>
      <li>申请方式
        <ul>
          <li>个人名义：需要学校邮箱，立即审核通过，5个private项目</li>
          <li>组织名义：一周审批时间，可能不通过……</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Github 提供免费空间建站，如本站
    <ul>
      <li>稳定性强，小网站不太担心流量冲击</li>
    </ul>
  </li>
  <li>在自己的linux系统上搭建git服务器（gitosis），并安装Gitweb提供外部访问
    <ul>
      <li>适合小团队内部使用，比如实验室，但要注意备份！</li>
      <li>项目访问权限可控，网页上项目可见性可控</li>
    </ul>
  </li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>代码分享</li>
  <li>合作开发
    <ul>
      <li>版本控制</li>
      <li>冲突合并</li>
      <li>新功能添加</li>
      <li>Bug查找</li>
    </ul>
  </li>
</ul>

<p>详见参考资料中的实用教程。</p>

<p><strong>实例说明</strong></p>

<p>Github建站实例：<a href="http://gabrielecirulli.github.io/2048/">2048游戏</a></p>

<p>Gitweb实例：<a href="https://git-wip-us.apache.org/repos/asf?p=spark.git;a=summary">Spark</a></p>

<p><strong>参考资料</strong></p>

<p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git实用教程</a></p>

<p><a href="http://wiki.ubuntu.org.cn/index.php?title=Git%E6%9C%8D%E5%8A%A1%E5%99%A8Gitosis%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE&amp;variant=zh-hans">Git服务器配置</a></p>

<h3 id="shell-script">Shell Script</h3>

<h2 id="section-4">文档整理篇</h2>

<h3 id="section-5">引言</h3>

<h3 id="markdown">Markdown</h3>

<h3 id="octopress">Octopress</h3>

<h3 id="knitr">knitr</h3>

<h2 id="section-6">自我展示篇</h2>

<h3 id="tpp">tpp</h3>

<h3 id="jmpressjs">jmpress.js</h3>

<h2 id="section-7">数据展示篇</h2>

<h3 id="shiny">Shiny</h3>

<h3 id="d3">d3</h3>

<h2 id="section-8">其它工具</h2>

<h2 id="section-9">总结</h2>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>一种语言的占比等于其在8大网站（Google 30%，Blogger 30%，Wikipedia 15%，YouTube 9%，Baidu 6%，Yahoo! 3%，Bing 3%，Amazon 3%）上被搜索出的结果总数，除以前50名语言的结果总数。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
