<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mac 使用 | Blog of 太极儒]]></title>
  <link href="http://frank19900731.github.io/blog/category/mac-shi-yong/atom.xml" rel="self"/>
  <link href="http://frank19900731.github.io/"/>
  <updated>2015-05-28T01:25:10+08:00</updated>
  <id>http://frank19900731.github.io/</id>
  <author>
    <name><![CDATA[Frank Song]]></name>
    <email><![CDATA[scr_0731@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[每周一软之 Today Scripts]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/"/>
    <updated>2015-05-24T20:45:37+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://github.com/SamRothCA/Today-Scripts">Today Scripts</a> 是一款开源的通知栏插件，顾名思义是可以编写脚本并将结果显示于通知栏的 Today 面板。功能用法上它和此前我们介绍的 <a href="http://http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/">GeekTool</a> 类似，只不过前者占据桌面，而后者顺应 Yosemite 的潮流以通知栏插件形式出现。</p>

<p>从自身使用习惯的来看，通知中心出场率很低，偶尔访问一般是为了叉掉已有通知。我的第三方插件主要来自社交、效率、文摘类软件，它们的作用是提醒、展示，也是快速访问入口，但我第一想到的还是通过 Alfred 这种快速启动工具打开软件查看。我个人比较喜欢的两款第三方插件是 <a href="http://doublerew.net/en/app/os-x/monthlycal/">MonthlyCal</a> 和 <a href="http://bjango.com/mac/istatmini/">iStat Mini</a>，前者是一款待办事项日历，数据来自 Calendar，后者是系统状态监控。还有一款名为 <a href="https://itunes.apple.com/us/app/stat/id931063335?mt=12">Stat</a> 的软件，可以指定 Git 管理的文件夹，在 Finder 中显示文件状态（新增、修改等），并在通知栏里显示状态变化文件的数量信息，不过当前软件版本对新建文件数的统计总是 0……</p>

<p><a href="/img/post/2015-5/11.png" class="img-up" title="iStat Mini"><img class="imgcenter" src="/img/post/2015-5/11.png" width="50%" title="iStat Mini" ></a></p>

<p><a href="/img/post/2015-5/10.png" class="img-up" title="MonthlyCal"><img class="imgcenter" src="/img/post/2015-5/10.png" width="50%" title="MonthlyCal" ></a></p>

<p><a href="/img/post/2015-5/12.png" class="img-up" title="Stat"><img class="imgcenter" src="/img/post/2015-5/12.png" width="50%" title="Stat" ></a></p>

<!-- excerpt end -->

<p>Today Scripts 的用法很简单，启动一次软件，就能够在通知栏中插件列表中找到它，将其添加到 Today 面板。系统更新后可能发现找不到该插件，启动一次软件可再次添加进插件列表。点击右上角 info 标记可以添加、删除脚本，点击脚本旁的齿轮标记可以修改脚本设置。</p>

<p><a href="/img/post/2015-5/13.png" class="img-up" title="新建脚本"><img class="imgcenter" src="/img/post/2015-5/13.png" width="50%" title="新建脚本" ></a></p>

<p>脚本设置有三项：</p>

<ul>
  <li>标签，插件会在脚本输出结果的上方显示该标签，<strong>点击标签即可手动触发脚本的执行</strong>；</li>
  <li>执行环境，比如 <code>/bin/bash</code>、<code>/usr/bin/python</code>；</li>
  <li>脚本代码。</li>
</ul>

<p>当然，也可以<strong>在执行环境中填入可执行文件路径</strong>，而将脚本代码留空。</p>

<p>具体设置方法与代码示例可见 <a href="https://github.com/SamRothCA/Today-Scripts/wiki">官方 wiki</a> 或其它网络资源，比如 <a href="http://www.waerfa.com/today-scripts-for-yosemite-today-view">Today Scripts：打造个性化 Yosemite 通知栏插件</a>、<a href="http://sspai.com/27662">用终端命令定制你的 OS X 通知中心：Today Scripts 体验详解</a>（系统信息里的代码似乎有问题，可以将两处 <code>awk -F''</code> 修改为 <code>awk -F'&lt;configCode&gt;'</code> 和 <code>awk -F'&lt;/configCode&gt;'</code>）。</p>

<p>常见的脚本无外乎获取日期、天气、股票、系统状态（CPU、内存、温度、风扇、电量等）等信息，虽然可以暂时带来某种心理愉悦，但<strong>通知栏好不容易打开了，就让我看这个</strong>？对于程序员来说，将 Today Scripts 用作工作面板（GeekTool 当然也能做到，只是 <a href="http://frank19900731.github.io/blog/2015/02/08/mei-zhou-yi-ruan-zhi-blotter/">Blotter</a> 已经占据了我整个桌面……）才是正道，可以是 Git 信息，可以是后台程序的运行进度，可以是数据库信息，也可以是网站监控…… Today Scripts 相比终端减少重复劳动、节省时间，而这才是我们打开通知中心的动力。</p>

<p>此外，不同于绝大多数通知栏插件，Today Scripts 的<strong>显示结果支持复制、拖拽</strong>。</p>

<h2 id="section-1">界面设计</h2>

<p><a href="/img/post/2015-5/9.png" class="img-up" title="Today Scripts"><img class="imgcenter" src="/img/post/2015-5/9.png" width="50%" title="Today Scripts" ></a></p>

<h2 id="section-2">易用性</h2>

<p>定制要求不高则简单，进阶一点需要掌握某种脚本语言（AppleScript、Shell、Python、Ruby 等），再进一步需要熟悉 Today Scripts 的源代码，诸如修改字体字号、设置刷新时间等功能应该就可以实现吧。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好，不过脚本多了感觉每个都会很慢。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>放眼 OS X 界面，允许我们编写脚本显示自定制信息的也就是桌面、菜单栏、通知栏再加上仪表板（Dashboard）了。</p>

<p>桌面显示的代表软件自然是 <a href="http://projects.tynsoe.org/en/geektool/">GeekTool</a>，空间够大，若能细心设计，美观程度也是妥妥儿的。</p>

<p>菜单栏寸土寸金，限于尺寸无法完整显示长文本，代表性的软件有 <a href="http://www.richsomerfield.com/apps/">TextBar</a>、<a href="http://www.shellwrangler.com/?inclick">Shellwrangler</a>，前者在功能、可定制性、美观程度上远优于免费的后者，可参见 <a href="https://github.com/richie5um/TextBar-Recipes">脚本实例</a>。</p>

<p>通知栏的尺寸特点能够让信息完整、紧凑的显示出来，双指滑动调用也比较流畅，不过尚未发现与 Today Scripts 类似的软件。</p>

<p>Dashboard 空间虽大，但估计不太有用户会经常光顾这里。Dashboard 插件少，开发也不活跃，目前仅能找到 <a href="http://www.apple.com/downloads/dashboard/networking_security/shellwatcher.html">Shellwatcher</a> 可以执行脚本并显示结果，效果很土的说，还有一款名为 Quickcommand 的插件已经下架了。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>开源；</li>
  <li>可定制性强，功能实用。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>插件本身的定制成本高，需要学习源代码。</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 HoudahSpot]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/"/>
    <updated>2015-05-17T20:50:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="http://www.houdah.com/houdahSpot/">HoudahSpot</a> 是一款文件搜索工具，典型的功能强大界面糙，见过的没见过的功能都浓缩在四列之中。<strong>HoudahSpot 的搜索基于 Spotlight</strong>，<strong>搜索速度快</strong>，但也<strong>受限于索引更新</strong>。</p>

<p><a href="/img/post/2015-5/8.png" class="img-up" title="HoudahSpot 软件界面"><img class="imgcenter-no-shadow" src="/img/post/2015-5/8.png" width="99%" title="HoudahSpot 软件界面" ></a></p>

<p>HoudahSpot 提供了丰富的查询条件和过滤功能。常见的查询条件有文本内容、文件类型、文件大小、最近打开时间等，还包括<strong>近 300 种与特定文件类型相关的属性</strong>，比如图片尺寸。这些查询条件各自可以做精细定制，也可以<strong>以逻辑与或非的关系进行组合</strong>。选中搜索结果中的一项，最右侧列显示了该文件的详细信息、预览和文本预览。详细信息的各项可以作为过滤条件对搜索结果进行筛选，预览显示该文件在默认打开程序中的效果，文本显示文件的文本信息（如果有）、<strong>高亮搜索关键词</strong>。</p>

<!-- excerpt end -->

<p>HoudahSpot 除可以指定搜索路径，还可以跳过某些路径，与一般搜索软件不同的是<strong>路径可以是多个文件夹的组合</strong>。</p>

<p>HoudahSpot 允许我们将上述<strong>查询条件保存为片段</strong>（Snippet）<strong>或模板</strong>（Template），便于今后重复使用或微调。</p>

<p>HoudahSpot 提供的高级搜索功能和便捷操作还包括：</p>

<ul>
  <li>支持输入如 <code>kind:wordProcessing date:thisYear</code> 的搜索语句，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">Advanced Features</a> 一节；</li>
  <li>一次查询以<strong>标签页</strong>形式展现，可同时展示多个标签页；</li>
  <li>支持拖拽文件到查询条件上以修改查询条件与该文件相符；</li>
  <li>支持<strong>查询结果格式化拷贝</strong>，可直接粘贴到 Excel中；</li>
  <li>支持添加全局热键唤起搜索框，和 Spotlight 类似；</li>
  <li>支持 AppleScript 调用，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">AppleScript</a> 一节；</li>
  <li>支持 Calendar、Reminder 和 Contacts 搜索。</li>
</ul>

<h2 id="section-1">界面设计</h2>

<p>简暴。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>Spotlight、Finder 提供了 OS X 基本的文件搜索功能，只有文件名、标签等有限的搜索条件。</p>

<p><a href="http://www.alfredapp.com/">Alfred</a>、<a href="http://qsapp.com/">QuickSilver</a> 也支持简单的文件搜索，可以设置待索引的文件夹和目录深度，全盘索引压力较大也没有必要。</p>

<p><a href="http://www.devontechnologies.com/products/freeware.html">EasyFind</a> 是一款免费的轻量级搜索工具，在了解 HoudahSpot 以前常用。题外话，写这篇博客的时候才知道它居然和大名鼎鼎的 <a href="http://www.devontechnologies.com/products/devonnote.html">DEVONnote</a> 出自同一家公司。EasyFind 的好处是不只依赖于索引，所以可以<strong>实时查询</strong>。</p>

<p>当然，说到文件搜索，<a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?find">find</a> 命令自然不能不提，用法网上有很多，此处不展开。</p>

<p>如果搜索目标是文本文件的内容，那一些编辑器也是可用的，比如 Sublime 的插件 <a href="https://github.com/titoBouzout/SideBarEnhancements">SideBarEnhancements</a> 提供了 Find Advanced 功能。虽然说到底是封装了命令行，但毕竟也省去了记忆参数的麻烦。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>标签式管理；</li>
  <li>查询条件可以保存为模板；</li>
  <li>搜索可跳过某些路径，路径可指定多个文件夹；</li>
  <li>查询结果可以格式化拷贝。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>功能实在强大，长得丑点也就忍了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Disk Sensei]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/"/>
    <updated>2015-05-10T20:49:48+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://www.cindori.org/software/disksensei/">Disk Sensei</a> 是一款磁盘工具软件，与知名软件 <a href="https://www.cindori.org/software/trimenabler/">Trim Enabler</a> 来自同一软件厂商。前者除包含后者功能外，还提供了磁盘信息检测、健康度评估、垃圾清理、优化设置、基准检测、可视化分析和读写监控等功能。这些功能（除优化设置、Trim 设置）普遍存在于其它磁盘管理或系统优化软件中，Disk Sensei 算是功能全面的一个，界面设计也很美观，如下图，显示的是磁盘信息。</p>

<p><a href="/img/post/2015-5/2.png" class="img-up" title="磁盘信息"><img class="imgcenter-no-shadow" src="/img/post/2015-5/2.png" width="80%" title="磁盘信息" ></a></p>

<p><a href="http://en.wikipedia.org/wiki/Trim_%28computing%29">Trim</a> 指令的主要功能是<strong>标记文件删除并通知固态硬盘相应的磁盘存储空间可回收</strong>，使得固态硬盘可以早做垃圾回收和磁盘优化，从而<strong>提高固态硬盘的读写速度并减少读写请求数</strong>。这一指令在 OS X 中默认关闭，<strong>每次系统更新后也都是关闭</strong>，可以通过 Trim Enabler 等工具激活。</p>

<!-- excerpt end -->

<p>优化设置是我觉得做的比较贴心的一项功能，包括四点：</p>

<ul>
  <li>瞬间移动下的磁盘保护，关闭可以省电；</li>
  <li>本地 Time Machine，关闭可以省空间，减少磁盘读写，延长磁盘使用寿命；</li>
  <li>深度睡眠状态下内存数据会被写入磁盘，关闭可以省空间；</li>
  <li>文件访问记录，关闭可以减少磁盘读写，延长磁盘使用寿命。</li>
</ul>

<p><a href="/img/post/2015-5/4.png" class="img-up" title="优化设置"><img class="imgcenter-no-shadow" src="/img/post/2015-5/4.png" width="80%" title="优化设置" ></a></p>

<p>我们完全可以通过手工设置（可能是终端中输入命令行）来控制这些功能，只是 Disk Sensei 把它们简化为开关就更方便一些。</p>

<p>磁盘可视化显示是很有用的功能，比如便于在磁盘空间有异常变化时分析原因，<a href="https://www.apple.com/osx/server/features/">OS X Server</a> 的日志就曾吞噬过我几百 G 的空间。可视化不但能帮我们寻找大文件，也能寻找大文件夹。</p>

<p><a href="/img/post/2015-5/5.png" class="img-up" title="磁盘可视化"><img class="imgcenter-no-shadow" src="/img/post/2015-5/5.png" width="80%" title="磁盘可视化" ></a></p>

<p>最后要说的磁盘读写监控，比 Activity Monitor 更精细一些，可以点击进程查看其详细的读写操作。</p>

<p><a href="/img/post/2015-5/6.png" class="img-up" title="各进程磁盘读写"><img class="imgcenter-no-shadow" src="/img/post/2015-5/6.png" width="80%" title="各进程磁盘读写" ></a></p>

<p><a href="/img/post/2015-5/7.png" class="img-up" title="磁盘读写实时统计"><img class="imgcenter-no-shadow" src="/img/post/2015-5/7.png" width="80%" title="磁盘读写实时统计" ></a></p>

<h2 id="section-1">界面设计</h2>

<p>界面设计清新美观。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>普通功能稳定，磁盘基准测试和可视化扫描时会占用大量资源，可能崩溃。特别是可视化扫描，多次出现耗尽 16G 系统内存的情况，后来发现在扫描前先选择 clear results 就会好很多。</p>

<h2 id="section-4">跨平台</h2>

<p>仅在 OS X 下。</p>

<h2 id="section-5">类似软件</h2>

<p><a href="http://mainmenuapp.com/">MainMenu</a>、<a href="https://apps.adnx.com/en">xScan</a> 等都是老牌系统维护、监控软件，包含了一定的磁盘监控功能。</p>

<p><a href="http://daisydiskapp.com/">DaisyDisk</a>、<a href="https://nektony.com/disk-inspector">Disk Inspector</a> 均为磁盘可视化工具，功能大同小异，只是前者可以 <strong>Scan as Administrator</strong>，且具有预览功能。</p>

<p>Disk Utility 是系统小工具，可以实现磁盘权限修复、错误修复等功能；Activity Monitor 也是系统小工具，可以简单观察磁盘读写。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>功能全面，且集成四项优化功能；</li>
  <li>界面清新美观。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>可视化扫描时没有进度条，容易崩溃。</li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Sublime]]></title>
    <link href="http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/"/>
    <updated>2015-05-03T11:50:44+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>论文肿算写完鸟，会一点点把落下的每周一软补回来。</p>

<h2 id="section">功能介绍</h2>

<p>每周一软不打算介绍开发工具，只是觉得 Sublime 对普通人的工作学习也有很大帮助，所以将它选入主题。</p>

<p><a href="http://www.sublimetext.com/">Sublime Text</a> 是一款轻量级的编辑器，最初多用于前端开发（现在也是这样吧），堪比瑞士军刀，现在也逐渐受到非前端程序员的喜爱。一些人会拿它与 Emacs、Vim、Eclipse、Jet Brains 系列作比较，我觉得还是看使用目的和个人习惯吧。Sublime 精简美观，上手比 Emacs、Vim 简单，功能上是它们的子集，取而代之也是无稽之谈；相比 IntelliJ IDEA、RubyMine 等 IDE，Sublime 在项目的支持上更弱，但做小规模开发还是绰绰有余的。</p>

<p>对有情怀的程序员来说，Emacs 或 Vim 是世界上雷打不动的最佳编辑器，这是无法撼动的<strong>人生哲学</strong>，但对于俺这种功利主义普通程序员来说，还是啥得劲儿用啥，Vim 还在慢慢学（对使用 Vim 如飞的人只能羡慕嫉妒恨），远程开发优先版本控制和目录挂载。</p>

<p>事先声明，以下介绍的<strong>大部分功能在别的软件中也有</strong>……</p>

<!-- excerpt end -->

<p>Sublime 上手简单、易用性强主要体现在：</p>

<ul>
  <li><strong>功能查找方便</strong>
    <ul>
      <li>快捷键要常用才记得牢，所以 Vim 中我只能记住一小部分。Sublime 的菜单栏提供了较丰富的编辑功能，比如行排序、随机打乱行、分屏等，方便调用。</li>
      <li>Sublime 提供了 Command Palette （Mac 下快捷键为 Shift + Command + P）进行命令搜索，支持模糊匹配，方便查询、调用自带功能和插件功能。</li>
    </ul>
  </li>
  <li><strong>插件系统强大</strong>
    <ul>
      <li>插件是软件功能的扩展，能在满足用户需求的同时减少软件本身的系统占用，之后我们会介绍一些普通用户也能用得到的插件。</li>
      <li>主题也是一种插件，一个赏心悦目的编辑界面无疑能够提高用户的写作效率。</li>
    </ul>
  </li>
  <li><strong>可定制性强</strong>
    <ul>
      <li>Sublime 的插件功能使用 Python 实现，辅之以 json 文件作配置，编写者有基本的 Python 开发知识就足够。</li>
      <li>Sublime 的配置都是 json 文件，区分用户配置和系统配置，前者覆盖后者。这样做能够防止用户定义设置被软件或插件更新覆盖，也方便配置的移植。</li>
    </ul>
  </li>
</ul>

<p>系统自带功能中，个人脚着最实用的是 Goto Anything。一个常见场景是，打开某个目录，需要不断点击子文件夹找到某个文件进行编辑，之后又要到另外一个子文件夹打开别的文件，这时有一个<strong>支持路径模糊匹配的文件搜索</strong>就会方便很多。Mac 下 Command + P 调用 Goto Anything，可以跳转到文件、跳转到行或跳转到符号。再者就是<strong>多点编辑</strong>功能，可自行查询学习。</p>

<p>随便搜一下“Sublime 插件推荐”就有很多结果，这里只介绍一些<strong>普通用户适用的插件</strong>。</p>

<ul>
  <li>Markdown 系列，详见<a href="/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/">《在 Sublime 中配置 Markdown 环境》</a>，插件安装方式也见该文；</li>
  <li><strong>ConvertToUTF8</strong>，对 Sublime 现有文件编码支持的扩展，如支持 GBK；</li>
  <li><strong>Advanced New File</strong>，新建文件时指定路径，而不必先找到文件夹再右键 New File；</li>
  <li><strong>SideBarEnhancements</strong>，必装插件，扩展侧边栏功能，如 Open With、Find Advanced 等，其中 Find in Folder 功能用起来很带劲；</li>
  <li><strong>SyncdSideBar</strong>，在侧边栏目录结构中同步定位到当前打开的文件，配合 Goto Anything 使用；</li>
  <li><strong>FileHistory/LocalHistory</strong>，文件备份；</li>
  <li><strong>Trimmer</strong>，删除行末空白字符，无论是编程还是撰写文档都会用到；</li>
  <li><strong>SFTP</strong>，通过 FTP 映射本地目录和远程目录，使得编辑同步，但实际用起来并不方便，不如使用 <a href="http://fuse.sourceforge.net/sshfs.html">SSHFS</a> 进行目录挂载来得方便，前提是网速够快；</li>
  <li><strong>Sublimall</strong>，在不同的 Sublime 安装间同步配置；</li>
  <li><strong>Evernote</strong>，操作 Evernote 文档； </li>
  <li><strong>DictionaryAutoComplete</strong>，英文单词自动补全；</li>
  <li><strong>PlainTasks</strong>，一个 todo list 工具，待办事项记录在后缀名为 todo 的文档中，提供了一个简单效率软件所应具有的全部功能，包括新建条目、完成、取消、截止日期、开始时间、暂停时间、结束时间、归档等，还可以链接文件与网址。</li>
</ul>

<p>对最后一个插件 PlainTasks 要多说两句，现在我习惯于在写作或代码项目下建立一个 todo 文件，把以前写在 Readme 文件里的进度和待添加特性挪到这里。todo 文件其实就是文本文件，在没有 Sublime 的情况下也是可以查看、编辑的。当然，这只是一个简便的选择，没法跟 Emacs 下的 orgmode 比啦。</p>

<h2 id="section-1">界面设计</h2>

<p>简洁美观，会让一些人觉得是<strong>编辑器中的花瓶</strong>，其实是有货滴。</p>

<p><a href="/img/post/2015-5/1.png" class="img-up" title="Sublime 界面展示"><img class="imgcenter-no-shadow" src="/img/post/2015-5/1.png" width="100%" title="Sublime 界面展示" ></a></p>

<h2 id="section-2">易用性</h2>

<p>对普通用户有一定上手难度，但带来的效率提升远大于付出的努力，学习性价比高。</p>

<h2 id="section-3">稳定性</h2>

<p>总的来说是稳定的，但有过几次需要重启电脑才能正常工作的情况，原因未知。</p>

<h2 id="section-4">跨平台</h2>

<p>Windows、Linux、OS X 均可，只有图形界面。</p>

<h2 id="section-5">类似软件</h2>

<p>CodeRunner，Foobar，CodePad，TextMate 等都是代码编辑器，总体以 TextMate 名气大、功能全面，但它<strong>绚烂绽放的菊花图标</strong>让我颇为羞涩，Mac 下 CodeRunner 也很知名。Visual Studio Code 也是近期不能不提的代码编辑器，微软粉的最爱吧。</p>

<p>文本编辑器推荐可见<a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">《每周一软之 Markdown 笔记软件 Ulysses III》</a>，Ulysses III 最近更名为 Ulysses，改版之后运行效率优化不少，但界面美观性大不如前，特别是蝴蝶图标吓到不少对虫子有阴影的用户。还发现一款名为 Storyist 的软件，本来是用于小说、剧本写作的，但用来成体系地写一份学习笔记也是很不错的，类似 Gitbook。</p>

<h2 id="section-6">闪光点</h2>

<p>学习性价比高。</p>

<h2 id="section-7">缺点</h2>

<p>可以提很多，但想了想这不就是个编辑器嘛。如果觉得不适用，说明应该找找插件或换用更强大的工具了，比如 Vim、Emacs，排名不分先后……</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Napkin]]></title>
    <link href="http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/"/>
    <updated>2015-04-25T17:24:57+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="/img/post/2015-3/1.gif" width="40%" title="论文施工中" ></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>
]]></content>
  </entry>
  
</feed>
