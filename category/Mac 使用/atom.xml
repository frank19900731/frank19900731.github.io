
<item>
    <title>每周一软之 Hider 2</title>
    <link>http://realjenius.com/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-05-31T19:14:44+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="http://macpaw.com/hider">Hider 2</a> （曾用名 MacHider）是一款文件夹加密隐藏工具，与 <a href="http://macpaw.com/cleanmymac">CleanMyMac</a> 来自同一厂商 <a href="http://macpaw.com/">MacPaw</a>。Hider 的加密隐藏的主要做法可以概括为：</p>

<ul>
  <li>用户设置软件访问密码，可以添加文件或文件夹并切换其显示/隐藏，也可以类似 1PassWord 等软件直接添加 Secure Note；</li>
  <li>系统自动生成密钥，使用 AES-256 进行加解密，密钥和具体加解密流程对用户透明；</li>
  <li>加密操作保持加密文件夹的目录结构，<strong>分别随机打乱文件名与后缀名中的字符</strong>（比如 photo.jpg 变成 othpo.pjg），<strong>对每个文件进行单独加密</strong>，保存加密结果到用户设置的全局 Vault 中，同时<strong>对源文件进行安全删除</strong>（见下图）； </li>
  <li>解密操作还原目录结构，删除（似乎不是安全删除）加密文件；</li>
  <li>加解密操作过程中，<strong>均有一份完整的原始文件或加密文件保存在磁盘中</strong>，防止加解密失败导致数据丢失。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-5/15.png" class="img-up" title="安全删除"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/15.png" width="65%" title="安全删除" /></a></p>

<!-- excerpt end -->

<p>对于保持目录结构仅打乱命名的作法（目的应该是降低被搜索到的可能性吧，也只是降低而已）我是不太喜欢的，如果他人知晓文件名或后缀名，那么通过简单的枚举搜索就能够发现隐藏文件的存在，<strong>特别是在中文命名的情况下</strong>。虽然不知道密钥密码还是无法解析文件内容，但既然是隐藏为什么不做得更彻底一些呢。</p>

<p>Hider 2 对加密文件大小没有限制，只是在用户添加大文件（夹）时给出警告，如果文件需要经常切换显示、隐藏，自然还是分开处理更好。Hider 2 加解密速度大致相当，在固态硬盘、i5 CPU 条件下实测，100M 文件耗时几秒，1G 耗时 几十秒，3G 耗时约两分钟，单个文件大小几 K 到几 M 不等。</p>

<p>和大多数隐藏加密软件一样，<strong>忘记密码则无法恢复数据</strong>，所以 Hider 2 会建议用户将密码保存到 Key Chain 当中，不过更稳妥的方式自然是死记……</p>

<p>Hider 2 的特性还包括：</p>

<ul>
  <li>支持创建 Group，便于文档分类管理；</li>
  <li>支持识别文件在 Finder 中被指定的 Tag，便于查询；</li>
  <li>支持外置硬盘，会在该硬盘上创建 Vault 以隐藏文件。</li>
</ul>

<p>当然，也有 Hider 2 无法加密或不便加密的文件，前者比如说 Vault 自身，后者比如软件，因为解密后的软件无法通过 <a href="https://support.apple.com/en-gb/HT202491">GateKeeper</a> 校验。</p>

<h2 id="section-1">界面设计</h2>

<p>设计美观。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/14.png" class="img-up" title="Hider 2 主界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/14.png" width="90%" title="Hider 2 主界面" /></a></p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>一般地，文件的加密隐藏主要有三种形式。</p>

<ul>
  <li>不加密隐藏
    <ul>
      <li><a href="http://www.apimac.com/mac/secretfolder/">Apimac Secret Folder</a> 属于此类，前者仅在文件名前加 <code>.</code>，使成为系统隐藏文件，不够安全；</li>
    </ul>
  </li>
  <li>设置访问密码
    <ul>
      <li><strong>Finder 不支持对文件夹或文件夹设置访问密码</strong>；</li>
      <li>LameSecure 是早期 OS X 中的一款支持对文件夹设置密码的第三方应用，不过现在似乎已经不可用，而且也有相应的 <a href="https://discussions.apple.com/thread/3208638?tstart=0">规避手段</a>，也不够安全；</li>
    </ul>
  </li>
  <li>内容加密，<strong>通常只能暴力破解，较安全</strong>
    <ul>
      <li>全盘加密
        <ul>
          <li><a href="https://support.apple.com/en-us/HT204837">FileVault</a>是 OS X 的自带功能，<strong>需要登录密码解密磁盘</strong>，也即无法设置自动登录，如果私密文件仅占磁盘较小容量则不合适；</li>
        </ul>
      </li>
      <li>指定文件加密
        <ul>
          <li>Disk Utility 中 <a href="https://support.apple.com/en-us/HT201599">新建磁盘映像</a> 的功能可以设置密码和加密方式；</li>
          <li>rar 等压缩文件也可以设置密码，压缩的同时会对文件内容加密，比如 rar 采用 AES 算法加密； </li>
          <li><a href="https://www.espionageapp.com/">Espionage</a> 是一款与 Hider 2 功能类似的软件，号称可以做到 Plausible Deniability（合理性推诿），不过我觉得有点吹大了，以下作简要讨论。</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>Espionage 采取的措施主要是：</p>

<ul>
  <li>支持用户创建多个 Vault，不同 Vault 对应不同密码，如此用户可以创建虚假 Vault 和虚假文件；</li>
  <li>软件初始化时帮助用户随机创建虚假 Vault 和虚假文件。</li>
</ul>

<p>软件作者认为，当犯罪分子威胁人质时，人质可以输入密码进入假 Vault，或者还原一套假文件，这就算是合理性推诿了。然而，只要犯罪分子稍微研究一下 Espionage 的机制，人质就得遭殃了。</p>

<p>Vault 中的每个文件夹在数据目录中都以 sparsebundle 格式的文件存在，而不同 Vault 的 sparsebundle 文件是混在一起的。虽然无法知道有多少个 Vault、哪个 sparsebundle 存储的是虚假文件，但只要真实文件混在其中，犯罪分子就可以要求人质逐个解密，只要还有 sparsebundle 无法打开，就说明还有 Vault 密码没有交代出来。更奇葩的是，系统生成的虚假 Vault 密码人质是不知道的，对于无法打开的 sparsebundle，可能是人质真的不知道密码，但犯罪分子心里想的却是：你 TM 糊弄鬼呢？</p>

<p>那将 sparsebundle 后缀名去掉可否解决上述问题呢？理论上是不行的，因为该类型文件的二进制表示中有固定编码，还是会被搜索出来。</p>

<p>总的来说，Espionage 宣称的合理性推诿的成立场合是：</p>

<ul>
  <li>犯罪分子太菜，眼睁睁的看你在 Espionage 界面输入密码骗他，就是不去了解软件的工作机制；</li>
  <li>虚假文件创建水平高，在内容、时间戳、大小等各方面都能以假乱真；</li>
  <li>犯罪分子得到文件后无法验证真伪，或在证伪前就放走了人质。</li>
</ul>

<p>我不是很了解合理性推诿方面的研究，但也没蠢到轻信 Espionage，凭感觉想了几条起码的要求：</p>

<ul>
  <li><strong>加密隐藏机制封闭，而不是曝光于大众视野</strong>；</li>
  <li>加密文件的伪装性要高，可以是分布式存储；</li>
  <li>结合真实文件有针对性的作假，而不是随机作假；</li>
  <li>可<strong>设置文件自毁的触发条件</strong>，比如输入某个密码或输错密码多次。</li>
</ul>

<p>大部分人一辈子也不会负责保存比人命还重要的数据，所以这几条也只是想想而已。对于日常私密数据，<strong>用两三种不同的加密软件嵌套加密，注意数据的物理转移和安全删除</strong>，已经算得上稳妥了，毕竟大家隐藏小电影的方式也只是嵌套文件夹 + 重命名而已。</p>

<p>最后要提到的是 <a href="http://macpaw.com/encrypto">Encrypto</a>，它是 MacPaw 推出的与 Hider 2 相配套的软件，功能是使加密文件可分享，类似于加密的压缩文件。Encrypto 兼有 OS X 和 Windows 客户端，界面设计美观，加解密操作简单。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/16.png" class="img-up" title="设置密码"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/16.png" width="60%" title="设置密码" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/17.png" class="img-up" title="加密中"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/17.png" width="60%" title="加密中" /></a></p>

<p>Encrypto 加密文件相比压缩文件的好处是文件格式相对小众，修改后缀名能让安全系数更高一些。然而，查看加密文件的二进制表示发现有固定的 4 字节头部，所以还是可能被针对的。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>加解密操作简单快捷；</li>
  <li>对原始数据有安全删除操作；</li>
  <li>有 Encrypto 作为配套应用，便于加密文件分享。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>加密文件仍保持目录结构，文件名和后缀名只作字符乱序。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/">http://frank19900731.github.io/blog/2015/05/31/mei-zhou-yi-ruan-zhi-hider-2/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 Today Scripts</title>
    <link>http://realjenius.com/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-05-24T20:45:37+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://github.com/SamRothCA/Today-Scripts">Today Scripts</a> 是一款开源的通知栏插件，顾名思义是可以编写脚本并将结果显示于通知栏的 Today 面板。功能用法上它和此前我们介绍的 <a href="http://http://frank19900731.github.io/blog/2015/03/30/mei-zhou-yi-ruan-zhi-geektool/">GeekTool</a> 类似，只不过前者占据桌面，而后者顺应 Yosemite 的潮流以通知栏插件形式出现。</p>

<p>从自身使用习惯的来看，通知中心出场率很低，偶尔访问一般是为了叉掉已有通知。我的第三方插件主要来自社交、效率、文摘类软件，它们的作用是提醒、展示，也是快速访问入口，但我第一想到的还是通过 Alfred 这种快速启动工具打开软件查看。个人比较喜欢的两款第三方插件是 <a href="http://doublerew.net/en/app/os-x/monthlycal/">MonthlyCal</a> 和 <a href="http://bjango.com/mac/istatmini/">iStat Mini</a>，前者是一款待办事项日历，数据来自 Calendar，后者是系统状态监控。还有一款名为 <a href="https://itunes.apple.com/us/app/stat/id931063335?mt=12">Stat</a> 的软件，可以指定 Git 管理的文件夹，在 Finder 中显示文件状态（新增、修改等），并在通知栏里显示状态变化文件的数量信息，不过当前软件版本对新建文件数的统计总是 0……</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/11.png" class="img-up" title="iStat Mini"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/11.png" width="50%" title="iStat Mini" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/10.png" class="img-up" title="MonthlyCal"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/10.png" width="50%" title="MonthlyCal" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/12.png" class="img-up" title="Stat"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/12.png" width="50%" title="Stat" /></a></p>

<!-- excerpt end -->

<p>Today Scripts 的用法很简单，启动一次软件，就能够在通知栏中插件列表中找到它，将其添加到 Today 面板。系统更新后可能发现找不到该插件，启动一次软件可再次添加进插件列表。点击右上角 info 标记可以添加、删除脚本，点击脚本旁的齿轮标记可以修改脚本设置。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/13.png" class="img-up" title="新建脚本"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/13.png" width="50%" title="新建脚本" /></a></p>

<p>脚本设置有三项：</p>

<ul>
  <li>标签，插件会在脚本输出结果的上方显示该标签，<strong>点击标签即可手动触发脚本的执行</strong>；</li>
  <li>执行环境，比如 <code>/bin/bash</code>、<code>/usr/bin/python</code>；</li>
  <li>脚本代码。</li>
</ul>

<p>当然，也可以<strong>在执行环境中填入可执行文件路径</strong>，而将脚本代码留空。</p>

<p>具体设置方法与代码示例可见 <a href="https://github.com/SamRothCA/Today-Scripts/wiki">官方 wiki</a> 或其它网络资源，比如 <a href="http://www.waerfa.com/today-scripts-for-yosemite-today-view">Today Scripts：打造个性化 Yosemite 通知栏插件</a>、<a href="http://sspai.com/27662">用终端命令定制你的 OS X 通知中心：Today Scripts 体验详解</a>（系统信息里的代码似乎有问题，可以将两处 <code>awk -F''</code> 修改为 <code>awk -F'&lt;configCode&gt;'</code> 和 <code>awk -F'&lt;/configCode&gt;'</code>）。</p>

<p>常见的脚本无外乎获取日期、天气、股票、系统状态（CPU、内存、温度、风扇、电量等）等信息，虽然可以暂时带来某种心理愉悦，但<strong>通知栏好不容易打开了，就让我看这个</strong>？对于程序员来说，将 Today Scripts 用作工作面板（GeekTool 当然也能做到，只是 <a href="http://frank19900731.github.io/blog/2015/02/08/mei-zhou-yi-ruan-zhi-blotter/">Blotter</a> 已经占据了我整个桌面……）才是正道，可以是 Git 信息，可以是后台程序的运行进度，可以是数据库信息，也可以是网站监控…… Today Scripts 相比终端减少重复劳动、节省时间，而这才是我们打开通知中心的动力。</p>

<p>此外，不同于绝大多数通知栏插件，Today Scripts 的<strong>显示结果支持复制、拖拽</strong>。</p>

<h2 id="section-1">界面设计</h2>

<p><a href="http://frank19900731.github.io/img/post/2015-5/9.png" class="img-up" title="Today Scripts"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-5/9.png" width="50%" title="Today Scripts" /></a></p>

<h2 id="section-2">易用性</h2>

<p>定制要求不高则简单，进阶一点需要掌握某种脚本语言（AppleScript、Shell、Python、Ruby 等），再进一步需要熟悉 Today Scripts 的源代码，诸如修改字体字号、设置刷新时间等功能应该就可以实现吧。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好，不过脚本多了感觉每个都会很慢。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>放眼 OS X 界面，允许我们编写脚本显示自定制信息的也就是桌面、菜单栏、通知栏再加上仪表板（Dashboard）了。</p>

<p>桌面显示的代表软件自然是 <a href="http://projects.tynsoe.org/en/geektool/">GeekTool</a>，空间够大，若能细心设计，美观程度也是妥妥儿的。</p>

<p>菜单栏寸土寸金，限于尺寸无法完整显示长文本，代表性的软件有 <a href="http://www.richsomerfield.com/apps/">TextBar</a>、<a href="http://www.shellwrangler.com/?inclick">Shellwrangler</a>，前者在功能、可定制性、美观程度上远优于免费的后者，可参见 <a href="https://github.com/richie5um/TextBar-Recipes">脚本实例</a>。</p>

<p>通知栏的尺寸特点能够让信息完整、紧凑的显示出来，双指滑动调用也比较流畅，不过尚未发现与 Today Scripts 类似的软件。</p>

<p>Dashboard 空间虽大，但估计不太有用户会经常光顾这里。Dashboard 插件少，开发也不活跃，目前仅能找到 <a href="http://www.apple.com/downloads/dashboard/networking_security/shellwatcher.html">Shellwatcher</a> 可以执行脚本并显示结果，效果很土的说，还有一款名为 Quickcommand 的插件已经下架了。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>开源；</li>
  <li>可定制性强，功能实用。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>插件本身的定制成本高，需要学习源代码。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/">http://frank19900731.github.io/blog/2015/05/24/mei-zhou-yi-ruan-zhi-today-scripts/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 HoudahSpot</title>
    <link>http://realjenius.com/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-05-17T20:50:29+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="http://www.houdah.com/houdahSpot/">HoudahSpot</a> 是一款文件搜索工具，典型的功能强大界面糙，见过的没见过的功能都浓缩在四列之中。<strong>HoudahSpot 的搜索基于 Spotlight</strong>，<strong>搜索速度快</strong>，但也<strong>受限于索引更新</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/8.png" class="img-up" title="HoudahSpot 软件界面"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/8.png" width="99%" title="HoudahSpot 软件界面" /></a></p>

<p>HoudahSpot 提供了丰富的查询条件和过滤功能。常见的查询条件有文本内容、文件类型、文件大小、最近打开时间等，还包括<strong>近 300 种与特定文件类型相关的属性</strong>，比如图片尺寸。这些查询条件各自可以做精细定制，也可以<strong>以逻辑与或非的关系进行组合</strong>。选中搜索结果中的一项，最右侧列显示了该文件的详细信息、预览和文本预览。详细信息的各项可以作为过滤条件对搜索结果进行筛选，预览显示该文件在默认打开程序中的效果，文本显示文件的文本信息（如果有）、<strong>高亮搜索关键词</strong>。</p>

<!-- excerpt end -->

<p>HoudahSpot 除可以指定搜索路径，还可以跳过某些路径，与一般搜索软件不同的是<strong>路径可以是多个文件夹的组合</strong>。</p>

<p>HoudahSpot 允许我们将上述<strong>查询条件保存为片段</strong>（Snippet）<strong>或模板</strong>（Template），便于今后重复使用或微调。</p>

<p>HoudahSpot 提供的高级搜索功能和便捷操作还包括：</p>

<ul>
  <li>支持输入如 <code>kind:wordProcessing date:thisYear</code> 的搜索语句，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">Advanced Features</a> 一节；</li>
  <li>一次查询以<strong>标签页</strong>形式展现，可同时展示多个标签页；</li>
  <li>支持拖拽文件到查询条件上以修改查询条件与该文件相符；</li>
  <li>支持<strong>查询结果格式化拷贝</strong>，可直接粘贴到 Excel中；</li>
  <li>支持添加全局热键唤起搜索框，和 Spotlight 类似；</li>
  <li>支持 AppleScript 调用，详见 <a href="http://www.houdah.com/houdahSpot/help/4.0/HoudahSpot%20Help%20EN.pdf">AppleScript</a> 一节；</li>
  <li>支持 Calendar、Reminder 和 Contacts 搜索。</li>
</ul>

<h2 id="section-1">界面设计</h2>

<p>简暴。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好。</p>

<h2 id="section-4">跨平台</h2>

<p>仅 OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>Spotlight、Finder 提供了 OS X 基本的文件搜索功能，只有文件名、标签等有限的搜索条件。</p>

<p><a href="http://www.alfredapp.com/">Alfred</a>、<a href="http://qsapp.com/">QuickSilver</a> 也支持简单的文件搜索，可以设置待索引的文件夹和目录深度，全盘索引压力较大也没有必要。</p>

<p><a href="http://www.devontechnologies.com/products/freeware.html">EasyFind</a> 是一款免费的轻量级搜索工具，在了解 HoudahSpot 以前常用。题外话，写这篇博客的时候才知道它居然和大名鼎鼎的 <a href="http://www.devontechnologies.com/products/devonnote.html">DEVONnote</a> 出自同一家公司。EasyFind 的好处是不只依赖于索引，所以可以<strong>实时查询</strong>。</p>

<p>当然，说到文件搜索，<a href="http://unixhelp.ed.ac.uk/CGI/man-cgi?find">find</a> 命令自然不能不提，用法网上有很多，此处不展开。</p>

<p>如果搜索目标是文本文件的内容，那一些编辑器也是可用的，比如 Sublime 的插件 <a href="https://github.com/titoBouzout/SideBarEnhancements">SideBarEnhancements</a> 提供了 Find Advanced 功能。虽然说到底是封装了命令行，但毕竟也省去了记忆参数的麻烦。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>标签式管理；</li>
  <li>查询条件可以保存为模板；</li>
  <li>搜索可跳过某些路径，路径可指定多个文件夹；</li>
  <li>查询结果可以格式化拷贝。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>功能实在强大，长得丑点也就忍了。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/">http://frank19900731.github.io/blog/2015/05/17/mei-zhou-yi-ruan-zhi-houdahspot/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 Disk Sensei</title>
    <link>http://realjenius.com/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-05-10T20:49:48+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<h2 id="section">功能介绍</h2>

<!-- excerpt start -->

<p><a href="https://www.cindori.org/software/disksensei/">Disk Sensei</a> 是一款磁盘工具软件，与知名软件 <a href="https://www.cindori.org/software/trimenabler/">Trim Enabler</a> 来自同一软件厂商。前者除包含后者功能外，还提供了磁盘信息检测、健康度评估、垃圾清理、优化设置、基准检测、可视化分析和读写监控等功能。这些功能（除优化设置、Trim 设置）普遍存在于其它磁盘管理或系统优化软件中，Disk Sensei 算是功能全面的一个，界面设计也很美观，如下图，显示的是磁盘信息。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/2.png" class="img-up" title="磁盘信息"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/2.png" width="80%" title="磁盘信息" /></a></p>

<p><a href="http://en.wikipedia.org/wiki/Trim_%28computing%29">Trim</a> 指令的主要功能是<strong>标记文件删除并通知固态硬盘相应的磁盘存储空间可回收</strong>，使得固态硬盘可以早做垃圾回收和磁盘优化，从而<strong>提高固态硬盘的读写速度并减少读写请求数</strong>。这一指令在 OS X 中默认关闭，<strong>每次系统更新后也都是关闭</strong>，可以通过 Trim Enabler 等工具激活。</p>

<!-- excerpt end -->

<p>优化设置是我觉得做的比较贴心的一项功能，包括四点：</p>

<ul>
  <li>瞬间移动下的磁盘保护，关闭可以省电；</li>
  <li>本地 Time Machine，关闭可以省空间，减少磁盘读写，延长磁盘使用寿命；</li>
  <li>深度睡眠状态下内存数据会被写入磁盘，关闭可以省空间；</li>
  <li>文件访问记录，关闭可以减少磁盘读写，延长磁盘使用寿命。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-5/4.png" class="img-up" title="优化设置"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/4.png" width="80%" title="优化设置" /></a></p>

<p>我们完全可以通过手工设置（可能是终端中输入命令行）来控制这些功能，只是 Disk Sensei 把它们简化为开关就更方便一些。</p>

<p>磁盘可视化显示是很有用的功能，比如便于在磁盘空间有异常变化时分析原因，<a href="https://www.apple.com/osx/server/features/">OS X Server</a> 的日志就曾吞噬过我几百 G 的空间。可视化不但能帮我们寻找大文件，也能寻找大文件夹。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/5.png" class="img-up" title="磁盘可视化"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/5.png" width="80%" title="磁盘可视化" /></a></p>

<p>最后要说的磁盘读写监控，比 Activity Monitor 更精细一些，可以点击进程查看其详细的读写操作。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/6.png" class="img-up" title="各进程磁盘读写"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/6.png" width="80%" title="各进程磁盘读写" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/7.png" class="img-up" title="磁盘读写实时统计"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/7.png" width="80%" title="磁盘读写实时统计" /></a></p>

<h2 id="section-1">界面设计</h2>

<p>界面设计清新美观。</p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>普通功能稳定，磁盘基准测试和可视化扫描时会占用大量资源，可能崩溃。特别是可视化扫描，多次出现耗尽 16G 系统内存的情况，后来发现在扫描前先选择 clear results 就会好很多。</p>

<h2 id="section-4">跨平台</h2>

<p>仅在 OS X 下。</p>

<h2 id="section-5">类似软件</h2>

<p><a href="http://mainmenuapp.com/">MainMenu</a>、<a href="https://apps.adnx.com/en">xScan</a> 等都是老牌系统维护、监控软件，包含了一定的磁盘监控功能。</p>

<p><a href="http://daisydiskapp.com/">DaisyDisk</a>、<a href="https://nektony.com/disk-inspector">Disk Inspector</a> 均为磁盘可视化工具，功能大同小异，只是前者可以 <strong>Scan as Administrator</strong>，且具有预览功能。</p>

<p>Disk Utility 是系统小工具，可以实现磁盘权限修复、错误修复等功能；Activity Monitor 也是系统小工具，可以简单观察磁盘读写。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>功能全面，且集成四项优化功能；</li>
  <li>界面清新美观。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>可视化扫描时没有进度条，容易崩溃。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/">http://frank19900731.github.io/blog/2015/05/10/mei-zhou-yi-ruan-zhi-disk-sensei/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 Sublime</title>
    <link>http://realjenius.com/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-05-03T11:50:44+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>论文肿算写完鸟，会一点点把落下的每周一软补回来。</p>

<h2 id="section">功能介绍</h2>

<p>每周一软不打算介绍开发工具，只是觉得 Sublime 对普通人的工作学习也有很大帮助，所以将它选入主题。</p>

<p><a href="http://www.sublimetext.com/">Sublime Text</a> 是一款轻量级的编辑器，最初多用于前端开发（现在也是这样吧），堪比瑞士军刀，现在也逐渐受到非前端程序员的喜爱。一些人会拿它与 Emacs、Vim、Eclipse、Jet Brains 系列作比较，我觉得还是看使用目的和个人习惯吧。Sublime 精简美观，上手比 Emacs、Vim 简单，功能上是它们的子集，取而代之也是无稽之谈；相比 IntelliJ IDEA、RubyMine 等 IDE，Sublime 在项目的支持上更弱，但做小规模开发还是绰绰有余的。</p>

<p>对有情怀的程序员来说，Emacs 或 Vim 是世界上雷打不动的最佳编辑器，这是无法撼动的<strong>人生哲学</strong>，但对于俺这种功利主义普通程序员来说，还是啥得劲儿用啥，Vim 还在慢慢学（对使用 Vim 如飞的人只能羡慕嫉妒恨），远程开发优先版本控制和目录挂载。</p>

<p>事先声明，以下介绍的<strong>大部分功能在别的软件中也有</strong>……</p>

<!-- excerpt end -->

<p>Sublime 上手简单、易用性强主要体现在：</p>

<ul>
  <li><strong>功能查找方便</strong>
    <ul>
      <li>快捷键要常用才记得牢，所以 Vim 中我只能记住一小部分。Sublime 的菜单栏提供了较丰富的编辑功能，比如行排序、随机打乱行、分屏等，方便调用。</li>
      <li>Sublime 提供了 Command Palette （Mac 下快捷键为 Shift + Command + P）进行命令搜索，支持模糊匹配，方便查询、调用自带功能和插件功能。</li>
    </ul>
  </li>
  <li><strong>插件系统强大</strong>
    <ul>
      <li>插件是软件功能的扩展，能在满足用户需求的同时减少软件本身的系统占用，之后我们会介绍一些普通用户也能用得到的插件。</li>
      <li>主题也是一种插件，一个赏心悦目的编辑界面无疑能够提高用户的写作效率。</li>
    </ul>
  </li>
  <li><strong>可定制性强</strong>
    <ul>
      <li>Sublime 的插件功能使用 Python 实现，辅之以 json 文件作配置，编写者有基本的 Python 开发知识就足够。</li>
      <li>Sublime 的配置都是 json 文件，区分用户配置和系统配置，前者覆盖后者。这样做能够防止用户定义设置被软件或插件更新覆盖，也方便配置的移植。</li>
    </ul>
  </li>
</ul>

<p>系统自带功能中，个人脚着最实用的是 Goto Anything。一个常见场景是，打开某个目录，需要不断点击子文件夹找到某个文件进行编辑，之后又要到另外一个子文件夹打开别的文件，这时有一个<strong>支持路径模糊匹配的文件搜索</strong>就会方便很多。Mac 下 Command + P 调用 Goto Anything，可以跳转到文件、跳转到行或跳转到符号。再者就是<strong>多点编辑</strong>功能，可自行查询学习。</p>

<p>随便搜一下“Sublime 插件推荐”就有很多结果，这里只介绍一些<strong>普通用户适用的插件</strong>。</p>

<ul>
  <li>Markdown 系列，详见<a href="http://frank19900731.github.io/blog/2015/04/13/zai-sublime-zhong-pei-zhi-markdown-huan-jing/">《在 Sublime 中配置 Markdown 环境》</a>，插件安装方式也见该文；</li>
  <li><strong>ConvertToUTF8</strong>，对 Sublime 现有文件编码支持的扩展，如支持 GBK；</li>
  <li><strong>Advanced New File</strong>，新建文件时指定路径，而不必先找到文件夹再右键 New File；</li>
  <li><strong>SideBarEnhancements</strong>，必装插件，扩展侧边栏功能，如 Open With、Find Advanced 等，其中 Find in Folder 功能用起来很带劲；</li>
  <li><strong>SyncdSideBar</strong>，在侧边栏目录结构中同步定位到当前打开的文件，配合 Goto Anything 使用；</li>
  <li><strong>FileHistory/LocalHistory</strong>，文件备份；</li>
  <li><strong>Trimmer</strong>，删除行末空白字符，无论是编程还是撰写文档都会用到；</li>
  <li><strong>SFTP</strong>，通过 FTP 映射本地目录和远程目录，使得编辑同步，但实际用起来并不方便，不如使用 <a href="http://fuse.sourceforge.net/sshfs.html">SSHFS</a> 进行目录挂载来得方便，前提是网速够快；</li>
  <li><strong>Sublimall</strong>，在不同的 Sublime 安装间同步配置；</li>
  <li><strong>Evernote</strong>，操作 Evernote 文档； </li>
  <li><strong>DictionaryAutoComplete</strong>，英文单词自动补全；</li>
  <li><strong>PlainTasks</strong>，一个 todo list 工具，待办事项记录在后缀名为 todo 的文档中，提供了一个简单效率软件所应具有的全部功能，包括新建条目、完成、取消、截止日期、开始时间、暂停时间、结束时间、归档等，还可以链接文件与网址。</li>
</ul>

<p>对最后一个插件 PlainTasks 要多说两句，现在我习惯于在写作或代码项目下建立一个 todo 文件，把以前写在 Readme 文件里的进度和待添加特性挪到这里。todo 文件其实就是文本文件，在没有 Sublime 的情况下也是可以查看、编辑的。当然，这只是一个简便的选择，没法跟 Emacs 下的 orgmode 比啦。</p>

<h2 id="section-1">界面设计</h2>

<p>简洁美观，会让一些人觉得是<strong>编辑器中的花瓶</strong>，其实是有货滴。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-5/1.png" class="img-up" title="Sublime 界面展示"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-5/1.png" width="100%" title="Sublime 界面展示" /></a></p>

<h2 id="section-2">易用性</h2>

<p>对普通用户有一定上手难度，但带来的效率提升远大于付出的努力，学习性价比高。</p>

<h2 id="section-3">稳定性</h2>

<p>总的来说是稳定的，但有过几次需要重启电脑才能正常工作的情况，原因未知。</p>

<h2 id="section-4">跨平台</h2>

<p>Windows、Linux、OS X 均可，只有图形界面。</p>

<h2 id="section-5">类似软件</h2>

<p>CodeRunner，Foobar，CodePad，TextMate 等都是代码编辑器，总体以 TextMate 名气大、功能全面，但它<strong>绚烂绽放的菊花图标</strong>让我颇为羞涩，Mac 下 CodeRunner 也很知名。Visual Studio Code 也是近期不能不提的代码编辑器，微软粉的最爱吧。</p>

<p>文本编辑器推荐可见<a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">《每周一软之 Markdown 笔记软件 Ulysses III》</a>，Ulysses III 最近更名为 Ulysses，改版之后运行效率优化不少，但界面美观性大不如前，特别是蝴蝶图标吓到不少对虫子有阴影的用户。还发现一款名为 Storyist 的软件，本来是用于小说、剧本写作的，但用来成体系地写一份学习笔记也是很不错的，类似 Gitbook。</p>

<h2 id="section-6">闪光点</h2>

<p>学习性价比高。</p>

<h2 id="section-7">缺点</h2>

<p>可以提很多，但想了想这不就是个编辑器嘛。如果觉得不适用，说明应该找找插件或换用更强大的工具了，比如 Vim、Emacs，排名不分先后……</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/">http://frank19900731.github.io/blog/2015/05/03/mei-zhou-yi-ruan-zhi-sublime/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 Napkin</title>
    <link>http://realjenius.com/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-04-25T17:24:57+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/">http://frank19900731.github.io/blog/2015/04/25/mei-zhou-yi-ruan-zhi-napkin/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>Yosemite 加速安装</title>
    <link>http://realjenius.com/blog/2015/04/25/yosemite-jia-su-an-zhuang/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-04-25T16:06:29+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/04/25/yosemite-jia-su-an-zhuang/</guid>
    <description><![CDATA[
     <!-- excerpt start -->

<p>有些人或物是不禁夸的，稍不留神就整一出幺蛾子，OS X 就是如此。昨日重启电脑后只显示禁止图标，无法进入系统。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/6.png" class="img-up" title="禁止图标"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/6.png" width="30%" title="禁止图标" /></a></p>

<p>Shift + Command + V 尝试进入恢复模式，日志输出倒数第二行显示 <code>pci pause: SDXC </code>，之后仍会跳出禁止图标，且与日志交叠，导致最后一行日志看不清……按照官方给出的 <a href="https://support.apple.com/en-us/HT204325">解决方案</a> 修复磁盘（权限）、重建 NVRAM 等无效。</p>

<p>重启之前，我大概做了如下几项操作：</p>

<ul>
  <li>CleanMyMac 清理系统垃圾；</li>
  <li>AppStore 安装系统更新，主要是更新 iMovie 和一个名为 Pro Video Formats 的更新，让我纳闷的是后者已经在我的系统更新中出现了三次，每次的更新版本号、更新说明、更新文件大小都是一模一样的；</li>
  <li>Time Machine 备份。</li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2015-4/7.png" class="img-up" title="一模一样的更新"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/7.png" width="90%" title="一模一样的更新" /></a></p>

<p>清理完垃圾，在没有完成 AppStore 更新和 Time Machine 备份的情况下，我通过正常途径关闭了电脑，就再没起来。</p>

<p>苹果客服（我又无耻的打了客服，虽然帮助还是有限）向我表示曾遇到过<strong>用户使用类似 CleanMyMac 的第三方工具清理后重启无法进入系统</strong>的案例。也是，谁让 AppStore、Time Machine 都是苹果亲儿子。之前使用 CleanMyMac 清理系统都是直接输入密码、给予权限，确实没关心具体删除了哪些内容，以后不用就是了。</p>

<!-- excerpt end -->

<p><strong>对于目前系统和恢复模式都无法进入的情况，客服又祭出重装系统的方法，我可耻地从了</strong>。大概有三种解决方案： </p>

<ol>
  <li>开机 Command + R，选择 Reinstall 系统，<strong>用户文件、系统设置等都不会丢失</strong>，但也存在无法修复当前错误的可能（我很纳闷既然是 CleanMyMac 误删，那重装系统后为何仍旧可能无法进入系统，客服没有给出解答，只是说遇到过此类情况）；</li>
  <li>使用 Time Machine 还原，问题在于<strong>最近一次备份的系统可能就是错的</strong>，可能需要还原更早的时间节点，而该时间节点后的新文件难于找回，未备份的则更找不回了；</li>
  <li>使用另外一块硬盘安装系统，类似于 WinPE，读取原系统盘中的文件进行备份，或者干脆把原系统盘拆出来用硬盘读取器备份，然后使用第二种方法。</li>
</ol>

<p>显然第一种方法最简便。虽然当初安装 OS X 的时候没有分区操作，但重装系统还是可以做到不影响用户文件的。跟 AppStore 进行系统版本升级一样，都是先从苹果的服务器下载系统安装文件，安装末尾遇到了与之前博文 <a href="http://frank19900731.github.io/blog/2014/10/18/yosemite-sheng-ji-ji-hou-xu/">《Yosemite 升级及后续 》</a> 里提到的相同的问题：最后一分钟无比漫长。</p>

<p>这次深入查询的结果是：<strong>系统更新过程中会将 /user/local 文件夹移出，然后在系统安装末尾再一点点拷贝回来</strong>。<strong>当时我就蒙逼了</strong>，Homebrew、TexLive 都在里面，而且 TexLive 还是 2011、2014 两个版本，这不闹呢么。打开日志（Comand  + L），发现确实在进行拷贝，1s 大概输出 10个文件名吧。虽说找到了 <a href="https://jimlindley.com/blog/yosemite-upgrade-homebrew-tips/">加速建议</a>，但安装过程中是妥妥儿用不了了。我的 /usr/local 文件夹大小 20 G（很多是历史遗留物），20G 的零七八碎的文件拷贝也就花了六七个小时吧 ==</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/9.png" class="img-up" title="local 文件夹大小"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2015-4/9.png" width="100%" title="local 文件夹大小" /></a></p>

<p>加速的方法很简单，就是把 /usr/local 文件夹在更新前移出 /usr 文件夹，在更新后再移动回来，但此时系统会有一个新的 /usr/local 文件夹，所以不是简单地移动，而是 merge。按 <a href="https://jimlindley.com/blog/yosemite-upgrade-homebrew-tips/">加速建议</a> 的做法，merge 也很耗时，我不清楚是否可以将新的 /usr/local merge 到老的上然后直接做替换，这种快速做法如果只是造成某些日志的断档，似乎就是可行的，以后再重装的话可以试下。</p>

<p>一觉醒来，系统可以进入，用户文件没有变化，Tex、Homebrew 运行正常，截至目前只发现三处有改动：</p>

<ol>
  <li>系统设置中隐私设置的软件来源变成默认设置，即来自 AppStore 和通过验证的开发者；</li>
  <li>Server 中 Apache 的设置被重置，幸好有备份；</li>
  <li>JDK 1.6 被清除（因为默认装在 /System/Library 下，其它版本都无影响），<a href="https://support.apple.com/kb/DL1572?viewlocale=en_US&amp;locale=en_US">下载</a> 重装即可。</li>
</ol>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang/">http://frank19900731.github.io/blog/2015/04/25/yosemite-jia-su-an-zhuang/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 1Password</title>
    <link>http://realjenius.com/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-04-20T21:00:45+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/">http://frank19900731.github.io/blog/2015/04/20/mei-zhou-yi-ruan-zhi-1password/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>Yosemite 10.10.3 更新后 Finder 剩余容量显示错误问题的解决</title>
    <link>http://realjenius.com/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-04-20T19:38:24+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/</guid>
    <description><![CDATA[
     <!-- excerpt start -->

<p>最近刚升级过 Yosemite 10.10.3，使用中发现 Finder 状态栏的剩余容量信息信息显示错误：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/4.png" class="img-up" title="剩余容量错误"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/4.png" width="90%" title="剩余容量错误" /></a></p>

<p>查看关于本机、Disk Utility 以及 <code>df -h</code> 命令输出的剩余容量是正常的，重启电脑、关闭 TotalFinder 插件、使用 Disk Utility 修复磁盘（权限）都无法修正错误。求助苹果热线，<strong>一如既往的毫无帮助</strong>。</p>

<p>后来在苹果的技术支持社区发现了相关帖子 <a href="https://discussions.apple.com/thread/6983320?start=0&amp;tstart=0">10.10.3 Finder Status Bar information is wrong, TB not GB</a>，给出的建议是重新设置 NVRAM 和 SMC。</p>

<!-- excerpt end -->

<p>按照技术支持里的说法，NVRAM（非易失随机访问内存）存储了一些系统经常访问的数据与设置，比如屏幕分辨率、启动盘等。既然重设 NVRAM 可以修正状态栏的信息错误，那可以推测，剩余空间信息可能被写在其中（？）。NVRAM 的重新设置方法如下，一两秒的时间就可以完成重置。</p>

<blockquote>
  <p>Resetting NVRAM</p>

  <ul>
    <li>Shut down your Mac.</li>
    <li>Locate the following keys on the keyboard: Command (⌘), Option, P, and R. </li>
    <li>Turn on your Mac.</li>
    <li>Press and hold the Command-Option-P-R keys immediately after you hear the startup sound.</li>
    <li>Hold these keys until the computer restarts and you hear the startup sound for a second time.</li>
    <li>Release the keys.</li>
  </ul>
</blockquote>

<p>再来看 <a href="https://support.apple.com/en-us/HT201295">SMC 的功能</a>，我并不很理解这与 Finder 状态栏信息有什么关系，不过读了重设 SMC 的步骤后也就照做了，因为我们平时无意中会经常重新设置它，就是插拔电源这么简单。</p>

<blockquote>
  <p>On Mac Pro, iMac, Mac mini, and Xserve</p>

  <p>To reset the SMC on Intel-based Mac Pro, iMac, and Mac mini computers, as well as Xserve:</p>

  <ul>
    <li>Shut down the computer.</li>
    <li>Unplug the power cord.</li>
    <li>Wait fifteen seconds.</li>
    <li>Attach the power cord.</li>
    <li>Wait five seconds, then press the power button to turn on the computer.</li>
  </ul>
</blockquote>

<p>备份系统，第一次修复尝试失败。考虑到 <a href="https://discussions.apple.com/thread/6983320?start=0&amp;tstart=0">帖子</a> 里提到可能是 Time Machine 带来的影响，所以<strong>禁用了 Time Machine 后进行第二次尝试</strong>，状态栏恢复正确显示。此后开启 Time Machine、重启机器等操作后，错误未复现。</p>

<p>最后想说的是，通过若干次笔记本相关的技术咨询，对苹果公司客服团队中<strong>基础客服的专业性</strong>实在不敢恭维（高级客服接触不多，不敢妄下结论）。他们解决问题的思路是用解决方案套问题，而不是根据问题表现分析原因进而解决，实在不行就建议<strong>重装系统</strong>。撇开解决方案不提，对于每打一次咨询热线都要报一次产品序列号、姓名和手机的做法我也是很不理解，想来对于顺丰客服能够快速调取我历史下单记录询问我是否和之前下单地点相同的做法，我真应该点 32 个赞了。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-4/1.jpg" class="img-up" title="点32个赞"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-4/1.jpg" width="70%" title="点32个赞" /></a></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/">http://frank19900731.github.io/blog/2015/04/20/yosemite-10-dot-10-dot-3-geng-xin-hou-finder-sheng-yu-rong-liang-xian-shi-cuo-wu-wen-ti-de-jie-jue/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>每周一软之 Paste</title>
    <link>http://realjenius.com/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2015-04-11T14:07:26+08:00</pubDate>
    <guid>http://realjenius.com/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>毕业季，论文施工中，有空再补。。。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-3/1.gif" class="img-up" title="论文施工中"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-3/1.gif" width="40%" title="论文施工中" /></a></p>

<!-- excerpt end -->

<h2 id="section">功能介绍</h2>

<h2 id="section-1">界面设计</h2>

<h2 id="section-2">易用性</h2>

<h2 id="section-3">稳定性</h2>

<h2 id="section-4">跨平台</h2>

<h2 id="section-5">类似软件</h2>

<h2 id="section-6">闪光点</h2>

<h2 id="section-7">缺点</h2>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/">http://frank19900731.github.io/blog/2015/04/11/mei-zhou-yi-ruan-zhi-paste/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>
