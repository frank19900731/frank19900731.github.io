<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Blog of 太极儒]]></title>
  <link href="http://frank19900731.github.io/feed" rel="self"/>
  <link href="http://frank19900731.github.io/"/>
  <updated>2015-01-28T11:11:16+08:00</updated>
  <id>http://frank19900731.github.io/</id>
  <author>
    <name><![CDATA[Frank Song]]></name>
    <email><![CDATA[scr_0731@126.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mac 下安装 WeCenter 并添加代码高亮功能]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/26/mac-xia-an-zhuang-wecenter-bing-tian-jia-dai-ma-gao-liang-gong-neng/"/>
    <updated>2015-01-26T02:02:10+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/26/mac-xia-an-zhuang-wecenter-bing-tian-jia-dai-ma-gao-liang-gong-neng</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#wecenter">为什么选择 WeCenter</a></li>
  <li><a href="#wecenter-">WeCenter 安装</a></li>
  <li><a href="#section">代码高亮定制</a></li>
  <li><a href="#section-1">参考代码</a></li>
</ul>

<!-- excerpt start -->

<h2 id="wecenter">为什么选择 WeCenter</h2>

<p>最近考虑将部分笔记任务从 Ulysses 中分离出来，于是想到给自己建一个类似知乎的问答系统。我会将对一些<strong>技术问题的解决和概念理解</strong>录入问答系统，可视化界面和搜索功能方便自己日后查看、查询。</p>

<p>一圈 <a href="http://www.oschina.net/project/tag/299/qa">选下来</a>，觉得 WeCenter 不错，主要考虑到</p>

<ul>
  <li>界面更美观，也有 <a href="http://www.wecenter.com/category/templates/">模板</a>，无须太多定制；</li>
  <li>PHP + mysql + Bootstrap，对我而言二次开发上手容易些；</li>
  <li>功能、界面与知乎类似，满足我的全部需求。</li>
</ul>

<h2 id="wecenter-">WeCenter 安装</h2>

<p>接下来就是 <a href="http://www.wecenter.com/downloads/">下载</a> 安装。WeCenter 要求 PHP 支持 FreeType 以显示验证码，而 Mac 自带的 PHP 无此支持，所以需要重新编译 PHP。</p>

<p>采用 homebrew 安装方式，方便今后管理 PHP 的其它扩展支持，具体安装方式如下。</p>

<!-- excerpt end -->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>使用 brew 编译安装 PHP</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">brew update
</span><span class="line">brew tap homebrew/dupes
</span><span class="line">brew tap josegonzalez/homebrew-php
</span><span class="line">brew install php55 --with-gmp --with-imap --with-tidy --with-debug --with-mysql<span class="o">=</span>/usr/local/mysql --without-snmp
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>mysql 是我从 <a href="http://dev.mysql.com/downloads/mysql/">官网</a> 下载安装包安装的，默认路径是 <code>/usr/local/mysql</code>；<code>--without-snmp</code> 选项的加入可以消除 <strong>Error 139 - make: *** [ext/phar/phar.php]</strong> 的编译问题，不影响后续使用。关于这个编译问题，网上有说可以通过 <code>brew uninstall openssl</code> 解决，不过尝试无效，还有说清空 brew 所有安装，感觉代价太大了……</p>

<p><code>brew options php55</code> 查看其它编译选项。brew 会自动下载安装 FreeType、jpeg 等模块，然后编译 PHP 5.5。 </p>

<p>编译成功后，在 <code>/usr/local/Cellar/php55/5.5.20/libexec/apache2</code> 目录下会存在一个名为 <code>libphp5.so</code> 的模块，可用于在 apache 的配置文件中替换系统 PHP。</p>

<p>我所使用的 apache 是 <a href="http://www.apple.com/osx/server/">Server</a>  自带的，考虑到它提供很多应用支持，比如 VPN、Wiki 等。配置文件不是通常的 httpd.conf，而是 <code>/Library/Server/Web/Config/apache2/httpd_server_app.conf</code>，修改如下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>修改 apache 配置文件</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># LoadModule php5_module libexec/apache2/libphp5.so</span>
</span><span class="line">LoadModule php5_module /usr/local/Cellar/php55/5.5.20/libexec/apache2/libphp5.so
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>当然，要注意配置文件修改前后 apache 的关闭与重启。</p>

<h2 id="section">代码高亮定制</h2>

<p>WeCenter 基本设置容易上手，<a href="http://wenda.wecenter.com/">社区</a> 里有不少介绍，只是在代码高亮定制方面，官方未提供，社区讨论也少，缺乏适用于新版本 WeCenter 的方法。在这个 <a href="http://wenda.wecenter.com/question/22147">问题</a> 的启发下，自己初步实现了<strong>对 WeCenter 3.0.2 的代码高亮支持</strong>。</p>

<p><a href="http://wenda.wecenter.com/question/22147">问题</a> 中的做法是使用 <a href="http://qbnz.com/highlighter/">GeSHi</a> 进行代码渲染，MediaWiki 选用的也是这个。将 <a href="http://wenda.wecenter.com/question/22147">问题</a> 提供的 <a href="http://wenda.wecenter.com/file/download/file_name-U2VydmljZXMuemlw__url-aHR0cDovL3dlbmRhLndlY2VudGVyLmNvbS91cGxvYWRzL3F1ZXN0aW9ucy8yMDE1MDEyNC9jMzIxNzNkZWY5MzA2N2IwMjFhYjIzMDUyYmNiYTZmYQ==">代码</a> 解压缩到 <code>wecenter-root/system/Services</code> 中，<strong>注意不要覆盖 Markdown.php</strong>，我们要自己修改，操作步骤如下，文末附有参考代码压缩包。</p>

<ul>
  <li>在 Markdown.php 头部引入 GeSHi Parser。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>引入GeSHi Parser</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">include</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">))</span> <span class="o">.</span> <span class="s1">&#39;/Services/geshi/geshi.php&#39;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// Load umodified Michel Fortin&#39;s PHP Markdown Extra: http://michelf.com/projects/php-markdown/</span>
</span><span class="line"><span class="nb">define</span><span class="p">(</span><span class="s1">&#39;MARKDOWN_PARSER_CLASS&#39;</span><span class="p">,</span>  <span class="s1">&#39;MarkdownExtraGeshi_Parser&#39;</span><span class="p">);</span>
</span><span class="line"><span class="k">include</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="nb">dirname</span><span class="p">(</span><span class="k">__FILE__</span><span class="p">))</span> <span class="o">.</span> <span class="s1">&#39;/Services/markdown_extra/markdown.php&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>原样添加 <a href="http://wenda.wecenter.com/question/22147">问题</a> 代码中调用 GeSHi Parser 进行代码解析的函数 syntaxHighlight 。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>调用 GeSHi Parser 进行代码解析</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">protected</span> <span class="k">function</span> <span class="nf">syntaxHighlight</span><span class="p">(</span><span class="nv">$matches</span><span class="p">)</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">	<span class="nv">$geshi</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GeSHi</span><span class="p">(</span><span class="nv">$matches</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="k">empty</span><span class="p">(</span><span class="nv">$matches</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="o">?</span> <span class="s2">&quot;txt&quot;</span> <span class="o">:</span> <span class="nv">$matches</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span>
</span><span class="line">	<span class="k">return</span> <span class="nv">$geshi</span><span class="o">-&gt;</span><span class="na">parse_code</span><span class="p">();</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>修改 _doCodeBlocks_callback 函数。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>_doCodeBlocks_callback</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">protected</span> <span class="k">function</span> <span class="nf">_doCodeBlocks_callback</span><span class="p">(</span><span class="nv">$matches</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nv">$matches</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">	<span class="c1"># outdent 会去掉行首tab/多空格，不采用，直接按照输入代码样式来，建议代码缩进为2空格</span>
</span><span class="line">	<span class="c1">// $codeblock = $this-&gt;outdent($codeblock);</span>
</span><span class="line">	<span class="c1">// $codeblock = htmlspecialchars($codeblock, ENT_NOQUOTES);</span>
</span><span class="line">
</span><span class="line">	<span class="c1"># trim leading newlines and trailing newlines</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s1">&#39;/\A\n+|\n+\z/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nv">$codeblock</span><span class="p">);</span>
</span><span class="line">	
</span><span class="line">	<span class="c1"># 替换特殊字符，可能不完善</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class="line">		<span class="s1">&#39;&amp;lt;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&amp;quot;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&amp;amp;&#39;</span>
</span><span class="line">	<span class="p">),</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">		<span class="s1">&#39;&lt;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&quot;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&amp;&#39;</span>
</span><span class="line">	<span class="p">),</span> <span class="nv">$codeblock</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">	<span class="c1">## call geshi to render the code</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nb">preg_replace_callback</span><span class="p">(</span>
</span><span class="line">		<span class="s1">&#39;/^(\{\{lang:([\w]+)\}\}\n|)(.*?)$/s&#39;</span><span class="p">,</span> <span class="c1">// greedy_code</span>
</span><span class="line">		<span class="k">array</span><span class="p">(</span><span class="nv">$this</span><span class="p">,</span> <span class="s1">&#39;syntaxHighlight&#39;</span><span class="p">),</span>
</span><span class="line">		<span class="nv">$codeblock</span>
</span><span class="line">	<span class="p">);</span>
</span><span class="line">
</span><span class="line">	<span class="c1">// 将代码每一行包裹入 &lt;p&gt;</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nb">preg_replace</span><span class="p">(</span><span class="s1">&#39;/^(.+?)$/m&#39;</span><span class="p">,</span> <span class="s1">&#39;&lt;p&gt;${1}&lt;/p&gt;&#39;</span><span class="p">,</span> <span class="nv">$codeblock</span><span class="p">);</span>
</span><span class="line">	<span class="nv">$codeblock</span> <span class="o">=</span> <span class="nb">str_replace</span><span class="p">(</span><span class="k">array</span><span class="p">(</span> <span class="c1"># 特殊处理第一行和最后一行</span>
</span><span class="line">		<span class="s1">&#39;style=&quot;font-family:monospace;&quot;&gt;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&lt;/pre&gt;&#39;</span>
</span><span class="line">	<span class="p">),</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">		<span class="s1">&#39;style=&quot;font-family:monospace;&quot;&gt;&lt;p&gt;&#39;</span><span class="p">,</span>
</span><span class="line">		<span class="s1">&#39;&lt;/p&gt;&lt;/pre&gt;&#39;</span>
</span><span class="line">	<span class="p">),</span> <span class="nx">substr</span><span class="p">(</span><span class="nv">$codeblock</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="nb">strlen</span><span class="p">(</span><span class="nv">$codeblock</span><span class="p">)</span> <span class="o">-</span> <span class="mi">7</span><span class="p">));</span>
</span><span class="line">
</span><span class="line">	<span class="c1"># GeSHi 已添加 &lt;pre&gt; 标签</span>
</span><span class="line">	<span class="c1">// $codeblock = &quot;&lt;pre class=\&quot;prettyprint\&quot;&gt;$codeblock\n&lt;/pre&gt;&quot;;</span>
</span><span class="line">
</span><span class="line">	<span class="c1"># 输出测试</span>
</span><span class="line">	<span class="c1">// $fp = fopen(&quot;/Library/Server/Web/Data/Sites/Default/qa/test.txt&quot;, &#39;w&#39;);</span>
</span><span class="line">	<span class="c1">// fwrite($fp, $codeblock);</span>
</span><span class="line">	<span class="c1">// fclose($fp);</span>
</span><span class="line">
</span><span class="line">	<span class="k">return</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">hashBlock</span><span class="p">(</span><span class="nv">$codeblock</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>修改样式代码 <code>wecenter-root/static/css/default/common.css</code>，使超过显示区域长度的代码可横向滚动查看。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>修改 common.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="c">/* 注释掉下面这一行，两个选择器分开写，.wmd-preview pre 不变，.markitup-box pre 的 overflow 属性为 scroll */</span>
</span><span class="line"><span class="c">/*.wmd-preview pre, .markitup-box pre {padding: 16px;line-height: 20px;overflow: hidden; border: none; border-radius: 3px; background-color: #f7f7f7;font-size: 14px;}*/</span>
</span><span class="line"><span class="nc">.wmd-preview</span> <span class="nt">pre</span> <span class="p">{</span><span class="k">padding</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span><span class="k">line-height</span><span class="o">:</span> <span class="m">20px</span><span class="p">;</span><span class="k">overflow</span><span class="o">:</span> <span class="k">hidden</span><span class="p">;</span> <span class="k">border</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span> <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#f7f7f7</span><span class="p">;</span><span class="k">font-size</span><span class="o">:</span> <span class="m">14px</span><span class="p">;}</span>
</span><span class="line"><span class="nc">.markitup-box</span> <span class="nt">pre</span> <span class="p">{</span><span class="k">padding</span><span class="o">:</span> <span class="m">16px</span><span class="p">;</span><span class="k">line-height</span><span class="o">:</span> <span class="m">20px</span><span class="p">;</span><span class="k">overflow</span><span class="o">:</span> <span class="k">scroll</span><span class="p">;</span> <span class="k">border</span><span class="o">:</span> <span class="k">none</span><span class="p">;</span> <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span> <span class="k">background-color</span><span class="o">:</span> <span class="m">#f7f7f7</span><span class="p">;</span><span class="k">font-size</span><span class="o">:</span> <span class="m">14px</span><span class="p">;}</span>
</span><span class="line">
</span><span class="line"><span class="o">...</span>
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="c">/* 末尾添加自定义属性  */</span>
</span><span class="line"><span class="nc">.markitup-box</span> <span class="nt">pre</span> <span class="o">&gt;</span> <span class="nt">p</span> <span class="p">{</span>
</span><span class="line">	<span class="k">display</span><span class="o">:</span> <span class="k">inline</span><span class="o">-</span><span class="k">block</span><span class="p">;</span>
</span><span class="line">	<span class="k">padding</span><span class="o">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>在 {{{ 与 }}} 间先输入 {{lang:php}}，表示以下为 PHP 代码（其它格式可参见 <a href="http://qbnz.com/highlighter/">GeSHi 官网</a> 左边栏），然后正常输入代码并显示。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>输入代码评论</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="robotframework"><span class="line"><span class="c">protected function _doImages_inline_callback($matches) {</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$whole_match = $matches[1];</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$alt_text = $matches[2];</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$url = $matches[3] == &#39;&#39; ? $matches[4] : $matches[3];</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$title = &amp;$matches[7];</span><span class="p"></span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">  </span><span class="c">$alt_text = $this-&gt;encodeAttribute($alt_text);</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$url = $this-&gt;encodeAttribute($url);</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$result = &quot;&lt;img src=\&quot;$url\&quot; alt=\&quot;$alt_text\&quot;&quot;;</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">if (isset($title)) {</span><span class="p"></span>
</span><span class="line"><span class="p">    </span><span class="c">$title = $this-&gt;encodeAttribute($title);</span><span class="p"></span>
</span><span class="line"><span class="p">    </span><span class="c">$result .= &quot; title=\&quot;$title\&quot;&quot;; # $title already quoted</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">}</span><span class="p"></span>
</span><span class="line"><span class="p">  </span><span class="c">$result .= $this-&gt;empty_element_suffix;</span><span class="p"></span>
</span><span class="line">
</span><span class="line">
</span><span class="line">
</span><span class="line"><span class="p">  </span><span class="c">return $this-&gt;hashPart($result);</span><span class="p"></span>
</span><span class="line"><span class="c">}</span><span class="p"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>显示效果如下。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/15.png" class="img-up" title="代码显示效果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/15.png" width="90%" title="代码显示效果" /></a></p>

<p>注意到我们的代码输入采用两空格缩进，显示起来较美观；想设置 n 空行，在代码输入中应有 n+2 空行。</p>

<p>至此，初步实现了 WeCenter 3.0.2 中的代码高亮功能，剩余工作就是在实践中微调，比如 <strong>Shell 脚本行注释的 # 可能会被 Markdown 解析成标题</strong>，可以自定义转义进行处理，诸如此类。</p>

<h2 id="section-1">参考代码</h2>

<p>附 <a href="http://frank19900731.github.io/downloads/file/Services.rar">参考代码</a>。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/26/mac-xia-an-zhuang-wecenter-bing-tian-jia-dai-ma-gao-liang-gong-neng/">http://frank19900731.github.io/blog/2015/01/26/mac-xia-an-zhuang-wecenter-bing-tian-jia-dai-ma-gao-liang-gong-neng/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Bartender]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/25/mei-zhou-yi-ruan-zhi-bartender/"/>
    <updated>2015-01-25T23:46:08+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/25/mei-zhou-yi-ruan-zhi-bartender</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.macbartender.com/">Bartender</a> 是一款菜单栏图标隐藏工具，对于小屏幕 Mac 或菜单栏长期驻留大量图标的俺有很大帮助。</p>

<p>Bartender 运行时也显示在菜单栏中，可设置菜单栏其他图标（既包括系统图标也包括用户软件图标）显示于 Bartender 的子菜单中。</p>

<p>设置界面：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/16.png" class="img-up" title="设置界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/16.png" width="80%" title="设置界面" /></a></p>

<p>运行界面：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/17.png" class="img-up" title="运行界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/17.png" width="80%" title="运行界面" /></a></p>

<p>对于可能显示通知信息的应用，比如 WeChat，可以设置应用图标在<strong>收到通知时跳出 Bartender 到系统菜单栏中显示一定时间</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">界面设计</h2>

<p>界面美观。</p>

<p>Bartender 显示在菜单栏中的图标既可以从应用给定的样式中选取，也可以是自定义图片。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/18.png" class="img-up" title="菜单栏图标设置"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/18.png" width="80%" title="菜单栏图标设置" /></a></p>

<h2 id="section-2">易用性</h2>

<p>简单易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性好，未发现过崩溃。</p>

<h2 id="section-4">跨平台</h2>

<p>无。</p>

<h2 id="section-5">类似软件</h2>

<p>类似软件很少，Bartender 本身就很强大了。一款名为 Broomstick 的软件可以指定菜单栏图标隐藏，跟 Bartender 相比逊色多了。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>菜单项隐藏，节省空间。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>无。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/25/mei-zhou-yi-ruan-zhi-bartender/">http://frank19900731.github.io/blog/2015/01/25/mei-zhou-yi-ruan-zhi-bartender/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Wordify]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/18/mei-zhou-yi-ruan-zhi-wordify/"/>
    <updated>2015-01-18T15:43:55+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/18/mei-zhou-yi-ruan-zhi-wordify</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a>    <ul>
      <li><a href="#section-6">标签云</a></li>
      <li><a href="#section-7">艺术字</a></li>
      <li><a href="#ascii-">ASCII 码字符画</a></li>
    </ul>
  </li>
  <li><a href="#section-8">闪光点</a></li>
  <li><a href="#section-9">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.wordifyapp.com/">Wordify</a> 是一款字符画生成软件。用户选择图片，并可指定或调整</p>

<ul>
  <li>关键词</li>
  <li>单词数目</li>
  <li>单词排布方向（水平、垂直、随机）</li>
  <li>字体、颜色</li>
  <li>输出文件格式</li>
  <li><strong>图像二值化结果</strong></li>
</ul>

<p>最终得到一幅略显酷炫的字符画。</p>

<p><strong>原图</strong>：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/1.JPG" class="img-up" title="原图"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/1.JPG" width="60%" title="原图" /></a></p>

<!-- excerpt end -->

<p><strong>二值化调整</strong>：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/8.png" class="img-up" title="二值化调整"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/8.png" width="80%" title="二值化调整" /></a></p>

<p><strong>字符画结果</strong>：</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/9.png" class="img-up" title="字符画生成结果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/9.png" width="90%" title="字符画生成结果" /></a></p>

<p>生成效果是随机的，可多次调整取最佳；单词重复设置相当于提高相应单词的权重。</p>

<h2 id="section-1">界面设计</h2>

<p>美观清爽。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/10.png" class="img-up" title="Wordify 界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/10.png" width="80%" title="Wordify 界面" /></a></p>

<h2 id="section-2">易用性</h2>

<p>简洁易用。</p>

<h2 id="section-3">稳定性</h2>

<p>运行稳定。</p>

<h2 id="section-4">跨平台</h2>

<p>支持 iOS。</p>

<h2 id="section-5">类似软件</h2>

<p>字符画并不止 Wordify 生成的这种样式，其它相关工具介绍如下。</p>

<h3 id="section-6">标签云</h3>

<ul>
  <li><a href="http://www.jasondavies.com/wordcloud/#%2F%2Fwww.jasondavies.com%2Fwordtree%2Fcat-in-the-hat.txt">D3</a> </li>
  <li><a href="http://115.28.18.88/keywordExtractDemo">清语</a></li>
  <li>WordPack，一款 iOS 应用</li>
</ul>

<p><strong>D3 Word Cloud</strong></p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/11.png" class="img-up" title="D3 Word Cloud"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/11.png" width="80%" title="D3 Word Cloud" /></a></p>

<h3 id="section-7">艺术字</h3>

<ul>
  <li><a href="http://www.figlet.org/">figlet</a>，a program for making large letters out of ordinary text</li>
  <li><a href="https://github.com/viisual/ASCII-Decorator">ASCII-Decorator</a>， 基于 figlet 的 Sublime 插件</li>
</ul>

<p><strong>Figlet 效果</strong></p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/12.png" class="img-up" title="Figlet 效果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/12.png" width="80%" title="Figlet 效果" /></a></p>

<h3 id="ascii-">ASCII 码字符画</h3>

<ul>
  <li>Mac 应用
    <ul>
      <li><a href="http://www.jave.de/">Jave</a>，Java Ascii Versatile Editor，原始而古老，用起来费劲……</li>
      <li><a href="http://monodraw.helftone.com/">Monodraw</a>，Powerful ASCII art editor，开发中，<strong>未开放下载</strong></li>
      <li><a href="https://itunes.apple.com/us/app/sweetie/id547106404?mt=12">Sweetie</a>，算是可用软件中功能较全、效果较好的一个，见下图</li>
    </ul>
  </li>
  <li>iOS 应用
    <ul>
      <li>Image2Ascii</li>
    </ul>
  </li>
  <li>在线转换
    <ul>
      <li><a href="http://www.typorganism.com/asciiomatic/">1</a>，要求 JPEG 格式，尺寸是 60*50</li>
      <li><a href="http://www.degraeve.com/img2txt.php">2</a></li>
      <li><a href="http://life.chacuo.net/convertphoto2char">3</a></li>
    </ul>
  </li>
  <li>编程实现
    <ul>
      <li><a href="http://everet.org/python-ascii-art.html">Python 生成字符画</a></li>
      <li><a href="http://www.zoneky.com/blog/2014/07/10/ASCII-Art-algorithms/">Javascript 生成字符画</a></li>
    </ul>
  </li>
</ul>

<p><strong>Sweetie 效果</strong></p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/13.png" class="img-up" title="Sweetie 效果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/13.png" width="80%" title="Sweetie 效果" /></a></p>

<p><strong>Image2Ascii 效果</strong></p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/14.png" class="img-up" title="Image2Ascii 效果"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/14.png" width="70%" title="Image2Ascii 效果" /></a></p>

<h2 id="section-8">闪光点</h2>

<p>定制较丰富，界面与生成的图片都很美观。</p>

<h2 id="section-9">缺点</h2>

<p>想得到一幅满意的字符画需要反复尝试，希望有更细致的交互式调整。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/18/mei-zhou-yi-ruan-zhi-wordify/">http://frank19900731.github.io/blog/2015/01/18/mei-zhou-yi-ruan-zhi-wordify/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 XnConvert]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/11/mei-zhou-yi-ruan-zhi-xnconvert/"/>
    <updated>2015-01-11T22:32:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/11/mei-zhou-yi-ruan-zhi-xnconvert</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">功能介绍</h2>

<p><a href="http://www.xnview.com/en/xnconvert/">XnConvert</a> 是一个跨平台的图片批处理工具，提供 resize、crop、rotate、高斯模糊等在内的 80 多种图像操作，支持 <a href="http://www.xnview.com/en/xnconvert/#formats">500 余种图像格式</a>的读入、70 余种图像格式生成，可以定制输出图片的命名格式。XnConvert 比较适合照片整理（重命名、加水印等）、网页图片素材准备（图片放缩、加图像掩模、模糊等）等批处理任务。</p>

<p>XnConvert 以<strong>工作流</strong>的方式定制图片的处理过程，使用起来非常简单。</p>

<p>首先确定选择输入图片或图片文件夹。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/5.png" class="img-up" title="输入图片"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/5.png" width="80%" title="输入图片" /></a></p>

<p>然后在图片上定义操作行为和参数。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/6.png" class="img-up" title="操作行为和参数"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/6.png" width="80%" title="操作行为和参数" /></a></p>

<p>上图顺序定义了三种行为，<strong>核大小为 13*13 的高斯模糊</strong>，<strong>垂直翻转</strong>，<strong>长宽减半</strong>。Resize 中还有一些参数可调，比如填充模式（fit 或 fill 或 longest side 或 shortest side 等）和降采样方法（Bilinear、BSpline、Lanczos 等）。</p>

<p>最后定义输出文件夹、输出文件格式和命名方式。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/7.png" class="img-up" title="输出文件夹和命名方式"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/7.png" width="80%" title="输出文件夹和命名方式" /></a></p>

<p>除输出到文件夹，还可以传给 Email 或 Zip 等。</p>

<p>命名方式支持格式化表达，比如  <code>{Filename}_{Current Date [m_d_Y]}</code>。</p>

<!-- excerpt end -->

<p>XnConvert 的工作流有两种保存方式，一种是后缀名为 xbs 的 XML 格式文件，可以被 XnConvert 重新载入。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>xbs 文件示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><span class="nt">&lt;XnView_script</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span> <span class="na">name=</span><span class="s">&quot;a&quot;</span><span class="nt">&gt;</span>
</span><span class="line">    <span class="nt">&lt;Gaussian_blur</span> <span class="na">size=</span><span class="s">&quot;13&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;Mirror</span> <span class="na">method=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;Resize</span> <span class="na">mode=</span><span class="s">&quot;4&quot;</span> <span class="na">width=</span><span class="s">&quot;50&quot;</span> <span class="na">height=</span><span class="s">&quot;50&quot;</span> <span class="na">unit=</span><span class="s">&quot;1&quot;</span> <span class="na">ratio=</span><span class="s">&quot;true&quot;</span> <span class="na">orientation=</span><span class="s">&quot;false&quot;</span> <span class="na">enlarge=</span><span class="s">&quot;0&quot;</span> <span class="na">resample=</span><span class="s">&quot;7&quot;</span> <span class="na">gamma_correct=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;Output</span> <span class="na">folder=</span><span class="s">&quot;/Users/frank/Desktop/&quot;</span> <span class="na">filename=</span><span class="s">&quot;modified&quot;</span> <span class="na">case=</span><span class="s">&quot;0&quot;</span> <span class="na">format=</span><span class="s">&quot;JPEG&quot;</span><span class="nt">&gt;</span>
</span><span class="line">        <span class="nt">&lt;Options</span> <span class="na">overwrite=</span><span class="s">&quot;1&quot;</span> <span class="na">orgDate=</span><span class="s">&quot;false&quot;</span> <span class="na">keepMeta=</span><span class="s">&quot;true&quot;</span> <span class="na">keepICC=</span><span class="s">&quot;false&quot;</span> <span class="na">keepFolder=</span><span class="s">&quot;false&quot;</span> <span class="na">delOrg=</span><span class="s">&quot;false&quot;</span> <span class="na">multipage=</span><span class="s">&quot;false&quot;</span> <span class="na">allPages=</span><span class="s">&quot;false&quot;</span> <span class="na">openExplorer=</span><span class="s">&quot;false&quot;</span> <span class="na">openBrowser=</span><span class="s">&quot;false&quot;</span> <span class="na">clearItems=</span><span class="s">&quot;false&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">        <span class="nt">&lt;JPEG</span> <span class="na">quality=</span><span class="s">&quot;80&quot;</span> <span class="na">progressive=</span><span class="s">&quot;false&quot;</span> <span class="na">optimizeHuffman=</span><span class="s">&quot;false&quot;</span> <span class="na">rebuildThumb=</span><span class="s">&quot;true&quot;</span> <span class="na">orgQuality=</span><span class="s">&quot;false&quot;</span> <span class="na">DCTMethod=</span><span class="s">&quot;0&quot;</span> <span class="na">subSampling=</span><span class="s">&quot;0&quot;</span> <span class="na">smoothFactor=</span><span class="s">&quot;0&quot;</span><span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;/Output&gt;</span>
</span><span class="line"><span class="nt">&lt;/XnView_script&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>另一种是导出为命令行，可以用 <a href="http://www.xnview.com/en/nconvert/">nconvert</a> 执行。nconvert 是免费的命令行工具，XnConvert 只是它的可视化壳子。<code>nconvert -help</code> 显示支持的 80 种操作和众多图片文件格式。</p>

<p>以之前定义的工作流为例，导出如下命令行。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>nconvert 命令示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">nconvert -gauss 13 -yflip -ratio -rtype lanczos -resize 50% 50%
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">界面设计</h2>

<p>实用无美感。</p>

<h2 id="section-2">易用性</h2>

<p>简单直接，非常易用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定，不会因文件数量大而崩溃。</p>

<h2 id="section-4">跨平台</h2>

<p>Windows、Mac、Linux 通用。</p>

<h2 id="section-5">类似软件</h2>

<p><code>Photoshop</code>、<code>Acorn</code> 等图片处理软件功能强大，门槛相应也高，消耗资源多。<code>Photoshop</code> 支持<strong>动作录制批处理</strong>。</p>

<p><code>Image Smith</code> 也是一款比较全能的图片批处理软件，但经验是使用中容易崩溃；<code>PhotoResize Pro</code> 功能较少，主要是图片大小调整和重命名。 </p>

<p>Matlab、Python、R 等编程语言都能找到自己的图片处理工具箱（自带或者开源的），有一定的学习成本，需要可视化界面的话得自己编写。</p>

<p><code>Automator</code> 支持一些图片操作，可以编写工作流。</p>

<p>Mac 自带 <code>sips</code> 命令支持一些图片操作，其它图片处理相关的命令行或包应该还有不少，就不继续查找列举了。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>提供命令行工具，方便嵌入到程序中使用；</li>
  <li>工作流操作模式，可保存重用。</li>
</ul>

<h2 id="section-7">缺点</h2>

<ul>
  <li>软件界面简陋；</li>
  <li>命令行工具不开源。</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/11/mei-zhou-yi-ruan-zhi-xnconvert/">http://frank19900731.github.io/blog/2015/01/11/mei-zhou-yi-ruan-zhi-xnconvert/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Webhook 在 Gitlab 中实现类 Github Pages 效果]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/10/shi-yong-webhook-zai-gitlab-zhong-shi-xian-lei-github-pages-xiao-guo/"/>
    <updated>2015-01-10T21:35:56+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/10/shi-yong-webhook-zai-gitlab-zhong-shi-xian-lei-github-pages-xiao-guo</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#gitlab">Gitlab</a></li>
  <li><a href="#web-hooks">Web hooks</a></li>
  <li><a href="#section">操作步骤</a>    <ul>
      <li><a href="#project">创建 Project，提交代码</a></li>
      <li><a href="#web-hooks-1">关联 Web hooks</a></li>
      <li><a href="#web-hooks-">Web hooks 逻辑</a></li>
    </ul>
  </li>
</ul>

<!-- excerpt start -->

<h2 id="gitlab">Gitlab</h2>

<p><a href="https://gitlab.com/gitlab-org/gitlab-ce/tree/master">Gitlab</a> 是一个与 Github 极为相似的可视化版本管理系统，它基于 Git、Ruby on Rails、Redis 等工具框架，目前支持 Ubuntu、Debian、CentOS 在内的部分 *inx 操作系统，<strong>不考虑支持 Windows</strong>，详见 <a href="https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/install/requirements.md">Requirements</a>。Gitlab 既有收费企业版，也有免费开源社区版本，被超过十万家机构广泛应用，安装方法及相关文档可以在 <a href="http://doc.gitlab.com/ce/">这里</a> 找到。</p>

<p>最简单的安装方式是下载 Omnibus 安装包进行安装，在 <a href="https://about.gitlab.com/downloads/">这里</a> 根据系统下载安装包，安装方法是</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Gitlab Omnibus Package 安装</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># Ubuntu/Debian:</span>
</span><span class="line">sudo dpkg -i gitlab_x.x.x-omnibus.xxx.deb
</span><span class="line">
</span><span class="line"><span class="c"># CentOS:</span>
</span><span class="line">sudo rpm -Uvh gitlab-x.x.x_xxx.rpm
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>系统初始登录账号是 <code>root</code>，密码是 <code>5iveL!fe</code>，登录后修改密码，为自己创建用户（组）。</p>

<p>Gitlab 的基本使用体验和 Github 是无差的，不过并不提供 <a href="https://pages.github.com/">Github Pages</a> 的功能：</p>

<blockquote>
  <p>Hosted directly from your GitHub repository. Just edit, push, and your changes are live.</p>
</blockquote>

<p>其实 Github Pages 的最大吸引力是<strong>免费的空间</strong>和<strong>免除服务器设置</strong>，如果单纯要实现 <code>Just edit, push, and your changes are live</code> 这一功能，可以借助 Web hooks。</p>

<!-- excerpt end -->

<h2 id="web-hooks">Web hooks</h2>

<p>Gitlab 中 Web hooks 的概念当然也和 Github 没差，给予的解释是</p>

<blockquote>
  <p>Project web hooks allow you to trigger an URL if new code is pushed or a new issue is created.</p>

  <p>You can configure web hooks to listen for specific events like pushes, issues or merge requests. GitLab will send a POST request with data to the web hook URL.</p>

  <p>Web hooks can be used to update an external issue tracker, trigger CI builds, update a backup mirror, or even deploy to your production server.</p>
</blockquote>

<p>我们想要实现的是让 push events 触发 production server 上的内容更新，更具体的说，是让我 <strong>Octopress 博客的 master 分支的 push 操作</strong>，触发<strong>网页服务器的内容更新</strong>。</p>

<p>push 操作发送的 post 请求内容示例如下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>push 操作的 post 请求示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nt">&quot;before&quot;</span><span class="p">:</span> <span class="s2">&quot;95790bf891e76fee5e1747ab589903a6a1f80f22&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;after&quot;</span><span class="p">:</span> <span class="s2">&quot;da1560886d4f094c3e6c9ef40349f7d38b5d27d7&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;ref&quot;</span><span class="p">:</span> <span class="s2">&quot;refs/heads/master&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;user_id&quot;</span><span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;user_name&quot;</span><span class="p">:</span> <span class="s2">&quot;John Smith&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;project_id&quot;</span><span class="p">:</span> <span class="mi">15</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;repository&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Diaspora&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;git@example.com:diaspora.git&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;description&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;homepage&quot;</span><span class="p">:</span> <span class="s2">&quot;http://example.com/diaspora&quot;</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="nt">&quot;commits&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="s2">&quot;b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;message&quot;</span><span class="p">:</span> <span class="s2">&quot;Update Catalan translation to e38cb41.&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;timestamp&quot;</span><span class="p">:</span> <span class="s2">&quot;2011-12-12T14:27:31+02:00&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;http://example.com/diaspora/commits/b6568db1bc1dcd7f8b4d5a946b0b91f9dacd7327&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;author&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;Jordi Mallach&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="nt">&quot;email&quot;</span><span class="p">:</span> <span class="s2">&quot;jordi@softcatala.org&quot;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">},</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">      <span class="nt">&quot;id&quot;</span><span class="p">:</span> <span class="s2">&quot;da1560886d4f094c3e6c9ef40349f7d38b5d27d7&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;message&quot;</span><span class="p">:</span> <span class="s2">&quot;fixed readme&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;timestamp&quot;</span><span class="p">:</span> <span class="s2">&quot;2012-01-03T23:36:29+02:00&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;url&quot;</span><span class="p">:</span> <span class="s2">&quot;http://example.com/diaspora/commits/da1560886d4f094c3e6c9ef40349f7d38b5d27d7&quot;</span><span class="p">,</span>
</span><span class="line">      <span class="nt">&quot;author&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">        <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;GitLab dev user&quot;</span><span class="p">,</span>
</span><span class="line">        <span class="nt">&quot;email&quot;</span><span class="p">:</span> <span class="s2">&quot;gitlabdev@dv6700.(none)&quot;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">],</span>
</span><span class="line">  <span class="nt">&quot;total_commits_count&quot;</span><span class="p">:</span> <span class="mi">4</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们只需要关注 <code>ref: refs/heads/master</code>，保证是 <strong>master</strong> 分支的 push 操作，而非其它分支（比如 source）。</p>

<p>官方提供了一个 ruby 版本的 webhook 接收逻辑。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>print_http_body.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;webrick&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">server</span> <span class="o">=</span> <span class="ss">WEBrick</span><span class="p">:</span><span class="ss">:HTTPServer</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="ss">:Port</span> <span class="o">=&gt;</span> <span class="no">ARGV</span><span class="o">.</span><span class="n">first</span><span class="p">)</span>
</span><span class="line"><span class="n">server</span><span class="o">.</span><span class="n">mount_proc</span> <span class="s1">&#39;/&#39;</span> <span class="k">do</span> <span class="o">|</span><span class="n">req</span><span class="p">,</span> <span class="n">res</span><span class="o">|</span>
</span><span class="line">  <span class="nb">puts</span> <span class="n">req</span><span class="o">.</span><span class="n">body</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="nb">trap</span> <span class="s1">&#39;INT&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">server</span><span class="o">.</span><span class="n">shutdown</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="n">server</span><span class="o">.</span><span class="n">start</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>运行 <code>ruby print_http_body.rb 8000</code> 即可监听 push 事件。</p>

<p>我的打算是在自己现有的 Apache 服务器上，用 PHP 写这个简单逻辑。</p>

<h2 id="section">操作步骤</h2>

<p>将 Github 上的 Octorpess 博客迁移到 Gitlab 上的步骤如下。</p>

<h3 id="project">创建 Project，提交代码</h3>

<p>在 Gitlab 中创建 Project，在本地 Octopress Repository 文件夹下执行</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>添加 Gitlab 远端版本库</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">git remote add gitlab http://example.com/username/octopress.git
</span><span class="line">git push -u gitlab <span class="nb">source</span>:source
</span><span class="line">
</span><span class="line"><span class="nb">cd </span>_deploy
</span><span class="line">git remote add gitlab http://example.com/username/octopress.git
</span><span class="line">git push -u gitlab master:master
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>gitlab 是自定义远端版本库的名称，以后可以向 Github 和自己搭建的 Gitlab 分别提交 master、source 分支的更改。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>向 Github、Gitlab 提交更改</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c"># github</span>
</span><span class="line">rake deploy
</span><span class="line">git push origin <span class="nb">source</span>
</span><span class="line">
</span><span class="line"><span class="c"># gitlab</span>
</span><span class="line"><span class="nb">cd </span>_deploy
</span><span class="line">git push gitlab master
</span><span class="line"><span class="nb">cd</span> ..
</span><span class="line">git push gitlab <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>我们希望 <code>git push gitlab master</code> 触发服务器内容更新。</p>

<h3 id="web-hooks-1">关联 Web hooks</h3>

<p>如下图进入 Settings -&gt; Webhooks 创建一个钩子</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/4.png" class="img-up" title="钩子创建"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/4.png" width="90%" title="钩子创建" /></a></p>

<p>点击 <code>Test Hook</code> 发送模拟消息到你指定的 URL。</p>

<h3 id="web-hooks-">Web hooks 逻辑</h3>

<p>编写 PHP 脚本如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Web hooks 逻辑</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class="line">
</span><span class="line">    <span class="nv">$de_json</span> <span class="o">=</span>  <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$GLOBALS</span><span class="p">[</span><span class="s1">&#39;HTTP_RAW_POST_DATA&#39;</span><span class="p">],</span> <span class="k">TRUE</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nv">$de_json</span><span class="p">[</span><span class="s1">&#39;ref&#39;</span><span class="p">]</span> <span class="o">==</span> <span class="s2">&quot;refs/heads/master&quot;</span><span class="p">)</span> <span class="c1">// pull only when master branch updated</span>
</span><span class="line">        <span class="nb">shell_exec</span><span class="p">(</span><span class="s2">&quot;cd /path/to/your/webcontent;/usr/bin/git pull http://example.com/username/octopress.git&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>识别是 master 分支的更新提交，就到网页目录下更新内容。</p>

<p>测试中发现 PHP 里嵌入的 shell 命令无法执行，而在命令行中可以执行。网上查询可能是 safe_mode 设置的问题或者 <code>shell_exec</code> 在设置中被 disable 掉，又或者是 shell 执行环境的问题，不过最后确认的原因还是<strong>权限问题</strong>。</p>

<p>我把 Octopress 的内容放在 lighttpd 中，而 PHP 的运行环境是 Apache，后者的实际运行用户是 <code>www-data</code>（在 PHP 代码中执行 <code>whoami</code> 可知），而非登录用户或者 <code>root</code>，所以要改变 <code>www-data</code> 对于目录或文件的权限。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>权限变更</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">chmod o+rwx /usr/bin/git
</span><span class="line">chmod -R o+rwx /path/to/your/webcontent
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>让 <code>www-data</code> 有权限执行 git 命令，并操作网页内容文件夹。</p>

<p>到这里，已经将 Octopress 迁移到 Gitlab 上，并完成 修改 -&gt; 提交 -&gt; 自动更新的功能。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/10/shi-yong-webhook-zai-gitlab-zhong-shi-xian-lei-github-pages-xiao-guo/">http://frank19900731.github.io/blog/2015/01/10/shi-yong-webhook-zai-gitlab-zhong-shi-xian-lei-github-pages-xiao-guo/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Sapiens]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/04/mei-zhou-ruan-zhi-sapiens/"/>
    <updated>2015-01-04T00:37:59+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/04/mei-zhou-ruan-zhi-sapiens</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>在这么一个<strong>读图时代</strong>、<strong>看脸时代</strong>，软件的颜值也称得上一个重要的衡量指标。Sapien 除了有一张美丽的面孔，还有那么点小情趣，挺讨人喜欢的。</p>

<h2 id="section">功能介绍</h2>

<p>Sapiens 是一个软件快速启动工具，且目前只支持软件快速打开，没有打开文件、执行脚本啦什么旁的功能。</p>

<p>Sapiens 除了通常的快捷键启动方式，还有<strong>画圈圈</strong>启动方式，具体见如下动态图。从动态图还可以看出它默认<strong>列举你最近用过的软件</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/1.gif" class="img-up" title="动态图"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/1.gif" width="70%" title="动态图" /></a></p>

<blockquote><p>兰花指微翘，食指指尖在触摸板上看似不经意的划出那一弯圆月，美美的界面就映入眼帘，真真儿的是让人陶醉呢……</p></blockquote>

<p><strong>转向顺时针、逆时针皆可</strong>，圈数触发可以设置在 1 - 3 圈，默认是 1.4 圈。经测试设置为 1 圈的时候，大概也就是<strong>一圈半</strong>能识别出的水平。注意<strong>手速稍快些</strong>，<strong>画的圆半径不要太小</strong>，试过几次就能很熟练了。</p>

<!-- excerpt end -->

<p>既漂亮又有情趣，倘若是无脑，那也就是平平啦，不过人家可是结合了人工智能的呦。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/3.png" class="img-up" title="Artificial Inteligence"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/3.png" width="70%" title="Artificial Inteligence" /></a></p>

<p>把 <strong>About Sapiens’ Artificial Intelligence</strong> 那抄录下来。</p>

<blockquote><p>Sapiens tries to predict the applications you will want to launch.</p><p>Sapiens understands what applications you use and learns how you interact with your Mac. For this reason it may take 2-3 days (it really depends how often you use your mac daily) for it to have enough brain power for making accurate predictions.</p><p>Also, as your habits change Sapiens keeps adapting to them by constantly learning from you.</p></blockquote>

<p>就是说，你把人家来安装，我来把你细观察，你想吃饭我端碗，你想拉屎我递纸，把你伺候好好的，一辈子都随你意。</p>

<h2 id="section-1">界面设计</h2>

<p>提供五种布局，默认的如下图。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/2.png" class="img-up" title="Sapiens 图示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/2.png" width="70%" title="Sapiens 图示" /></a></p>

<p>可以设置 <strong>Desktop Mirroring Effect</strong>，圆内背景就是桌面背景加了遮罩的效果，配合上<strong>动态壁纸</strong>，确实八错。</p>

<h2 id="section-2">易用性</h2>

<p>傻瓜软件。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定，未遇异常。</p>

<h2 id="section-4">跨平台</h2>

<p>无。</p>

<h2 id="section-5">类似软件</h2>

<p>提到快速启动软件，那头两把交椅自然就是 <a href="http://www.alfredapp.com/">Alfred</a> 和 <a href="http://qsapp.com/">QuickSilver</a> ，前者闭源收费（确切的说是高级功能收费），后者开源免费。</p>

<p>二者都有很强的附加功能，比如文件搜索、删除、压缩、查看详情啦，脚本执行、iTunes 控制啦等。关于它们的对比网上有 <a href="http://www.v2ex.com/t/42050">很多讨论</a>，不在这里多说。 </p>

<p>QuickSilver 有自己的插件列表，因为是开源的，所以也可以自己开发，不过门槛应该比较高吧？Alfred 有一个 Workflow 模式，是收费功能，可以通过撰写脚本、连接模块实现自己想要的功能，就相当于一个插件定制系统了（有点类似于 Automator），适合于普通程序员。</p>

<p>本人最早使用的是 QucikSilver，习惯积累下来也就没有转到 Alfred，也是因为前者已经能够满足所需。最近尝试用用 Alfred，也别落伍太多，先从这个 <a href="https://github.com/hzlzh/AlfredWorkflow.com">Workflow 列表</a> 看起吧，这个 <a href="http://lucifr.com/2011/11/30/alfred-and-some-recommanded-extensions/">博客</a> 中也有很多 Alfred 相关内容。</p>

<p>不过我还是有点想不明白为什么要把那么多功能都堆到这个小软件里，自动和手动差别就这么大么，还是说在追求些别的什么。</p>

<p>最主要的原因是我还不够 Geek 吧……</p>

<h2 id="section-6">闪光点</h2>

<p>漂亮。</p>

<h2 id="section-7">缺点</h2>

<p>既然漂亮，就别要求那么高了。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/04/mei-zhou-ruan-zhi-sapiens/">http://frank19900731.github.io/blog/2015/01/04/mei-zhou-ruan-zhi-sapiens/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gollum 开机启动配置]]></title>
    <link href="http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi/"/>
    <updated>2015-01-02T09:31:32+08:00</updated>
    <id>http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#gollum-">Gollum 介绍</a></li>
  <li><a href="#section">安装</a></li>
  <li><a href="#section-1">配置</a>    <ul>
      <li><a href="#section-2">编码错误</a></li>
      <li><a href="#mathjax">配置本地 MathJax</a></li>
      <li><a href="#section-3">微调界面</a></li>
      <li><a href="#js-">嵌入 JS 代码</a></li>
    </ul>
  </li>
  <li><a href="#section-4">开机启动</a></li>
  <li><a href="#section-5">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="gollum-">Gollum 介绍</h2>

<p><a href="https://github.com/gollum/gollum">Gollum</a> 是一个轻量级的 Wiki 框架，可以管理以 Git Repository 形式存在的文件夹。相比于 Mediawiki，文档迁移性更灵活，界面也清新美观。支持多种文档格式，包括 Markdown、MediaWiki、Org-mode、Plain Text、reStructuredText、RDoc、Textile 等。</p>

<p><a href="http://frank19900731.github.io/img/post/2015-1/1.png" class="img-up" title="Gollum 界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2015-1/1.png" width="90%" title="Gollum 界面" /></a></p>

<p>Gollum 自带公式输入支持，可自定义 MathJax 的配置；<strong>支持图片拖拽插入</strong>（并自动上传），这是让我觉得很方便的一点。美中不足的是，Gollum 不支持中文命名的文件，所以</p>

<ul>
  <li>如果 Git Repository 中包含中文命名文档，则无法正确显示；</li>
  <li>对于中文名称链接，Gollum 会将该名称<strong>转为拼音形式作为文件名</strong>，相应链接、文档标题也都是拼音；</li>
  <li>如果上传图片是中文命名的，也无法正确显示。</li>
</ul>

<h2 id="section">安装</h2>

<p>按照 <a href="https://github.com/gollum/gollum#installation">说明</a> 安装即可。</p>

<p>Gollum 安装过程可能会比较慢，或者报 TIME_OUT 错误，可切换至 <a href="http://ruby.taobao.org/">淘宝镜像</a>。</p>

<!-- excerpt end -->

<h2 id="section-1">配置</h2>

<h3 id="section-2">编码错误</h3>

<p>编辑文档过程中，特别是使用非 Gollum 网页编辑器编辑文档<strong>并提交</strong>，可能会出现 <code>incompatible character encodings: UTF-8 and ASCII-8BIT</code> 编码错误，需要 <a href="https://github.com/gollum/gollum/issues/843">修改 gitlab-grit 中的 index.rb 代码的第 176 行</a> 如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Gollum Encoding Fix</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">tree_contents</span><span class="o">[</span><span class="n">k</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;%s %s</span><span class="se">\0</span><span class="s2">%s&quot;</span> <span class="o">%</span> <span class="o">[</span><span class="n">tmode</span><span class="p">,</span> <span class="n">obj</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">force_encoding</span><span class="p">(</span><span class="s1">&#39;ASCII-8BIT&#39;</span><span class="p">),</span> <span class="n">sha</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>也就是加入了强制编码。</p>

<p>gitlab-grit 的路径，如果使用 rvm 的 ruby 安装，是 </p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gitlab-grit/lib/grit/index.rb</code></p>

<p>如果使用系统 ruby 安装，则是</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gitlab-grit/lib/grit/index.rb</code> 。</p>

<h3 id="mathjax">配置本地 MathJax</h3>

<p>因为可能离线查看文档，所以最好将 MathJax 的请求引到本地，下载 <a href="https://github.com/mathjax/MathJax">MathJax</a> 到本地服务器即可，然后修改 Gollum 模板定义。</p>

<p>同上述，文件路径是</p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gollum/lib/gollum/templates/layout.mustache</code></p>

<p>或</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gollum/lib/gollum/templates/layout.mustache</code> 。</p>

<p>第 54 行修改为</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MathJax 请求修改</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="javascript"><span class="line"><span class="nx">j</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="s1">&#39;//localhost/MathJax/MathJax.js?config=TeX-AMS-MML_HTMLorMML&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section-3">微调界面</h3>

<p>Gollum 的界面定制起来很方便，修改 gollum.css 或者 -&#45;css 参数指定都可以。</p>

<p>gollum.css 的路径是</p>

<p><code>/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/gems/gollum/lib/gollum/public/gollum/css/gollum.css</code></p>

<p>或</p>

<p><code>/Library/Ruby/Gems/X.X.X/gems/gollum/lib/gollum/public/gollum/css/gollum.css</code> 。</p>

<p>标题是 h1 、左浮动，菜单是 ul、右浮动。当标题较长时，二者配合搭配不好看，修改为</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>标题样式修改</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nf">#head</span> <span class="nt">h1</span> <span class="p">{</span>
</span><span class="line">  <span class="k">font-size</span><span class="o">:</span> <span class="m">1.5em</span><span class="p">;</span>
</span><span class="line">  <span class="c">/* float: left; */</span>
</span><span class="line">  <span class="k">line-height</span><span class="o">:</span> <span class="k">normal</span><span class="p">;</span>
</span><span class="line">  <span class="c">/* margin: 0; */</span>
</span><span class="line">  <span class="k">margin-bottom</span><span class="o">:</span> <span class="m">20px</span><span class="p">;</span>
</span><span class="line">  <span class="k">padding</span><span class="o">:</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0</span> <span class="m">0.667em</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>现在我们改用 custom.css 做两处定制</p>

<ul>
  <li>二级列表与一级列表项目上下边缘的长度太大，因为默认样式只定义了 <code>ul</code>，没有考虑二级列表的情况，我们希望<strong>多级列表的行是等间距的</strong>；</li>
  <li>表格内容（<code>tbody</code>）没有扩展到整个表格（<code>table</code>）区域，视觉效果是表格偏向页面左侧，我们希望<strong>表格居中、内容充满</strong>。</li>
</ul>

<p>在 Git Repository 的根目录下创建 custom.css，编辑内容为</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>二级列表与表格居中定制</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="css"><span class="line"><span class="nt">li</span> <span class="o">&gt;</span> <span class="nt">ul</span> <span class="p">{</span>
</span><span class="line">  <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nc">.center90</span> <span class="p">{</span>
</span><span class="line">	<span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="k">auto</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line">	<span class="k">width</span><span class="o">:</span> <span class="m">90</span><span class="o">%</span><span class="p">;</span>
</span><span class="line">	<span class="k">display</span><span class="o">:</span> <span class="n">table</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="nc">.center80</span> <span class="p">{</span>
</span><span class="line">	<span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="k">auto</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line">	<span class="k">width</span><span class="o">:</span> <span class="m">80</span><span class="o">%</span><span class="p">;</span>
</span><span class="line">	<span class="k">display</span><span class="o">:</span> <span class="n">table</span> <span class="cp">!important</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>center90</code> 表示表格宽度占父元素 90% 且居中显示，表格内容充满此区域。</p>

<p>保存 custom.css，此时还看不到正确显示，需要 <code>git commit</code> 后查看。</p>

<p>关于表格还要多说一句，如果想实现单元格的<strong>多列/行合并</strong>（columnspan/rowspan），Markdown 是做不到的，可以写 Html 代码，或者改用 MediaWiki 格式的文档。推荐一个 <a href="http://www.tablesgenerator.com/">在线表格生成器</a>（貌似在墙外），支持 Latex、HTML、Plain Text、Markdown、MediaWiki 格式的表格生成，也可参考 <a href="http://pub.lcair.com/index.php?title=MediaWiki%E8%AF%AD%E6%B3%95">MediaWiki 的语法</a>。</p>

<p>那么问题来了，如何将表格的类定义为 <code>center90</code> 、<code>center80</code> ？</p>

<p>MediaWiki 支持直接设置，而 Gollum 使用的 Markdown 编译器则不支持类的设定（本博客使用的 kramdown 是可以的）。一个简单的想法是使用内嵌 JS 代码进行设置，然而由于 Gollum 使用了 <a href="https://github.com/gollum/gollum/blob/master/docs/sanitization.md">Sanitization Rules</a>（相关代码在 <a href="https://github.com/gollum/gollum-lib">gollum-lib</a> 中），所以还是需要一番设置的，见下节介绍。</p>

<h3 id="js-">嵌入 JS 代码</h3>

<p>还是在根目录下，创建 config.rb，编辑内容为</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>让 Gollum 支持 script 标签和 src 属性</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">sanitizer</span> <span class="o">=</span> <span class="ss">Gollum</span><span class="p">:</span><span class="ss">:Sanitization</span><span class="o">.</span><span class="n">new</span>
</span><span class="line"><span class="n">sanitizer</span><span class="o">.</span><span class="n">elements</span><span class="o">.</span><span class="n">concat</span> <span class="o">[</span><span class="s1">&#39;script&#39;</span><span class="o">]</span> <span class="c1"># Tags</span>
</span><span class="line"><span class="n">sanitizer</span><span class="o">.</span><span class="n">attributes</span><span class="o">[</span><span class="ss">:all</span><span class="o">].</span><span class="n">push</span> <span class="s1">&#39;src&#39;</span> <span class="c1"># Attributes</span>
</span><span class="line"><span class="ss">Precious</span><span class="p">:</span><span class="ss">:App</span><span class="o">.</span><span class="n">set</span><span class="p">(</span><span class="ss">:wiki_options</span><span class="p">,</span> <span class="p">{</span><span class="ss">:sanitization</span> <span class="o">=&gt;</span> <span class="n">sanitizer</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>上段代码的作用是将 script 标签加入白名单，并支持 script 的 src 属性。为什么需要 src 呢，直接在 script 标签里写 JS 代码不行么？</p>

<p>貌似这么直接整确实不行，script 标签里的内容在解析后会被套上一层 <code>CDATA</code> 标记，导致 JS 代码无法执行，不过我没有具体研究 CDATA 是什么时候被加进来的。<strong>改用 src 引入 JS 文件的方式是验证通过的</strong>，这样也能让 MD 文档显得比较干净。</p>

<p>重启 Gollum，用 -&#45;config 指定 config.rb 的路径即可。</p>

<h2 id="section-4">开机启动</h2>

<p>通常步骤就是把在命令行启动的命令写成脚本，<a href="http://www.tanhao.me/talk/1287.html">按照一定方式加入开机启动</a> 就可以了。然而实际当中被<strong>坑惨了</strong>，主要因为我除了 Octopress 就没怎么用过 ruby。问题有二</p>

<ul>
  <li>Mac 自带的 ruby 是 2.0.0 的，也就是 <code>/usr/bin/ruby</code> 指定的那个，rvm 的版本与之并存，可以通过 <code>rvm system</code> 或者 <code>rvm use X.X.X</code> 来切换，按照我的 bash 环境变量配置，Gollum 被安装到 rvm 下的 ruby 中；</li>
  <li>launchctl 的运行环境与 bash 不同，即便 <code>source ~/.bash_profile</code>，或者 <code>rvm use X.X.X</code>，<strong>环境变量里仍然只有系统自带的 ruby</strong>，想用 rvm 的 ruby 就得自己 export PATH。</li>
</ul>

<p>最后，成功配置开机启动的流程如下。</p>

<ul>
  <li><code>rvm system</code>，将 Gollum 安装在系统自带 ruby 里；</li>
  <li>编写 plist 文件</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>开机启动 plist 文件</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="xml"><span class="line"><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
</span><span class="line"><span class="cp">&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;</span>
</span><span class="line"><span class="nt">&lt;plist</span> <span class="na">version=</span><span class="s">&quot;1.0&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="nt">&lt;dict&gt;</span>
</span><span class="line">    <span class="nt">&lt;key&gt;</span>Label<span class="nt">&lt;/key&gt;</span>
</span><span class="line">    <span class="nt">&lt;string&gt;</span>com.frank.loginscript<span class="nt">&lt;/string&gt;</span>
</span><span class="line">    <span class="nt">&lt;key&gt;</span>ProgramArguments<span class="nt">&lt;/key&gt;</span>
</span><span class="line">    <span class="nt">&lt;array&gt;</span>
</span><span class="line">        <span class="nt">&lt;string&gt;</span>/Users/frank/Documents/Startup/startup.sh<span class="nt">&lt;/string&gt;</span>
</span><span class="line">    <span class="nt">&lt;/array&gt;</span>
</span><span class="line">    <span class="nt">&lt;key&gt;</span>RunAtLoad<span class="nt">&lt;/key&gt;</span>
</span><span class="line">    <span class="nt">&lt;true/&gt;</span>
</span><span class="line"><span class="nt">&lt;/dict&gt;</span>
</span><span class="line"><span class="nt">&lt;/plist&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>创建 /usr/bin/gollum，根据 ruby 的配置加载 Gollum。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>/usr/bin/gollum</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/usr/bin/env ruby_executable_hooks</span>
</span><span class="line"><span class="c">#</span>
</span><span class="line"><span class="c"># This file was generated by RubyGems.</span>
</span><span class="line"><span class="c">#</span>
</span><span class="line"><span class="c"># The application &#39;gollum&#39; is installed as part of a gem, and</span>
</span><span class="line"><span class="c"># this file is here to facilitate running it.</span>
</span><span class="line"><span class="c">#</span>
</span><span class="line">
</span><span class="line">require <span class="s1">&#39;rubygems&#39;</span>
</span><span class="line">
</span><span class="line"><span class="nv">version</span> <span class="o">=</span> <span class="s2">&quot;&gt;= 0&quot;</span>
</span><span class="line">
</span><span class="line"><span class="k">if </span>ARGV.first
</span><span class="line">  <span class="nv">str</span> <span class="o">=</span> ARGV.first
</span><span class="line">  <span class="nv">str</span> <span class="o">=</span> str.dup.force_encoding<span class="o">(</span><span class="s2">&quot;BINARY&quot;</span><span class="o">)</span> <span class="k">if </span>str.respond_to? :force_encoding
</span><span class="line">  <span class="k">if </span><span class="nv">str</span> <span class="o">=</span>~ /<span class="se">\A</span>_<span class="o">(</span>.*<span class="o">)</span>_<span class="se">\z</span>/ and Gem::Version.correct?<span class="o">(</span><span class="nv">$1</span><span class="o">)</span> <span class="k">then</span>
</span><span class="line"><span class="k">    </span><span class="nv">version</span> <span class="o">=</span> <span class="nv">$1</span>
</span><span class="line">    ARGV.shift
</span><span class="line">  end
</span><span class="line">end
</span><span class="line">
</span><span class="line">gem <span class="s1">&#39;gollum&#39;</span>, version
</span><span class="line">load Gem.bin_path<span class="o">(</span><span class="s1">&#39;gollum&#39;</span>, <span class="s1">&#39;gollum&#39;</span>, version<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>编写启动脚本，其中 <code>export PATH</code> 是为了指定 <code>ruby_executable_hooks</code> 的路径。查了一下，系统自带的 ruby 没这个可执行文件，虽然这里用的是 rvm ruby 里的，但没问题……如果不加，则会返回错误代码 127，找不到命令。</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>启动脚本</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:/Users/frank/.rvm/rubies/ruby-X.X.X/lib/ruby/gems/X.X.X/bin
</span><span class="line">/usr/bin/gollum --allow-upload dir --mathjax --show-all --config /Users/frank/gitlab/wiki-of-taijiru/config.rb --gollum-path /Users/frank/gitlab/wiki-of-taijiru
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>/usr/bin/gollum</code> 是为了方便以后全局使用而添加的，能根据我对 ruby 的切换调用相应的 Gollum。其实大可以把启动脚本直接写成</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>启动脚本（2）</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">/Library/Ruby/Gems/X.X.X/gems/gollum/bin/gollum --allow-upload dir --mathjax --show-all --config /Users/frank/gitlab/wiki-of-taijiru/config.rb --gollum-path /Users/frank/gitlab/wiki-of-taijiru
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-5">总结</h2>

<p>本以为很简单的启动配置花了我好长时间，主要是对 ruby 开发环境配置的不熟悉和对 Launch Daemon 的环境变量不了解造成的。这让我想起大一时第一次配置 Apache 的情境，无论怎么修改 index.html，浏览器显示都没有变化。最后终于发现，我修改的是自己通过源码安装的 apache，而每次开关的是系统自带 apache……</p>

<p>不过也正是在查这种傻逼错误的过程里，自己才会去搜索大量资料反复调试，对相关工具的了解也更深。<strong>菜逼的提升，大抵如此吧 ^-^</strong>。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi/">http://frank19900731.github.io/blog/2015/01/02/gollum-kai-ji-qi-dong-pei-zhi/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Proxifier]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/"/>
    <updated>2014-12-28T17:19:15+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">功能介绍</a></li>
  <li><a href="#section-1">界面设计</a></li>
  <li><a href="#section-2">易用性</a></li>
  <li><a href="#section-3">稳定性</a></li>
  <li><a href="#section-4">跨平台</a></li>
  <li><a href="#section-5">类似软件</a></li>
  <li><a href="#section-6">闪光点</a></li>
  <li><a href="#section-7">缺点</a></li>
</ul>

<!-- excerpt start -->

<p>周四以来，Mail 里无法查收/发送 Gmail 邮件，为此鼓捣了好一阵子。最后，考虑到好多移动设备也需要查看邮件，索性买一个 VPN 账号。简单对比了一下选择了 <a href="https://www.fengchinet.com/">风驰</a>，一方面速度、稳定性都很不错，另一方面 270 块能够支持 3 个设备同时登陆且无限时间还真是挺划算的，可谓物美价廉。注意要注册两个账号，一个用另一个的邀请链接购买，可返利 40% 并可提现到支付宝 。</p>

<p>鼓捣的过程里接触到 Proxifier 等一干软件，在此把粗浅的认识记录下来。</p>

<h2 id="section">功能介绍</h2>

<p><a href="http://www.proxifier.com/documentation/v3/">Proxifier</a> 可以针对具体的应用设置网络代理，类似于 SwitchySharp 的 Auto Switch Mode，使得部分软件（网址或ip）使用代理访问网络，而其它软件（网址或ip）正常访问网络。</p>

<ul>
  <li>支持 Socks4、Socks5、Https、Http 协议的代理；</li>
  <li>可配置代理服务器链，均衡流量，支持使用不同协议；</li>
  <li>路由表形式配置不同应用程序的网络访问行为，可以是直连、禁止访问或代理三种形式；</li>
  <li>访问行为可具体指明域名、IP和端口，支持通配符；</li>
  <li>带有日志输出，可以配置级别，提供时时流量统计图示；</li>
  <li>可配置通过代理服务器进行 DNS 解析。</li>
</ul>

<p><a href="http://chris.olstrom.com/privacy/proxy-types/">What is the Difference Between Proxy Types</a> 这篇文章简要讲解了 http、socks 代理以及 VPN 的优缺点，之前不甚了解。</p>

<!-- excerpt end -->

<h2 id="section-1">界面设计</h2>

<p>界面设计普通。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/43.png" class="img-up" title="主界面与 Proxy 列表"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/43.png" width="80%" title="主界面与 Proxy 列表" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/44.png" class="img-up" title="添加 Proxy"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/44.png" width="60%" title="添加 Proxy" /></a></p>

<h2 id="section-2">易用性</h2>

<p>容易使用。</p>

<h2 id="section-3">稳定性</h2>

<p>稳定性良好。</p>

<h2 id="section-4">跨平台</h2>

<p>支持 Windows、OS X。</p>

<h2 id="section-5">类似软件</h2>

<p>确切地说不是类似软件，而是相关软件。</p>

<p>Proxifier 需要填写代理，可以在网上寻找相关服务（收费或免费），也可以自己搭建。</p>

<ul>
  <li><a href="https://github.com/goagent/goagent">goagent</a> 提供 http、https 代理（<a href="https://code.google.com/p/goagent/issues/detail?id=5988">似乎支持过 socks5 ？</a>），缺点是<strong>可能会隔段时间失效</strong>，<strong>需要更新 ip 列表</strong>。 </li>
  <li><a href="http://www.ccproxy.com/">CCProxy</a> 一款知名的国产代理服务器软件，<a href="http://www.ccproxy.com/proxifier-tou-ming-dai-li.htm">配合 Proxifier 可以实现局域网共享网络访问</a>。</li>
  <li><a href="https://github.com/shadowsocks/shadowsocks">Shadowsocks</a> 分服务器端和客户端，服务器端提供 socks 代理，用法可以是
    <ul>
      <li>把 VPN 转为代理进而共享；</li>
      <li>部署到国外的 VPS 上，身边有同学这么做。</li>
    </ul>
  </li>
  <li><a href="https://github.com/ohdarling/GoAgentX">GoAgentX</a> 集成了 goagent、Shadowsocks、SSH 等工具，提供图形界面配置。</li>
</ul>

<p>类似的网络工具还有很多，看得头都大了，挂一漏万，有一个好使就行。</p>

<p>还有一个工具是在使用 VPN 时会用到的，就是 <a href="https://github.com/jimmyxu/chnroutes">chnroutes</a> 。chnroutes 通过 ip 配置实现 VPN 分流，减轻 VPN 负担，提高国内网站的访问速度。具体做法貌似是设置用 VPN 传输所有网络流量，但是会<strong>使用 route 命令将一些 ip 地址路由到非 VPN  线路的网关上</strong>。</p>

<h2 id="section-6">闪光点</h2>

<ul>
  <li>配置灵活，可以为单个软件提供代理服务，特别是<strong>当该软件不提供代理设置的时候</strong>很有用。</li>
</ul>

<h2 id="section-7">缺点</h2>

<p>其实我很想寻找一款能够<strong>指定某个应用是否使用 VPN 进行联网</strong>的软件，在我并不清楚该应用可能访问的 ip 范围的时候，chnroutes 难以提供帮助，而 Proxifier 显然也没法满足这种需求……</p>

<p>一种做法是，在个人服务器/云主机上配置 VPN 和 chnroutes，在笔记本上使用 Proxifier 连接该 socks 代理，并配置相关应用程序的访问行为。</p>

<p>2015.1.2 补充：在 <a href="http://www.weibo.com/1883627565">@连城404</a> 的 <a href="http://www.weibo.com/1883627565/BDFuZ9dX0">微博</a> 上看到他就是这种做法，用 SSH 隧道连接。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/">http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014 面试终结篇]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/"/>
    <updated>2014-12-24T18:41:55+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang</id>
    <content type="html"><![CDATA[<p>谨以此文作为过去一年求职经历的回顾，此后不再撰写相关内容。</p>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/timeline/js/storyjs-embed.js"></script>

<script>
	$(document).ready(function() {
		createStoryJS({
		type:		'timeline',
		width:		'100%',
		height:		'700',
		source:		'/json/qiuzhi2014.json',
		font:		'my',
		embed_id:	'my-timeline'
		});
	});
</script>

<div id="my-timeline" style="opacity: 0.7;"></div>

<p><br /></p>

<!-- excerpt start -->

<p>2014 年，也就这么磕磕绊绊的走过来了，对行业的了解在深入，对自己的不足也认识得更清楚。</p>

<p>内推期间的连续碰壁不免让人心灰意冷，但更值得反复回味、总结反思。了解业界的需求，在此基础上为自己安排知识、技能方面的学习、训练，辅之以面试技巧的归纳，逐渐就会在之后的面试中看到进步与提升。当然，单纯为面试而准备的知识可能很快就会遗忘，所以<strong>一开始就要抱有长久打算</strong>，要对自己的工作前途负责，而不仅仅定位为面试准备。</p>

<p>找工作到最后感觉和考大学挺像的</p>

<ul>
  <li>牛翻天了也只能上一所大学；</li>
  <li>并不是最牛的大学才有成才机会；</li>
  <li>牛逼大学混日子出来也是渣渣；</li>
  <li>牛逼大学能给你能力背书，真实能力还得靠你自己提升。</li>
</ul>

<hr />

<p>最后，要对求职季里给予过我帮助的人道声感谢。</p>

<p>感谢靖世、晗导、小强、侯导为代表的实验室师兄的大力支持，不厌其烦地解答我在求职中的疑惑；</p>

<p>感谢杨焜师兄在实习期间的指导，也一并感谢其他团队成员对我的帮助；</p>

<p>感谢喻川、闫成哲，毕业季的讨论交流让我受益良多。</p>

<p><br /></p>

<p>感谢宜信 Joyce Zhang 女士和魏旋学长，</p>

<p>感谢 FreeWheel 的王迪学长和吴頔先生，</p>

<p>感谢 IBM CRL 的金锋、田启明学长，</p>

<p>感谢猿题库的郭常圳、邓澍军老师，</p>

<p>感谢揽胜科技的诸葛越女士，</p>

<p>感谢他们在面试中及之后给予我的无私关照，与他们的交流让我学到很多。</p>

<p><br /></p>

<p>2014 是<strong>焦虑中带着美好</strong>的一年，我会记得它。</p>

<p><br /></p>

<p>附面试分享 PPT <a href="http://frank19900731.github.io/downloads/file/Tips.pdf">下载</a></p>

<!-- excerpt end -->

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/">http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数说 2014]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/"/>
    <updated>2014-12-23T01:31:29+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">写在前面</a></li>
  <li><a href="#section-1">邮件</a></li>
  <li><a href="#section-2">应用程序</a></li>
  <li><a href="#section-3">网页访问</a></li>
  <li><a href="#section-4">网络流量</a></li>
  <li><a href="#section-5">看过18部电影</a></li>
  <li><a href="#section-6">玩过3款游戏</a></li>
  <li><a href="#section-7">追过9部视频</a></li>
  <li><a href="#section-8">完整读过0本纸版书</a></li>
  <li><a href="#section-9">写了33篇博客</a></li>
  <li><a href="#section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</a></li>
  <li><a href="#section-11">参与报告/讲座/会议20场</a></li>
  <li><a href="#section-12">添置了6个设备</a></li>
  <li><a href="#section-13">参加54场面试，7场笔试</a></li>
  <li><a href="#section-14">其它</a></li>
  <li><a href="#section-15">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">写在前面</h2>

<p>打小对数字和总结有感情，所以就有了这篇 《数说 2014》。</p>

<p><strong>数据不能告诉你全部，但数据对真实情况的刻画比你自以为的更客观</strong>。</p>

<blockquote><p>数据可能给你当头棒喝，因为你在某些方面乏善可陈；</p><p>数据可能让你羞愧难当，因为它拆穿了你的自以为是；</p><p>数据可能令你懊悔不已，因为你看到了大把时间的浪费。</p></blockquote>

<p><strong>希望在年末的细细回望，能督促自己在新的一年里过得更加充实，像个年轻人应该有的样子</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">邮件</h2>

<p>2014 年邮件往来一万余封。</p>

<p>发送方面，126 邮箱（Frank）发出 926 封，gamil 邮箱（宋成儒）发出 255封，负责维护的博士生论坛邮箱（Forum）发出 298 封。</p>

<p>接收方面，数量靠前的，除了讨厌的广告、推荐（好东西传送门还是很赞的，CSDN 偶尔赞），只剩下四个个人账号。</p>

<ul>
  <li>刘新益老师负责就业，发了很多就业相关的信息；</li>
  <li>黄海燕老师在系办负责研究生相关的工作，信息比较杂。</li>
  <li>花隽芃是上任系研会主席，陈苏是上任研会学术副主席，俺作为上任学术助理协助他俩儿举办了清华大学第 366 期博士生论坛，想想也是颇感慨的。</li>
</ul>

<p>具体收发统计如下（图表数据来自 <a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">Chronories</a>，由 <a href="http://www.chartjs.org/">Chart.js</a> 生成，下同）。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="mail-from-legend" style="text-align: left;"></div>
   <canvas id="mail-from" style="margin-top: 20px;"></canvas>
</div>

<p>下图是分时段的收信量统计，看来应该<strong>多在中午十二点和下午六点查收/删除邮件</strong>，感觉是一句废话。</p>

<canvas id="mail-session"></canvas>

<h2 id="section-2">应用程序</h2>

<p>2014 年全年应用程序使用情况统计如下，单位是小时。Launched 表示软件打开（在内存中驻留吧），Active 表示软件使用（获得输入焦点吧）。</p>

<div style="position: relative; width: 100%; margin-bottom: 10px;">
   <canvas id="application-2014"></canvas>
   <div id="application-2014-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>稍作分析</p>

<ul>
  <li>因为 Finder 在系统中始终处于 Launched 状态，所以粗略估计 <strong>2014 年电脑开机时间超过 180 天</strong>；</li>
  <li>Chrome 使用时间远远领先于其它软件，达到 50 天，<strong>结合下节网页访问的统计，不少时间浪费在社交媒体和视频网站上了</strong>。</li>
  <li>开着不用的典型软件是 Google Chrome、Mail、ZOC、Evernote、WeChat、OmniFocus。</li>
  <li>QSanguosha 就是太阳神三国杀，作为唯一一款游戏软件<strong>赫然在列</strong>。</li>
</ul>

<p>其中一些软件是从下半年开始使用的，所以为了更接近目前的状况，还统计了 2014 年下半年应用程序使用情况。</p>

<div style="position: relative;">
   <canvas id="application-2014-half"></canvas>
   <div id="application-2014-half-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>Ulysses、ByWord 使用时间占比增加，Evernote 已经看不见了。</p>

<p><strong>明年希望看到阅读类、笔记类和编程类软件的使用时间有较大提高</strong>。</p>

<h2 id="section-3">网页访问</h2>

<p>域名访问量统计，非一级域名。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="websites-legend" style="text-align: left;"></div>
   <canvas id="websites" style="margin-top: 20px;"></canvas>
</div>

<ul>
  <li>百度访问次数 23316 次还是让我很惊讶的，Google 访问次数是 8605 次。相比与 Google 的专业性，百度的快或许更实用，使用 Google 的场景，<strong>一种是预感肯定百度不到想要结果，另一种是确实没百度到想要的结果</strong>；</li>
  <li>微博（包括 t.cn，绝大部分是从微博来的）、人人（我真心不觉得有这么多访问，但事实就是如此）、优酷，是三大时间吸血鬼，这还不算上移动端的访问；</li>
  <li>localhost 访问次数多是因为有本地调试和本地 Wiki；</li>
  <li>百度百科、github 访问次数排名尚可，略感欣慰。</li>
</ul>

<p><strong>明年，人人、优酷还是算了吧，没什么营养，微博多用客户端，只关注有价值的分组</strong>。</p>

<h2 id="section-4">网络流量</h2>

<p>清华特色网络流量统计，数据来自清华大学校园网，单位 G。</p>

<div style="position: relative; margin-bottom: 10px;">
   <canvas id="network"></canvas>
   <div id="network-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>近来网络访问有些猖獗，没营养又三俗的节目就别看了，<strong>浪费流量事小，浪费生命事大</strong>。</p>

<p>补一句，毕业了最不留恋的就是学校的网络。</p>

<h2 id="section-5">看过18部电影</h2>

<p>对科幻影片依旧无兴趣，没看过欧美电影，也没看过美剧！</p>

<p>喜欢国产写实影片，以及日本虐心片。</p>

<ul>
  <li><a href="http://movie.douban.com/subject/25779218/">匆匆那年（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/24695611/">北平无战事</a></li>
  <li><a href="http://movie.douban.com/subject/24879858/">分手大师</a></li>
  <li><a href="http://movie.douban.com/subject/25805741/">后会无期</a></li>
  <li><a href="http://movie.douban.com/subject/25798222/">亲爱的</a></li>
  <li><a href="http://movie.douban.com/subject/25717233/">心花路放</a></li>
  <li><a href="http://movie.douban.com/subject/10545939/">黄金时代</a></li>
  <li><a href="http://movie.douban.com/subject/24743711/">催眠大师</a></li>
  <li><a href="http://movie.douban.com/subject/3732800/">我们天上见</a></li>
  <li><a href="http://movie.douban.com/subject/3036997/">立春</a></li>
  <li><a href="http://movie.douban.com/subject/4268598/">告白</a></li>
  <li><a href="http://movie.douban.com/subject/1292444/">大逃杀</a></li>
  <li><a href="http://movie.douban.com/subject/24843198/">同桌的你</a></li>
  <li><a href="http://movie.douban.com/subject/24736566/">北京爱情故事（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/1756073/">我们俩</a></li>
  <li><a href="http://movie.douban.com/subject/1293323/">大红灯笼高高挂</a></li>
  <li><a href="http://movie.douban.com/subject/24735062/">青春派</a></li>
  <li><a href="http://movie.douban.com/subject/1291858/">鬼子来了</a></li>
</ul>

<h2 id="section-6">玩过3款游戏</h2>

<ul>
  <li>太阳神三国杀</li>
  <li>千军破2</li>
  <li>影之刃</li>
</ul>

<p>影之刃、千军破2 都是为了网易游戏面试玩的，太阳神三国杀纯消磨时光。太阳神三国杀的 Mac 端那叫一个渣，顺手、过拆就能让程序崩溃，始终无人维护。即便如此，我还玩得挺嗨，也是服了自己。</p>

<p><strong>本年度手机端只有影之刃一款游戏，Mac 端只有太阳神三国杀一款，均已卸载，千军破2 已停玩，望继续保持</strong>。</p>

<h2 id="section-7">追过9部视频</h2>

<ul>
  <li>晓松奇谈（周五）</li>
  <li>罗辑思维（周五）</li>
  <li>鸿观（周五）</li>
  <li>相征（周四）</li>
  <li>都嘟（周三、周六）</li>
  <li>奇葩说（周六、周日）</li>
  <li>历代经济变革得失</li>
  <li>万万没想到、报告老板</li>
  <li><a href="http://i.youku.com/u/UMTE3Njc4ODM2">张坤解说三国杀</a>（不定）</li>
</ul>

<p>看三国杀解说是最无脑的放松方式，虽然我已经多年不上 Online 实操，<strong>明年要戒掉平时的，只看周末娱乐</strong>。</p>

<h2 id="section-8">完整读过0本纸版书</h2>

<p>回想一下好像确实是这样。</p>

<ul>
  <li>到图书馆借书主要是为参阅章节，比如《具体数学》，<strong>特别缺乏系统性学习</strong>；</li>
  <li>今年本身买书就很少，有电子书则不会购买纸质书，主要是考虑到快毕业了，减轻搬家负担；</li>
  <li>读了很多技术教程、博客，人文类书籍阅读很少。</li>
</ul>

<blockquote><p>书读得少人就容易浮躁，视频看得多人就容易浮夸。</p></blockquote>

<p><strong>毕业了就不能以学生身份为借口，何况岁数也不小了，明年要踏踏实实在书籍阅读上给自己做一点规划</strong>。</p>

<h2 id="section-9">写了33篇博客</h2>

<p>新浪博客两篇</p>

<ul>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">Mac实用软件及功能吐血总结</a></li>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10102uwjo.html">word2vec代码注释</a></li>
</ul>

<p>Github 的博客 31 篇</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/08/24/wo-de-di-yi-pian-octopress-bo-ke/">我的第一篇 Octopress 博客</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/09/01/2015nian-xiao-zhao-ru-kou/">2015年校招入口</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/">提高效率与情趣的九种程序工具推荐</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/octopress-gai-zao-ji-lu/">Octopress 改造记录</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/yosemite-sheng-ji-ji-hou-xu/">Yosemite 升级及后续</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/">飞维美地笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/">IDG 联合招聘笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/">记某游戏公司面试经历</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的知识管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/25/qiu-zhi-ji-de-yi-dian-jing-yan-zhi-tan/">求职季的一点经验之谈</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/27/wo-de-shi-jian-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的时间管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">面试经验分享之机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">面试经验分享之智力题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/">一个工具控的效率观</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/18/mian-shi-jing-yan-fen-xiang-zhi-shu-ju-jie-gou-suan-fa-fen-xiang/">面试经验分享之数据结构、算法题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/20/pocket-lei-mu-biao-qian-de-zhi-ding/">Pocket 类目标签的制订</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/">2014 年百度、腾讯与搜狐的校招笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/23/open-workshop-scalacong-ling-dao-ru-men-ke-tang-bi-ji/">《Open Workshop — Scala 从零到入门》课堂笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">面试经验分享之编程语言题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/">面试经验分享四篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/">《测试驱动开发和函数式编程》在线演示</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/">Matrix67 博客中智力题粗分类</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/">若干有用有趣的网站</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/">DIY Deep Learning for Vision: A Tutorial with Caffe 报告笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/">微博卡片 — 微博收藏的可视化</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">每周一软之日记软件 Chronories</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/">Wunderlist 添加快捷键启动</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">每周一软之 Markdown 笔记软件 Ulysses III</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/">数说 2014</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/">2014 面试终结篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/">每周一软之 Proxifier</a></li>
</ul>

<p><strong>明年希望继续减少无病呻吟，保证一周1-2篇。缩短博客撰写时间，书面化的弊端就是耽于形式</strong>。</p>

<h2 id="section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</h2>

<p>8月11日那周开始写周报，8月末开始写月报，就是在周/月末抽半小时，对照任务管理软件梳理本周/月事项，总结得失，提出下阶段目标。现在回头翻看，说给自己听的鸡汤、对自己提出的批评、骂人/感谢的话等等，都鲜活还原了记录时的场景……</p>

<p>周报、月报对自己而言有三点好处</p>

<ul>
  <li>及时总结，快速调整状态；</li>
  <li><strong>机械、规律的行为，让工作、生活体现出阶段性，这阶段感是我从研究生不再上课以来一直求而不得的，阶段感带来紧张性，有助于避免拖延</strong>；</li>
  <li>汇集成一份完整、真实的年度总结，从中可以看到自己的成长、发现缺点不足，真心不是年底才想写就能够写出来的。</li>
</ul>

<p>10月13日制定日常任务完成度打分表并开始执行，目前每天在50分左右徘徊，明年应该会有大修订，并<strong>争取更高的完成度</strong>。</p>

<p>根据周报、月报的记录，自己这一年<strong>在加强运动、规律作息方面做的最差</strong>，特别是进入冬季以后。要向6月到8月的表现看齐，早七点半、晚十一点半，上班后应该就能做到吧。</p>

<h2 id="section-11">参与报告/讲座/会议20场</h2>

<ul>
  <li>Randomized Methods in Big Data Analytics, Ping Ma</li>
  <li>阿里图像搜索分享，雷音</li>
  <li>ICML 2014</li>
  <li>Statistical Learning Theory, Jerry Zhu</li>
  <li>CCF ADL-46 机器学习</li>
  <li>The Future of Mobile Computing, Hedy Lamarr</li>
  <li>Deep Learning in Object Detection, Segmentation, and Recognition, Xiaogang Wang</li>
  <li>Imaging Arithmetic Physics U Math &gt; Physics + Math, Gaurav Sharma</li>
  <li>Making the Impossible Possible Randomized Machine Learning Algorithms for Big Data, Rong Jin</li>
  <li>移动互联网时代的大数据挖掘技术研讨会，三星</li>
  <li>DIY Deep Learning for Vision: A Tutorial with Caffe</li>
  <li>Scaling Deep Learning, Jeaf Dean</li>
  <li>百度、阿里深度学习碰撞，余凯、漆远 </li>
  <li>百度技术沙龙53期，基于大数据的预测实践</li>
  <li>无穷沙龙 互联网泡沫真的来了吗</li>
  <li>无穷沙龙 走近 HTML5 的应用生态</li>
  <li>FreeWheel 技术分享，王迪</li>
  <li>万花筒活动: 测试驱动开发和函数式编程，姚若舟</li>
  <li>Open Workshop — Scala 从零到入门，吴雪峰</li>
  <li>码农大会 Spark 分享，连城</li>
</ul>

<p>如果听的时候热血沸腾，散场了就忘了个干净，那真的就是浪费了时间，不如不去。所以参加报告/讲座/会议一定要注意三点</p>

<ul>
  <li>认真听、认真记，不要指望自己会再听一遍录音/看一遍录像；</li>
  <li><strong>带着问题听，积极提问</strong>；</li>
  <li><strong>务必在当天查一查在听讲中遇到的陌生技术与概念，考虑是否可以为己所用</strong>。</li>
</ul>

<h2 id="section-12">添置了6个设备</h2>

<ul>
  <li>希捷 4T 移动硬盘，快毕业了，赶紧从北邮人、六维扒东西；</li>
  <li>三星 1T SSD，血本效率投资，还是很值的；</li>
  <li>Apple Magic Trackpad，基本没用;</li>
  <li>Wacom 数位板，写公式、画草图很实用；</li>
  <li>红米 Note，与中国移动携手保障了求职季里的通信畅通；</li>
  <li>小米手环，当闹钟用很实在。</li>
</ul>

<h2 id="section-13">参加54场面试，7场笔试</h2>

<p>其中实习面试 5 面，求职面试 49 面（电面 5 面）。</p>

<p>面试大部分集中在 9、10 月份，从八月初开始准备。一个自认为比较好也比较推荐的习惯是，<strong>在笔试、面试过后立刻回忆内容，针对弱点和错误进行学习完善</strong>。我的一般做法是从面试地点出来后用手机录制自己的快速复述，并务必在当年做书面化整理。</p>

<h2 id="section-14">其它</h2>

<ul>
  <li>运动健康统计缺乏数据，期待小米手环能开放 API；</li>
  <li>阅读论文篇数、写代码行数未知，明年要做规范的整理和统计，不是说越多越好，而是要用心积累；</li>
  <li>和父母的联系次数很多，和父母呆在一起的天数很少，想想就要工作了，可以拿来陪父母的时间又少了，不免伤感。</li>
</ul>

<h2 id="section-15">总结</h2>

<p>2014年，自己最深刻的一个感受是自身想法、观念变化越来越快，因为即将面临的是人生很重要的过渡期——从读书到工作。有压力，才会逼迫自己去思考之前懒得思考的问题。随着经验的累积、信息的收集与分析、和他人沟通讨论的深入，逐渐在自己身上发现了一些可喜的变化。不夸张地说，有时候回头看一个月前的自己，都会觉得幼稚可笑。</p>

<p><strong>有方向的忙碌才是充实</strong>，庆幸自己在2014年即将结束的时候，似乎找到了自己的方向，而属于2014年的诸多遗憾，希望在新的一年一一实现。</p>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/Chart.js"></script>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/mychart.js"></script>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/">http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之 Markdown 笔记软件 Ulysses III]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/"/>
    <updated>2014-12-21T11:08:22+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">功能介绍</a></li>
  <li><a href="#section-2">界面设计</a></li>
  <li><a href="#section-3">易用性</a></li>
  <li><a href="#section-4">稳定性</a></li>
  <li><a href="#section-5">跨平台</a></li>
  <li><a href="#section-6">类似软件</a>    <ul>
      <li><a href="#markdown-">Markdown 类软件</a>        <ul>
          <li><a href="#section-7">文档查看类</a></li>
          <li><a href="#section-8">文档编辑类</a></li>
          <li><a href="#section-9">文档管理类</a></li>
        </ul>
      </li>
      <li><a href="#markdown--1">非 Markdown 类软件</a></li>
    </ul>
  </li>
  <li><a href="#section-10">闪光点</a></li>
  <li><a href="#section-11">缺点</a>    <ul>
      <li><a href="#section-12">方案一</a></li>
      <li><a href="#section-13">方案二</a></li>
    </ul>
  </li>
</ul>

<h2 id="section">前言</h2>

<!-- excerpt start -->

<p>Ulysses III （下称 Ulysses）是一款 Markdown 笔记软件，五月份相识，暑假频繁接触，现已如胶似漆。根据 Chronories 的统计，2014年本人对 <a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">Ulysses 的使用率仅次于 Chrome</a>，位列第二。</p>

<p>Ulysses 是 AppStore 的 <strong>Best of 2013</strong> 之一，目前全球累计300多条评分，平均是四星半，可以从其漂亮的 <a href="http://www.ulyssesapp.com/">官方网站</a> 上获得概要介绍。</p>

<p>Ulysses 在中国市场售价 237 软妹币，可以从官网下载 Demo 试用，也可以到 <a href="http://www.macgg.com/archives/category/mac%E8%BD%AF%E4%BB%B6">MacGG</a> 下载（你懂得），不过不是最新版本。考虑到 Ulysses 对自己这一年的成长帮助确实大，将来也很可能长期使用，狠狠心，买了作为送给自己的新年礼物了……虽然 AppStore 页面内容加载慢，扣费那可真叫一个快，前脚输入 Apple 账号密码，后脚信用卡扣费通知就到了，<strong>没有任何菊花延迟</strong>！</p>

<p>言归正传，还是分八个方面加以分析，重点在 <a href="#section-6">类似软件</a>。</p>

<!-- excerpt end -->

<h2 id="section-1">功能介绍</h2>

<p>市面上 Markdown 笔记软件主要有三种功能，<code>笔记查看</code>、<code>文本编辑</code>、<code>文档管理</code>，Ulysses 是综合了这三种功能的工具。</p>

<p>在之前的 <a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/#section-3">博客</a> 里也提到了，Ulysses 是三列模式，可以添加任意深度的目录结构，非常适合知识体系管理、长文档撰写等任务。在我看来，这是其优于 Evernote 的最重要一点。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/4.jpg" class="img-up" title="Ulysses 三列模式"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/4.jpg" width="80%" title="Ulysses 三列模式" /></a></p>

<p>Ulysses 支持丰富的 Markdown 标签，包括粗体、斜体、删除、脚注、代码块、引用、列表、标记、图片、视频等。然而，Ulysses <strong>不支持代码高亮、表格和公式输入这三大功能</strong>，也不支持目录生成，目前有些<strong>变通的解决方案，下文会提到</strong>，但还是期待软件作者能够在今后的版本中添加支持。</p>

<p>之所以说 Ulysses 是一个极佳的知识管理、写作软件，还因为它提供如下功能</p>

<ul>
  <li>丰富的导出格式，包括 HTML、ePub、PDF、RTF、Word、PlainText 以及发送到邮件，并有 <a href="http://styles.ulyssesapp.com/">模板支持</a>；</li>
  <li>支持新窗口编辑，也可以快速用其它软件打开文档；</li>
  <li>支持收藏与<strong>过滤器</strong>（相当于一个逻辑分组），提供多维的文档归类方式；</li>
  <li>提供丰富统计信息，包括字、词、句、段落、页数，以及预计阅读时间；</li>
  <li>支持为每篇文档添加笔记、关键词、图片附件；</li>
  <li>支持写作目标设定，比如当前文档至少要写满2000字符；</li>
  <li>搜索范围灵活，包括<strong>组内搜索、本地搜索和 Library</strong> （包括本地、iCloud端 和 Daedalus端）<strong>搜索</strong>。</li>
  <li>提供 Menu Bar，便于标记的输入；</li>
  <li>支持 Typewriter 模式，可以高亮当前行、显示段落总数；</li>
  <li>支持文档预览、排序和编辑日期显示；</li>
  <li>支持文档粘接（粘接后也可反操作），使文档可以模块化组合；</li>
  <li>支持<strong>文档版本保存、还原</strong>，界面功能都类似于 Timemachine。</li>
</ul>

<p>一款写作软件都支持到版本保存了，其功能的细致、人性化程度我想也就不用再多说什么了……</p>

<h2 id="section-2">界面设计</h2>

<p><strong>素美人，简约不简单</strong>。</p>

<p>主界面分为三列，编辑区外的两列可以分别隐藏，让你在内容与结构间从容切换。</p>

<p>软件主题、编辑器主题都支持自由定制，<strong>淡妆浓抹总相宜</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/39.png" class="img-up" title="Ulysses 定制"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/39.png" width="60%" title="Ulysses 定制" /></a></p>

<p>全屏模式尽显低调内涵，参加课程讲座，<strong>边听边记，无往不利</strong>。不少坐在我附近的童鞋都会问我，你用的这是啥软件。当然，如果 Ulysses 能内置支持录音（目前自己用的是 Pear Note），那就更完美了。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/38.png" class="img-up" title="Ulysses 全屏模式"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/38.png" width="80%" title="Ulysses 全屏模式" /></a></p>

<p>有时候自己会 YY，如果大一的时候我就用的是 Mac，如果大一的时候就有 Stackoverflow、Coursera、Ulysses 等牛逼的资源、工具，那该有多幸福啊……只可惜我们能够把握的只有当下，知道了前进方向并出发应该就还不算晚，也希望通过自己的一点分享给后来人一点帮助。</p>

<h2 id="section-3">易用性</h2>

<p>傻瓜软件，预置说明文档。把能点的按钮都点一遍，也就清楚所有功能了……</p>

<h2 id="section-4">稳定性</h2>

<p>1.0.* 版本使用时出现过强杀假死导致文件名丢失的错误，现在用到 1.2.2，没再出现这样的问题。</p>

<p>如果文档数量很多，软件启动会变慢，过滤器搜索过程可能会卡，<strong>最好能够将搜索词一次性粘贴进去，而不是逐个字母输入</strong>。</p>

<p>目前看来软件原因造成文档丢失的可能性不大，但必要的备份还是要做的，文档存储路径是 <code>~/Library/Containers/com.soulmen.ulysses3/Data/Documents/Library</code>。</p>

<h2 id="section-5">跨平台</h2>

<p>不支持 Windows、Linux。</p>

<p>Ulysses 支持 iCloud 同步和 Daedalus 同步，后者是 iOS 上的一个文本编辑客户端。</p>

<p>麻烦的是，如果想将本地的文件夹同步到 Daedalus，不能简单的拖拽或者复制粘贴，需要手动克隆。一个好的习惯是，把需要同步阅读的文件夹创建在 Daedalus 下。一个巧办法是，直接操作 Finder 里的目录结构，ulgroup 后缀文件中标明了目录名称。</p>

<h2 id="section-6">类似软件</h2>

<h3 id="markdown-">Markdown 类软件</h3>

<h4 id="section-7">文档查看类</h4>

<ul>
  <li><code>Marboo</code>
    <ul>
      <li>功能繁多，集成了 remark.js、emacs-org、csv、photo、vectab（曲谱）、reStructuredText、压缩文件（zip、tar.gz）等，佩服作者对于如此多工具的掌握，不过缺乏专为写作考虑的设计；</li>
    </ul>
  </li>
  <li><code>Marked2</code>
    <ul>
      <li>支持精细的定制和检测
        <ul>
          <li>验证文档中链接的有效性；</li>
          <li>Markdown 语法错误检查；</li>
          <li>详细的统计信息，包括复杂词比例、可读性评分；</li>
          <li>支持 MultiMarkdown、Discount 两种解析器；</li>
          <li>支持 MathJax；</li>
          <li>支持 CriticMarkup，跟踪文档修改；</li>
          <li>支持丰富的导出格式；</li>
          <li>集成了 <strong>Web Inspector</strong>，这是要弄啥类；</li>
          <li>……</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>总的来说推荐 Marked2。</p>

<h4 id="section-8">文档编辑类</h4>

<p>文档编辑类注重<strong>写作体验</strong>，一般就是个大白框，全屏体验佳，适合写博客等。</p>

<ul>
  <li><code>马克飞象</code> 
    <ul>
      <li>支持Evernote，同步性好；</li>
      <li>内生支持代码高亮、公式、图表；</li>
      <li>按年收费；</li>
    </ul>
  </li>
  <li><code>Erato、WriteRoom</code>
    <ul>
      <li>一般般；</li>
    </ul>
  </li>
  <li><code>ByWord</code>
    <ul>
      <li>支持 <strong>Paragraph Focus、Line Focus</strong>，让人写起来舒服；</li>
      <li>支持 Typewriter 模式；</li>
      <li>高级版支持发布到 WordPress、Evernote 等；</li>
    </ul>
  </li>
  <li><code>iA Writer Pro</code>
    <ul>
      <li>支持语法分析，标记名词、动词、副词、连词等，对我来说是没啥用；</li>
      <li>支持只读模式；</li>
    </ul>
  </li>
  <li><code>iA Writer</code> 
    <ul>
      <li>Focus Mode，玻璃纸效果，略丑；</li>
    </ul>
  </li>
  <li><code>Typed</code>
    <ul>
      <li><strong>Zen Mode （禅模式）</strong>，<strong>进入全屏，半透明效果，播放灵动的轻音乐</strong>，有点类似于Relax Melodies；</li>
      <li>界面设计优雅；</li>
    </ul>
  </li>
  <li><code>Texts</code>、<code>Haroopad</code>
    <ul>
      <li><strong>内生支持代码高亮、公式、图表，适合科研、工程人员写作</strong>；</li>
      <li><strong>后者免费</strong>；</li>
    </ul>
  </li>
  <li><code>MacDown</code>，由 <a href="http://weibo.com/dinosaurliu">@永不停息的恐龙哥</a> 推荐
    <ul>
      <li><strong>内生支持代码高亮、公式</strong>，关键是 <a href="https://github.com/uranusjr/macdown">开源</a>；</li>
    </ul>
  </li>
  <li><code>Mou</code> 
    <ul>
      <li>支持 Tumblr 和 Scriptogr.am 发布；</li>
      <li>可模拟打字机的按键声音，喜好因人而异吧；</li>
      <li>内生支持公式。</li>
    </ul>
  </li>
</ul>

<p>总的来说，<strong>文艺青年推荐 Byword、Typed</strong>，<strong>技术青年推荐 Haroopad、MacDown</strong>。</p>

<h4 id="section-9">文档管理类</h4>

<p>目前接触到的主要有五个，<code>Ulysses</code>、<code>Gitbook</code>、<code>Write</code>、<code>Quiver</code>、<code>Notebooks</code>，由于 Notebooks 基本上就是 Ulysses 的子集，所以只讨论前四个，<strong>功能支持仅指原生支持</strong>。</p>

<p>下表向右滚动还有内容。</p>

<div class="foo">
  <table>
    <thead>
      <tr>
        <th style="text-align: left">名称</th>
        <th style="text-align: center">公式</th>
        <th style="text-align: center">表格</th>
        <th style="text-align: center">代码块</th>
        <th style="text-align: center">代码高亮</th>
        <th style="text-align: center">同步</th>
        <th style="text-align: center">界面设计</th>
        <th style="text-align: center">主题定制性</th>
        <th style="text-align: center">三列模式</th>
        <th style="text-align: left">特色</th>
        <th style="text-align: left">缺点</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td style="text-align: left">Write</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">Write App</td>
        <td style="text-align: center">精美</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: left">支持 Ftp、Tumblr、WordPress 账号发布</td>
        <td style="text-align: left">专业性差，不适合科研、工程党</td>
      </tr>
      <tr>
        <td style="text-align: left">Gitbook</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">类 Github</td>
        <td style="text-align: center">一般</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">是</td>
        <td style="text-align: left">丰富的导出格式，精美电子书，PC、移动端通吃，便于分享</td>
        <td style="text-align: left">内容要公开，样式单一</td>
      </tr>
      <tr>
        <td style="text-align: left">Quiver</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">Dropbox</td>
        <td style="text-align: center">一般</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">否</td>
        <td style="text-align: left">支持四种 cell，text、latex、markdown、code，文档可看性强</td>
        <td style="text-align: left">结构扁平，同 Evernote</td>
      </tr>
      <tr>
        <td style="text-align: left">Ulysses</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">否</td>
        <td style="text-align: center">Daedalus</td>
        <td style="text-align: center">典雅</td>
        <td style="text-align: center">是</td>
        <td style="text-align: center">是</td>
        <td style="text-align: left">-</td>
        <td style="text-align: left">-</td>
      </tr>
    </tbody>
  </table>

</div>

<h3 id="markdown--1">非 Markdown 类软件</h3>

<ul>
  <li><code>Outline</code>，类似于 <code>OneNote</code>；</li>
  <li><code>Evernote</code> / <code>YoudaoNote</code> / <code>WizNote</code>；</li>
  <li><code>Emacs-org</code>；</li>
  <li><code>Blogo</code>，对 WordPress 博客提供良好支持；</li>
  <li><code>Wiki</code>，适用于 cross-reference 较多的场景。</li>
</ul>

<h2 id="section-10">闪光点</h2>

<ul>
  <li>优雅界面，特别是全屏模式；</li>
  <li>三列组织模式；</li>
  <li>文件版本快照；</li>
  <li>过滤器组织方式；</li>
  <li>丰富的导出格式以及样式模板。</li>
</ul>

<h2 id="section-11">缺点</h2>

<ul>
  <li>不支持文件夹的直接复制拷贝；</li>
  <li>不支持文档的 cross-reference，写书/教程很需要，这一点 wiki、gitbook 做的很好；</li>
  <li>没有内生支持公式、表格、代码高亮。</li>
</ul>

<p>对于最后一个缺点，我们之前提到有变通解决方案。</p>

<h3 id="section-12">方案一</h3>

<p>Ulysses 编写，采用其他软件解析、编译及导出，一个绝佳选择是 Marked2。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/40.png" class="img-up" title="导出到 Marked2"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/40.png" width="30%" title="导出到 Marked2" /></a></p>

<h3 id="section-13">方案二</h3>

<p>Ulysses 支持 Raw Source 输入，也就是说我们可以<strong>借助于 javascript 插件完成任务</strong>（如果 js 文件不在本地，则渲染需要联网），在文档前部安放 javascript 头即可。</p>

<p><strong>借助 jQuery、MathJax 实现公式输入</strong>。~~表示 Raw Source，也即 Ulysses 本身不对其做解析。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>公式支持</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">## Equations
</span><span class="line">~~<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/x-mathjax-config&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="o">~~</span>     <span class="nx">MathJax</span><span class="p">.</span><span class="nx">Hub</span><span class="p">.</span><span class="nx">Config</span><span class="p">({</span>
</span><span class="line"><span class="o">~~</span>       <span class="nx">jax</span><span class="o">:</span> <span class="p">[</span><span class="s2">&quot;input/TeX&quot;</span><span class="p">,</span> <span class="s2">&quot;output/HTML-CSS&quot;</span><span class="p">],</span>
</span><span class="line"><span class="o">~~</span>       <span class="nx">tex2jax</span><span class="o">:</span> <span class="p">{</span>
</span><span class="line"><span class="o">~~</span>         <span class="nx">inlineMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$&#39;</span><span class="p">,</span> <span class="s1">&#39;$&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s2">&quot;\\(&quot;</span><span class="p">,</span> <span class="s2">&quot;\\)&quot;</span><span class="p">]</span> <span class="p">],</span>
</span><span class="line"><span class="o">~~</span>         <span class="nx">displayMath</span><span class="o">:</span> <span class="p">[</span> <span class="p">[</span><span class="s1">&#39;$$&#39;</span><span class="p">,</span> <span class="s1">&#39;$$&#39;</span><span class="p">],</span> <span class="p">[</span><span class="s2">&quot;\\[&quot;</span><span class="p">,</span> <span class="s2">&quot;\\]&quot;</span><span class="p">]</span> <span class="p">],</span>
</span><span class="line"><span class="o">~~</span>         <span class="nx">processEscapes</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line"><span class="o">~~</span>         <span class="nx">skipTags</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;script&#39;</span><span class="p">,</span> <span class="s1">&#39;noscript&#39;</span><span class="p">,</span> <span class="s1">&#39;style&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">,</span> <span class="s1">&#39;pre&#39;</span><span class="p">,</span> <span class="s1">&#39;code&#39;</span><span class="p">]</span>
</span><span class="line"><span class="o">~~</span>       <span class="p">}</span>
</span><span class="line"><span class="o">~~</span>     <span class="p">});</span>
</span><span class="line"><span class="o">~~</span>
</span><span class="line"><span class="o">~~</span>     <span class="kd">function</span> <span class="nx">addBlankTargetForLinks</span> <span class="p">()</span> <span class="p">{</span>
</span><span class="line"><span class="o">~~</span>       <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;a[href^=&quot;http&quot;]&#39;</span><span class="p">).</span><span class="nx">each</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line"><span class="o">~~</span>         <span class="nx">$</span><span class="p">(</span><span class="k">this</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s1">&#39;target&#39;</span><span class="p">,</span> <span class="s1">&#39;_blank&#39;</span><span class="p">);</span>
</span><span class="line"><span class="o">~~</span>       <span class="p">});</span>
</span><span class="line"><span class="o">~~</span>     <span class="p">}</span>
</span><span class="line"><span class="o">~~</span>
</span><span class="line"><span class="o">~~</span>     <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s1">&#39;DOMNodeInserted&#39;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line"><span class="o">~~</span>       <span class="nx">addBlankTargetForLinks</span><span class="p">();</span>
</span><span class="line"><span class="o">~~</span>     <span class="p">});</span>
</span><span class="line"><span class="o">~~</span>
</span><span class="line"><span class="o">~~</span> <span class="nt">&lt;/script&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://libs.baidu.com/jquery/1.9.1/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;</span> <span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">
</span><span class="line">~~ <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;math/tex&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="o">~~</span> <span class="nx">a</span><span class="o">^</span><span class="mi">2</span><span class="o">+</span><span class="nx">b</span>
</span><span class="line"><span class="o">~~</span> <span class="nt">&lt;/script&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;br/&gt;</span>
</span><span class="line">~~\(E=mc^2\)，$$x_{1,2} = \frac{-b \pm \sqrt{b^2-4ac}}{2b}.$$
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>预览效果</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/41.png" class="img-up" title="公式输入预览"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/41.png" width="70%" title="公式输入预览" /></a></p>

<p><strong>借助 highlightjs 实现代码高亮</strong>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>代码高亮支持</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="html"><span class="line">##Code
</span><span class="line">~~ <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;http://yandex.st/highlightjs/8.0/styles/monokai_sublime.min.css&quot;</span><span class="nt">&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;http://yandex.st/highlightjs/8.0/highlight.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;script&gt;</span>
</span><span class="line"><span class="o">~~</span> <span class="nx">hljs</span><span class="p">.</span><span class="nx">configure</span><span class="p">({</span><span class="nx">tabReplace</span><span class="o">:</span> <span class="s1">&#39;    &#39;</span><span class="p">});</span>
</span><span class="line"><span class="o">~~</span> <span class="nx">hljs</span><span class="p">.</span><span class="nx">initHighlightingOnLoad</span><span class="p">();</span>
</span><span class="line"><span class="o">~~</span> <span class="nt">&lt;/script&gt;</span>
</span><span class="line">~~ <span class="nt">&lt;style </span><span class="na">type=</span><span class="s">&quot;text/css&quot;</span><span class="nt">&gt;</span>
</span><span class="line"><span class="o">~~</span> <span class="nt">pre</span> <span class="p">{</span>
</span><span class="line"><span class="o">~~</span>     <span class="k">padding</span><span class="o">:</span> <span class="m">5pt</span> <span class="m">5pt</span><span class="p">;</span>
</span><span class="line"><span class="o">~~</span> <span class="p">}</span>
</span><span class="line"><span class="o">~~</span> <span class="nt">&lt;/style&gt;</span>
</span><span class="line">
</span><span class="line">&#39;&#39; var tmp = new Array();
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>预览效果</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/42.png" class="img-up" title="代码高亮预览"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/42.png" width="70%" title="代码高亮预览" /></a></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wunderlist 添加快捷键启动]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/"/>
    <updated>2014-12-20T19:36:23+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong</id>
    <content type="html"><![CDATA[<!-- excerpt start -->
<p>Wunderlist 可以设置全局快捷键快速添加新条目。按下快捷键，Wunderlist 软件启动，定位到 Index 组、 Add an item 输入框。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/33.png" class="img-up" title="Wunderlist 添加新条目"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/33.png" width="90%" title="Wunderlist 添加新条目" /></a></p>

<p>这个功能其实一直被我用于 Wunderlist 的快速启动（在Dock里隐藏了…）。然而在 Wunderlist 的最近一次更新中，<strong>全局添加新条目不再能进入软件主体界面，而代之以快速输入框</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/32.png" class="img-up" title="Wunderlist 添加新条目"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/32.png" width="60%" title="Wunderlist 添加新条目" /></a></p>

<p>考虑到依靠快捷键进入 Wunderlist 主界面的习惯已经根深蒂固，而 Wunderlist 本身又不再提供类似的功能，只能自己想办法。</p>

<p>一种方式是借助 Alfred/Quicksilver 进行快速搜索，不过我还是懒得打字。然后想到了在 <code>System Preferences -&gt; Keyboard -&gt; Shortcuts</code> 里添加快捷键，不过支持用户自定义的只能是该程序菜单中已有的命令（但没有对应快捷键），而且还不是全局的。</p>

<p>最后这个小任务是通过使用 Automator 定制了一个 Service 并关联快捷键完成的。</p>

<!-- excerpt end -->

<p>Automator 是 Mac 自带软件中的一个神器，顾名思义是能够将我们从繁重的体力活里解脱出来的，让电脑自动执行既定任务。此前用它做过文件重命名、图片尺寸批量调整的任务。</p>

<p>Automator 可以创制不同种类的文件，但本质上都是工作流，遵循 <code>Input -&gt; Step-1 -&gt; Step-2 …</code> 的处理模式。其中，Application 除没有软件界面，与真实软件无二，可以显示于 Launchpad 和 Dock 中，而 Service 是这次任务所需要的。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/34.png" class="img-up" title="Automator 创建新文件"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/34.png" width="60%" title="Automator 创建新文件" /></a></p>

<p>Automator 相当于一个拖拽式应用开发 IDE。在搜索框中输入 launch，将 Launch Application 拖拽到右边。Service 的输入选择 no input，而 Lanuch Application 自然选择 Wunderlist。保存文件，只需要指定文件名，因为保存目录默认是 <code>~/Library/Services</code>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/35.png" class="img-up" title="Automator Service"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/35.png" width="90%" title="Automator Service" /></a></p>

<p>此时在应用菜单的 Services 中就可以看到刚才创建的 Service（launch wunderlist），点击即可打开 Wunderlist 主界面。然而，并不是任意程序都有 Services 这一菜单项的，目前只发现了<strong>爱奇艺、搜狐影音客户端这两朵奇葩</strong>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/36.png" class="img-up" title="Service"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/36.png" width="70%" title="Service" /></a></p>

<p>接下来的任务就是给这个 Service 关联快捷键，在 <code>System Preferences -&gt; Keyboard -&gt; Shortcuts -&gt; Services</code> 中找到 General，其中就有我们刚才创建的 Service，设置快捷键即可。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/37.png" class="img-up" title="为 Service 添加快捷键"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/37.png" width="70%" title="为 Service 添加快捷键" /></a></p>

<p>如法炮制，我们可以给 Hide All Applications 设置快捷键，相当于显示桌面的功能。然而在使用过程中发现，<strong>唯独在按下快捷键时处于 Focus 状态的窗口无法最小化，所以只能再跟着按一次 Command + M</strong>…</p>

<p>Automator 给我们封装了很多模块功能，但不可能覆盖到所有的用户需求，所以支持用户脚本，脚本种类可以是 Apple Script、JavaScript、Shell Script（<strong>包括 Perl、Python、Ruby</strong>）。</p>

<p>上面我们用到的启动应用程序的模块，相当于运行如下 Apple Script</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>启动应用程序</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="applescript"><span class="line"><span class="k">tell</span> <span class="nb">application</span> <span class="s2">&quot;Wunderlist&quot;</span> <span class="k">to</span> <span class="nb">launch</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>还有很多日常工作可以通过使用 Automator 来简化，比如</p>

<ul>
  <li>文件批量重命名；</li>
  <li>图片批量尺寸调整，生成缩略图；</li>
  <li><a href="http://luisroman.nl/post/40857635243/automating-ssh-logins-with-autossh-automator-and">开机自动 SSH 登录</a>；</li>
  <li>快速打开一系列软件、网页；</li>
  <li>一键退出所有程序；</li>
  <li>根据选择的文本创建文件；</li>
  <li>……</li>
</ul>

<p>当然，更多复杂功能的实现还有赖于对 Apple Script 等脚本的掌握。</p>

<p>【阅读推荐】</p>

<ul>
  <li><a href="https://help.apple.com/automator/mac/10.10/index.html?localePath=en.lproj%23/aut6e8156d85">Automator Help</a></li>
  <li><a href="http://computers.tutsplus.com/tutorials/10-awesome-uses-for-automator-explained--mac-15845">10 Awesome Uses for Automator Explained</a></li>
  <li><a href="http://www.maclife.com/article/features/15_automator_and_applescripts_you_can%E2%80%99t_live_without">15 Automator and AppleScripts You Can’t Live Without</a></li>
  <li><a href="http://luisroman.nl/post/40857635243/automating-ssh-logins-with-autossh-automator-and">Automating SSH logins with Autossh, Automator and Applescript</a></li>
  <li><a href="http://mac.softpedia.com/get/Automator-Actions---Workflows/">Automator Actions &amp; Workflows for Downloads</a></li>
  <li><a href="http://bbs.feng.com/read-htm-tid-8045539.html">【Automator】炮筒机器人流程实例</a>，内附 Apple Script 教程</li>
  <li><a href="http://www.macworld.com/article/1133821/automatordownloads.html">8 great Automator downloads</a></li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/">http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[每周一软之日记软件 Chronories]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/"/>
    <updated>2014-12-14T11:13:48+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">功能介绍</a></li>
  <li><a href="#section-2">界面设计</a></li>
  <li><a href="#section-3">易用性</a></li>
  <li><a href="#section-4">稳定性</a></li>
  <li><a href="#section-5">跨平台</a></li>
  <li><a href="#section-6">类似软件</a></li>
  <li><a href="#section-7">闪光点</a></li>
  <li><a href="#section-8">缺点</a></li>
</ul>

<h2 id="section">前言</h2>

<!-- excerpt start -->

<p>打算写一个“<strong>每周一软</strong>”系列，主要记录我在 Mac 平台下的软件使用感受和建议。作为一个收藏控和工具控，我曾对自己接触过的 Mac 软件做过一个分类整理，详见 <a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">《Mac 实用软件及功能吐血总结》</a>。“<strong>每周一软</strong>”与这份总结不同，一来会有更为详尽的介绍，二来都是我在工作生活中使用频率较高的，算是优中选优。</p>

<p>每篇介绍将分<code>功能介绍</code>、<code>界面设计</code>、<code>易用性</code>、<code>稳定性</code>、<code>跨平台</code>、<code>类似软件</code>、<code>闪光点</code>、<code>缺点</code>这八块，希望给大家一个较为全面的认识。</p>

<p>第一个要推荐的软件是日记软件 —— <strong>Chronories</strong>。</p>

<p>话说 Chronories 是一款下架停更的软件（但还是可以用的……），之所以把它放在第一个来介绍，一方面是因为自己用得久，有感情，再者它确实强大有用。</p>

<h2 id="section-1">功能介绍</h2>

<p>Chronories 是著名的 <a href="http://www.syniumsoftware.com/">Synium Software</a> 公司的产品。</p>

<p>与其说它是一款日记软件，不如说是在<strong>记录日志</strong>。</p>

<p>这一日志数据既有我们主动录入的，比如日常感想、心情、照片，也有被 Chronories 在后台默默记录下的丰富信息。</p>

<p>Chronories 以天为单位，可以记录的内容类别如下</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/26.png" class="img-up" title="Chronories 记录的条目"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/26.png" width="30%" title="Chronories 记录的条目" /></a></p>

<ul>
  <li>Diary Entry —— 日记条目</li>
  <li>Your Mood —— 心情</li>
  <li>Interesting Topics —— 感兴趣的话题</li>
  <li>Places —— 地点</li>
  <li>Contacts —— 联系人</li>
  <li>@Computer Activity —— 一天中的电脑活跃度，表现为折线图</li>
  <li>@Local Weather —— 本地天气</li>
  <li>@Application Used —— 不同软件的使用时长</li>
  <li>@Music —— 在 iTunes 听过的音乐</li>
  <li>@RSS News Headlines —— 你所录入的 RSS 当天的更新</li>
  <li>Desktop Screenshots —— 截屏</li>
  <li>Other Images —— 其它录入的图片</li>
  <li>iSight Photos —— 摄像头拍摄，大部分情况下是自拍……</li>
  <li>@e-mails —— Mail 当日收到的邮件</li>
  <li>@Chat Statistics —— Message 聊天记录</li>
  <li>@Visited Websites —— 当日访问过的网站</li>
  <li>@iCal Appointment —— iCal 中的安排</li>
</ul>

<!-- excerpt end -->

<p>@开头的是 Chronories 默默为你记录的，其它则需要主动输入，我习惯每天给桌面和自己拍一张照片，选择自己当天的心情，再写一小段或总结或鼓励自己的话。</p>

<p>默默记录的条件是<strong>开机启动 Chronories Agent</strong>，会在菜单栏中显示一个图标。我们可以设定在某时提醒自己做某项录入工作，比如我的设定是每天凌晨零点提醒桌面截屏、照照片，每天下午三点提醒录入日记条目、选择心情。</p>

<p>我们可以通过单击菜单栏图标快速记录（拍照、截屏、心情），也可以选择打开 Chronories 主程序进行记录。Yosemite 更新后，菜单栏显示会出两个小问题，分别是</p>

<ul>
  <li>图标按下后颜色会变化，但变不回来了；</li>
  <li>表情图片无法显示。</li>
</ul>

<p>不过都不影响正常功能。</p>

<p>此外，Chronories 还提供以下功能</p>

<ul>
  <li>录入内容的汇总统计，比如你各种心情的总天数、软件使用总时长、电脑活跃度统计，支持简单定制，比如时间、图表类型；</li>
  <li>全面的条件搜索，比如搜索 <strong>当天 e-Mails 记录中包含了 “apple”</strong> 且 <strong>当天心情很好</strong> 且 <strong>时间晚于 2014年12月13日</strong> 的日记；</li>
  <li>设置访问密码；</li>
  <li>导出备份、导入还原，还支持导入 MacJournal 格式的日记；</li>
  <li>设置背景图片、字体。</li>
</ul>

<h2 id="section-2">界面设计</h2>

<p>不难看。</p>

<p>要知道，软件 About 的信息里，显示的是 <strong>© Synium Software GmbH, 2009-2010</strong>。</p>

<p>主界面</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/27.png" class="img-up" title="主界面1"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/27.png" width="80%" title="主界面1" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/30.png" class="img-up" title="主界面2"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/30.png" width="80%" title="主界面2" /></a></p>

<p>2014年软件使用情况统计</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/28.png" class="img-up" title="软件使用情况统计"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/28.png" width="80%" title="软件使用情况统计" /></a></p>

<p>2014年每日电脑活跃状况统计</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/29.png" class="img-up" title="每日电脑活跃状况统计"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/29.png" width="80%" title="每日电脑活跃状况统计" /></a></p>

<h2 id="section-3">易用性</h2>

<p>十分简单，开机自启动就行，让它慢慢记去。</p>

<h2 id="section-4">稳定性</h2>

<p>从 Lion 用过来一直都稳定，在 Yosemite 上菜单栏显示有小问题，不过不影响功能。因为停止维护，未来无法预期。</p>

<h2 id="section-5">跨平台</h2>

<p>没有 Windows/Linux 支持。</p>

<p>没有移动端支持。</p>

<p>相信不少人的习惯是在 PC 端做文字记录，在移动端看，所以建议只在 Chronories 中写一点杂事、随感。</p>

<h2 id="section-6">类似软件</h2>

<p>MacJournal、Mémoires、DayOne 都是 <code>日记软件</code>，前两个中规中矩，DayOne 倒是可圈可点。</p>

<p>DayOne 的主要优点/特点是</p>

<ul>
  <li>界面美观；</li>
  <li>跨平台支持；</li>
  <li>支持密码保护、自动备份、地理定位、标签、收藏、分享、导出 PDF 等；</li>
  <li>支持 Markdown（很有限，比如列表、加粗）；</li>
  <li>支持 <a href="https://dayone.zendesk.com/hc/en-us/articles/200258954-Day-One-Tools">Command Line</a>，有点丧心病狂……</li>
</ul>

<p>日记软件的可被取代性太强，最大的竞争对手就是 <code>笔记软件</code>，比如 Evernote、Ulysses 等。特别是对于<strong>理工学生党</strong>、<strong>技术青壮年</strong>，学习、工作日记不是文字加配图就能搞定的事情，还要有链接、代码、公式、表格等内容。</p>

<p>面对同类软件的竞争，Chronories 可以骄傲的说：</p>

<blockquote>
  <p>虽然我的定位是日记软件，但绝不是简单记录“天气晴、心情好……”的那款。别的日记软件在我这里只浓缩为一个名叫 Diary Entry 的小小输入框，而我记的日记叫日志。我的人生信条是，啥都干，啥都行，不想当将军的厨师不是好裁缝！</p>
</blockquote>

<h2 id="section-7">闪光点</h2>

<p>Chronories 最大的闪光点在于它默默积累下的<strong>结构化数据</strong>。</p>

<p>导出 Chronories Archives 后，每天的数据会被整理在一个单独的文件夹下，包括图片、邮件、日记条目。</p>

<p>信息汇总在 info.xml 中，结构如下：</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/31.png" class="img-up" title="info.xml 结构"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/31.png" width="80%" title="info.xml 结构" /></a></p>

<p>有了这些原始数据，再结合基本的统计、数据挖掘和数据可视化的知识，就可以做出很多有意思的小项目。</p>

<h2 id="section-8">缺点</h2>

<ol>
  <li>日记文字输入框较简单，不支持复杂格式；</li>
  <li>没有移动端支持；</li>
  <li>厂商不再维护，具体原因见 <a href="http://www.syniumsoftware.com/support/faq/chronories/why_have_we_stopped_selling_chronories.html">官网说明</a>。</li>
</ol>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微博卡片 — 微博收藏的可视化]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/"/>
    <updated>2014-12-09T15:23:26+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>平时自己会有一些新浪微博的收藏，主要是跟自己专业、兴趣相关的资讯、资料，随着积累的增多，如何有效回顾这些收藏成为了一个问题。</p>

<p>使用新浪微博自带的收藏页面，感觉翻页浏览不便；后来会在收藏的同时，把微博内容、图片分门别类拷贝到笔记中，但又不便于可视化。于是萌生了自己做一个微博可视化页面的想法，采用较为流行的瀑布流布局，每一条微博以卡片的形式展示。给出 <a href="https://github.com/frank19900731/weibocard">项目地址</a>  和 <a href="http://frank19900731.github.io/weibocard-demo/">Demo</a>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/25.png" class="img-up" title="微博卡片 Demo"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/25.png" width="80%" title="微博卡片 Demo" /></a></p>

<p>项目使用新浪微博 Python SDK 抓取已收藏的微博，mongodb 做存储，根据查询条件生成 json 文件供前端可视化，前端瀑布流是从 <a href="http://www.imooc.com/learn/101">这门课</a> 中学到的。多说一句，慕课网里关于前端的教学内容非常丰富，很适合我这种半瓶醋选手……</p>

<p>我只简单地实现了时间区间的提取，不过有了微博数据和可视化骨架在，定制精细化的整理、阅读方式应该不难。</p>

<!-- excerpt end -->

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/">http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DIY Deep Learning for Vision: A Tutorial with Caffe 报告笔记]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/"/>
    <updated>2014-12-04T09:56:21+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">简介</a></li>
  <li><a href="#section-1">要点记录</a></li>
  <li><a href="#section-2">提问</a></li>
  <li><a href="#section-3">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">简介</h2>

<p>报告时间是北京时间 12月14日 凌晨一点到两点，主讲人是 Caffe 团队的核心之一 Evan Shelhamer。第一次用 <a href="http://www.gotomeeting.com/online/entry">GoToMeeting</a> 参加视频会议，效果真是不错。</p>

<p>报告后分享出了 <a href="http://on-demand-gtc.gputechconf.com/gtcnew/on-demand-gtc.php?searchByKeyword=shelhamer&amp;searchItems=&amp;sessionTopic=&amp;sessionEvent=4&amp;sessionYear=2014&amp;sessionFormat=&amp;submit=&amp;select=+">视频</a> 和 <a href="http://on-demand.gputechconf.com/gtc/2014/webinar/gtc-express-deep-learning-caffee-evan-shelhamer.pdf">展示文件</a>。另一讲座，cuDNN: Accelerating Convolutional Neural Networks using GPUs，<a href="http://on-demand-gtc.gputechconf.com/gtcnew/on-demand-gtc.php?searchByKeyword=cuDNN&amp;searchItems=&amp;sessionTopic=&amp;sessionEvent=4&amp;sessionYear=2014&amp;sessionFormat=&amp;submit=&amp;select=+">视频</a> 和 <a href="http://on-demand.gputechconf.com/gtc/2014/webinar/gtc-express-sharan-chetlur-cudnn-webinar.pdf">展示文件</a> 也已放出。</p>

<p>Caffe 此前听过没用过，所以报告前自己试运行了一下，参照 <a href="http://caffe.berkeleyvision.org/installation.html">官方教程</a>。Caffe 安装、上手都很快，Protobuf 式的层定义很直观，模型修改或算法调整变得很容易，相当于只需要改配置文件。还找到了他们放在 Google Docs 上一个教程 PPT，<a href="https://docs.google.com/presentation/d/1UeKXVgRvvxg9OUdh_UiC5G71UMscNPlvArsWER41PsU/edit#slide=id.p">DIY Deep Learning for Vision: a Hands-On Tutorial with Caffe</a> （已搬到 <a href="http://frank19900731.github.io/downloads/file/Caffe.pptx">墙里</a>），后来发现这次报告的 PPT 就是在这个基础上修改的。</p>

<p>本次报告主要内容是</p>

<ul>
  <li>对机器学习、深度学习的一些介绍，包括若干深度学习的经典模型；</li>
  <li>Caffe 的<strong>优势</strong>（模块化、速度、社区支持等）、<strong>基本结构</strong>（网络定义、层定义、Blob等）和<strong>用法</strong>（模型中损失函数、优化方法、共享权重等的配置、应用举例、参数调优的技巧），以及<strong>未来方向</strong>（CPU/GPU 并行化、Pythonification、Fully Convolutional Networks等）。</li>
</ul>

<p>以下是报告中的截图配上自己的一点笔记，一手资料请参见上面给出的会后分享链接。</p>

<!-- excerpt end -->

<h2 id="section-1">要点记录</h2>

<p>PPT 的首页取自该项目的一个在线 <a href="http://demo.caffe.berkeleyvision.org">demo</a>，输入图片 url，识别物体类别。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/3.png" class="img-up" title="DIY Deep Learning for Vision: the Caffe framework"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/3.png" width="80%" title="DIY Deep Learning for Vision: the Caffe framework" /></a></p>

<p>左边是浅层特征，各类别物体杂乱无章；右边是深度特征，一些类别有较为明显的分别。特别地，<strong>dog、bird、invertebrate</strong> 这三类动物类别离得较近，而 <strong>building、vehicle、commodity</strong> 这类无生命类别离得较近，可见深度特征的强大。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/4.png" class="img-up" title="Why Deep Learning? - 1"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/4.png" width="80%" title="Why Deep Learning? - 1" /></a></p>

<p>此外，在深层结构当中，<strong>隐层神经元的激活可能与特定的物体类别有关</strong>，比如有的神经元对人像敏感，而有的对数字或建筑物敏感，最下面一层是闪光灯（或与之类似，比如反光的脑门……）效果。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/5.png" class="img-up" title="Why Deep Learning? - 2"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/5.png" width="80%" title="Why Deep Learning? - 2" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/6.png" class="img-up" title="What is Deep Learning?"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/6.png" width="80%" title="What is Deep Learning?" /></a></p>

<p>Caffe 的优势，网络结构的模块化和易表达是显然的，社区资源也同样强大，比如下两页内容。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/7.png" class="img-up" title="Why Caffe? In one sip..."><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/7.png" width="80%" title="Why Caffe? In one sip..." /></a></p>

<p>Caffe 的 Reference Models 可供学术使用，比如 AlexNet、R-CNN、CaffeNet，包括模型定义、优化方法和预训练权重。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/8.png" class="img-up" title="Reference Models"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/8.png" width="80%" title="Reference Models" /></a></p>

<p><a href="http://caffe.berkeleyvision.org/model_zoo.html">Model Zoo</a> 中有用户贡献的模型可供参考使用，比如 VGG、Network-in-Network。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/9.png" class="img-up" title="Open Model Collection"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/9.png" width="80%" title="Open Model Collection" /></a></p>

<p>Caffe 支持丰富的模型表达形式，包括 DAGs、Weight Sharing 以及 Siamese Network。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/10.png" class="img-up" title="Architectures"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/10.png" width="80%" title="Architectures" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/11.png" class="img-up" title="Brewing by the Numbers..."><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/11.png" width="80%" title="Brewing by the Numbers..." /></a></p>

<p>网络和层定义采用 protobuf 的样式。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/12.png" class="img-up" title="Net"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/12.png" width="80%" title="Net" /></a></p>

<p>Layer 指的是权重和偏置，可以定义连接数、权重初始化方法等。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/13.png" class="img-up" title="Layer"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/13.png" width="80%" title="Layer" /></a></p>

<p>Blob 是四维数据结构，保存节点上的数值以及模型参数，可以通过编程在 CPU 和 GPU 间传输。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/14.png" class="img-up" title="Blob"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/14.png" width="80%" title="Blob" /></a></p>

<p>模型定义之外，还需要一个指定优化策略的配置文件，用以训练模型。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/15.png" class="img-up" title="Solving: Training a Net"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/15.png" width="80%" title="Solving: Training a Net" /></a></p>

<p>使用 Caffe 训练的一般步骤就是</p>

<ul>
  <li>数据预处理；</li>
  <li>模型定义；</li>
  <li>求解策略定义；</li>
  <li>运行。</li>
</ul>

<p>此处给出了两个例子，<a href="http://nbviewer.ipython.org/github/BVLC/caffe/blob/dev/examples/hdf5_classification.ipynb">Logistic Regression</a>，<a href="http://nbviewer.ipython.org/github/BVLC/caffe/blob/dev/examples/hdf5_classification.ipynb">Learn LeNet on MNIST</a>，都很好 follow。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/16.png" class="img-up" title="Step-by-Step Recipe"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/16.png" width="80%" title="Step-by-Step Recipe" /></a></p>

<p>调参中重点讲了一个 <a href="[Fine-tuning from ImageNet to Style](http://nbviewer.ipython.org/github/BVLC/caffe/blob/dev/examples/hdf5_classification.ipynb)">模型迁移的实例</a>，用某项任务已有模型的参数作为新任务模型的参数初始值，然后进行模型训练。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/17.png" class="img-up" title="Fine-tuning Transferring learned weights to kick-start models"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/17.png" width="80%" title="Fine-tuning Transferring learned weights to kick-start models" /></a></p>

<p>模型训练一般由浅入深，逐步降低学习速率，以保持预训练参数的某些性质。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/18.png" class="img-up" title="Fine-tuning Tricks"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/18.png" width="80%" title="Fine-tuning Tricks" /></a></p>

<p>接下来具体讲述了 Loss、Solver、DAG、Weight Sharing 的概念和配置。</p>

<p>对同一模型，不同 Solver 的表现有差。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/19.png" class="img-up" title="Solver Showdown: MNIST Autoencoder"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/19.png" width="80%" title="Solver Showdown: MNIST Autoencoder" /></a></p>

<p>一般深度学习模型是线性形式的，比如 LeNet，而 Caffe 支持 DAG 形式的模型。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/20.png" class="img-up" title="Nets are DAGs"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/20.png" width="80%" title="Nets are DAGs" /></a></p>

<p>Caffe 的近期动向，CPU/GPU 并行化、Pythonification、Fully Convolutional Networks等。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/21.png" class="img-up" title="NOW ROASTING"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/21.png" width="80%" title="NOW ROASTING" /></a></p>

<p>Caffe 的团队，拜 Yangqing Jia 师兄……</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/22.png" class="img-up" title="Thanks to the Caffe crew"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/22.png" width="80%" title="Thanks to the Caffe crew" /></a></p>

<p>文献参考。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/23.png" class="img-up" title="References"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/23.png" width="80%" title="References" /></a></p>

<h2 id="section-2">提问</h2>

<p>语音回答中，Evan 提到 UCB 的一个团队正在开发 Scala 接口，不过尚属实验性质；Caffe 团队在考虑 和 UCB 的 AMP 团队合作，扩展到 Spark 这一计算平台上；除了已支持的 CPU/GPU 计算，也考虑扩展支持 OpenCl；对于 Theano、Torch，鼓励大家尝试、比较……</p>

<p>文字问答如下，由 Yangqing Jia 回复。</p>

<p><strong>Q: Is the pre-trained model avaialbe for download to accelerate our work on other kinds of images?</strong></p>

<p><strong>A:</strong> FYI - for pretrained models that we release, please refer to the model zoo page here: http://caffe.berkeleyvision.org/model_zoo.html</p>

<hr />

<p><strong>Q: Android platform ?</strong></p>

<p><strong>A:</strong> People have asked about android/ios platforms. In principle this is possible since the code is purely in C, but of course some engineering efforts are needed to write makefiles like Android.mk for this. Our bandwidth is limited and we are focusing on the research part, but we welcome pull requests on github if you write one (and we thank you in advance)! Also, kindly check out the blog post by my colleague Pete Warden about our efforts on running with Jetson TK1: http://petewarden.com/2014/10/25/how-to-run-the-caffe-deep-learning-vision-library-on-nvidias-jetson-mobile-gpu-board/</p>

<hr />

<p><strong>Q: Can you discuss status and/or considerations for adding opencl support (and so be vendor neutral, as opposed to NVIDIA CUDA)?</strong></p>

<p><strong>A:</strong> In terms of using OpenCL - it has been under discussion for a while, but we are kind of shortstaffed so we focus more on the research side - we welcome contributions from open-source communities of course, please join us at github :)</p>

<hr />

<p><strong>Q: do you have an online examples of unsupervised losses</strong></p>

<p><strong>A:</strong> For unsupevised losses and training there is a bundled example of an MNIST autoencoder.</p>

<p>更多的问答（60+）请参见主办方提供的 <a href="http://frank19900731.github.io/downloads/file/Q&amp;A_Transcript.docx">Q&amp;A Transcript</a>。</p>

<h2 id="section-3">总结</h2>

<p>“盗取”一页 PPT 作为本文总结。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/24.png" class="img-up" title="LAST SIP"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/24.png" width="80%" title="LAST SIP" /></a></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/">http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[若干有用有趣的网站]]></title>
    <link href="http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/"/>
    <updated>2014-12-04T09:54:31+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan</id>
    <content type="html"><![CDATA[<!-- excerpt start -->
<p>最近清理收藏夹，有些有用有趣的网站可以拿出来做推荐。</p>

<ul>
  <li>搜索相似的网站
    <ul>
      <li><a href="http://www.similarsitesearch.com/">SimilarSiteSearch</a></li>
      <li><a href="http://www.similarsites.com/">SimilarSites</a>，下图显示和 tsinghua.edu.cn 相似的网站</li>
    </ul>
  </li>
</ul>

<p><a href="http://frank19900731.github.io/img/post/2014-12/1.png" class="img-up" title="和 tsinghua.edu.cn 相似的网站"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/1.png" width="80%" title="和 tsinghua.edu.cn 相似的网站" /></a></p>

<ul>
  <li>数学相关
    <ul>
      <li><a href="https://www.mathway.com/">Mathway</a>，在线计算 &amp; 数学题库</li>
      <li><a href="http://people.missouristate.edu/lesreid/links.html">Puzzle 集锦</a>，又一个 <a href="http://gurmeet.net/puzzles/">Puzzle</a></li>
      <li><a href="http://www.archimy.com/">3D 绘图网站</a>，示例如下</li>
    </ul>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>3D. Hyperbolic Paraboloid</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="matlab"><span class="line"># <span class="n">Example</span>
</span><span class="line"># <span class="mi">3</span><span class="n">D</span><span class="p">.</span> <span class="n">Hyperbolic</span> <span class="n">Paraboloid</span>
</span><span class="line">
</span><span class="line"># <span class="n">Grid</span>
</span><span class="line"><span class="n">xgrid</span> <span class="p">=</span> <span class="mi">20</span>
</span><span class="line"><span class="n">ygrid</span> <span class="p">=</span> <span class="mi">20</span>
</span><span class="line">
</span><span class="line"># <span class="n">Constant</span>
</span><span class="line"><span class="n">a</span> <span class="p">=</span> <span class="mi">1</span>
</span><span class="line"><span class="n">b</span> <span class="p">=</span> <span class="mi">1</span>
</span><span class="line">
</span><span class="line"># <span class="n">Calculations</span>
</span><span class="line"><span class="n">z</span> <span class="p">=</span> <span class="p">((</span><span class="n">x</span><span class="o">/</span><span class="n">a</span><span class="p">)</span>^<span class="mi">2</span> <span class="o">-</span> <span class="p">(</span><span class="n">y</span><span class="o">/</span><span class="n">b</span><span class="p">)</span>^<span class="mi">2</span><span class="p">)</span> <span class="o">/</span> <span class="mi">10</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><a href="http://frank19900731.github.io/img/post/2014-12/2.png" class="img-up" title="Hyperbolic Paraboloid"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/2.png" width="80%" title="Hyperbolic Paraboloid" /></a></p>

<!-- excerpt end -->

<ul>
  <li>面试相关
    <ul>
      <li><a href="http://www.nowcoder.com/">牛客网</a>，IT 企业笔试、面试题库</li>
      <li><a href="http://www.meetqun.com/">米群</a>，中国同学的美帝企业面经</li>
      <li><a href="https://www.hackerrank.com/">Hackerrank</a>，在线 coding</li>
    </ul>
  </li>
  <li>建站相关
    <ul>
      <li><a href="http://libs.useso.com/">360 CDN</a></li>
      <li><a href="http://www.kuaizhan.com/">快站</a></li>
      <li><a href="http://www.maka.im/home/index.html">MAKA</a></li>
    </ul>
  </li>
  <li>杂
    <ul>
      <li><a href="http://www.datawrangling.com/hidden-video-courses-in-math-science-and-engineering/">Hidden Video Courses in Math, Science, and Engineering</a></li>
      <li><a href="http://yishizhibo.com/">易视直播</a>，一个直播内容订阅网站，提供 Google Glass 应用</li>
      <li><a href="http://www.ituring.com.cn/article/59151">图灵社区招聘译者</a></li>
      <li><a href="http://codepad.org/">codepad</a>，在线运行代码，给你的代码和运行结果创建一个链接便于分享，功能很实用，唯独不支持 Java，有个性</li>
      <li><a href="http://www.douyuehan.com/Download1/File/5.aspx">豆约翰博客备份</a>，试用效果不错，导出 chm、pdf 格式都挺好，省去复制公式的麻烦，VIP 每年20块；垂直抓取任务在 mac 上用 sitesucker 就挺好的，配置得当的话，各种站都能扒吧</li>
      <li><a href="http://www.apesk.com/mbtisoft/findyourself/">了解你自己</a>，比较多的性格测试</li>
    </ul>
  </li>
</ul>

<p>大家有什么有用有趣的网站也欢迎在评论里贴粗来。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/">http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Matrix67 博客中智力题粗分类]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/"/>
    <updated>2014-11-29T15:03:44+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">几何题</a></li>
  <li><a href="#section-2">概率统计</a></li>
  <li><a href="#section-3">程序算法</a></li>
  <li><a href="#section-4">数学证明</a></li>
  <li><a href="#section-5">益智趣题</a>    <ul>
      <li><a href="#section-6">组合数学与图论</a></li>
      <li><a href="#section-7">博弈/最优策略</a></li>
      <li><a href="#section-8">几何相关</a></li>
      <li><a href="#section-9">物理方法</a></li>
      <li><a href="#section-10">有趣的构造</a></li>
      <li><a href="#section-11">趣题集锦</a></li>
      <li><a href="#section-12">其它</a></li>
    </ul>
  </li>
  <li><a href="#section-13">总结</a></li>
</ul>

<h2 id="section">前言</h2>

<!-- excerpt start -->

<p>如果不是为了准备面试（其实也很适合面试官看看），自己可能迟迟不会有把 <a href="http://www.matrix67.com/blog/">Matrix67</a> 大牛的博客“刷一遍”的动力。“刷一遍”显然是夸张的说法，一来我只是看了有出题可能性的文章，偏爱有生活化表达形式的题目，比如概率博弈问题，其它的如果证明计算较复杂或需要有背景知识，则可能不适合；二来在看的过程中也发现，M 牛的一些博文已经成了死链，且有些文章话未尽而终、下篇不可寻，也就更“刷不完”了。</p>

<p>除了显见的接触更多有趣的数学问题和思维方法这点好处之外，看 M 牛博客带来的其它收获是</p>

<ul>
  <li>在评论中学习了不少其他牛人的观点，获得了他们的博客链接，如
    <ul>
      <li><a href="http://zhiqiang.org/blog/">阅微堂</a> </li>
    </ul>
  </li>
  <li>了解到一些高质量数学 puzzle，如
    <ul>
      <li><a href="http://domino.research.ibm.com/Comm/wwwr_ponder.nsf/Challenges/December2014.html">IBM Ponder This</a></li>
      <li><a href="http://www.brand.site.co.il/riddles/usingyourhead.html">UyHiP</a></li>
    </ul>
  </li>
  <li>了解数学科普读物和网络资源若干，如
    <ul>
      <li><a href="http://www.douban.com/link2/?url=http%3A%2F%2Fbook.douban.com%2Fsubject%2F1414810%2F&amp;query=proofs+from+the+book&amp;cat_id=1001&amp;type=search&amp;pos=0">Proofs from THE BOOK</a></li>
      <li><a href="http://www.douban.com/link2/?url=http%3A%2F%2Fbook.douban.com%2Fsubject%2F1320282%2F&amp;query=%E4%BB%80%E4%B9%88%E6%98%AF%E6%95%B0%E5%AD%A6&amp;cat_id=1001&amp;type=search&amp;pos=0">什么是数学</a></li>
      <li><a href="http://www.cut-the-knot.org/">cut-the-knot</a></li>
    </ul>
  </li>
</ul>

<p>我所关注的题目大概可以分为以下种类型，匹配的一句话介绍不保证全面。</p>

<ul>
  <li>几何题
    <ul>
      <li>用初等几何的方法求值、证明，尺规作图；</li>
    </ul>
  </li>
  <li>概率统计
    <ul>
      <li>概率与期望的巧算；</li>
    </ul>
  </li>
  <li>程序算法
    <ul>
      <li>M 牛对于某道题目的求解或对一类算法的理解总结；</li>
    </ul>
  </li>
  <li>数学证明
    <ul>
      <li>一些经典结论的另类证明思路，增进对已知结论的理解；</li>
    </ul>
  </li>
  <li>趣题
    <ul>
      <li>通过一些巧妙的证明思路和构造方法解题，最是赏心悦目，与组合数学、图论、博弈论等有关。</li>
    </ul>
  </li>
</ul>

<p>以下分别列举。我会用 ★ 标记出自己觉得称得上简单精妙的计算/证明/构造，以及有趣的结论，不打算完整阅读的朋友可以选看。</p>

<p>其中有四道题是 ★★，确实很感动 ~&gt;-&lt;~。</p>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/3638">用数学解赌博问题不稀奇，用赌博解数学问题才牛B</a> </li>
  <li><a href="http://www.matrix67.com/blog/archives/2494">Buffon投针实验：究竟为什么是pi？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/954">趣题：用最少的“并行交换”完成排序</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4248">趣题：能否把三维空间分成无穷个圆？</a></li>
</ul>

<!-- excerpt end -->

<h2 id="section-1">几何题</h2>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5293">趣题：平行线之间的正方形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5398">趣题：不用三角函数求出∠BAC的度数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5883">趣题：圆中的两个相切的半圆</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5321">趣题：斜边上的动点</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4545">经典证明：等边三角形内一点到各顶点的距离长可构成一个三角形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4485">趣题：不用相似怎么办？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/2946">也说Pizza问题：分享几个漂亮的证明</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/2896">趣题：三角形两顶点在直线上滑动时第三点的轨迹</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/2447">趣题：货架上的听装可乐</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2383">空间想象能力挑战：立方体相邻面两对角线的最近距离？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/507">趣题：空间四边形外切于给定球，求证四切点共面</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/505">趣题：用正三角形和正四边形构成凸多边形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/497">神奇的锈规作图：单用一个只能画单位圆的圆规如何作等边三角形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/466">几道经典的几何作图趣题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/314">趣题：等腰直角三角形与勾股定理形式的条件</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/312">趣题：内切圆与最大内接矩形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/231">借用点其它的东西，你或许可以三等分角</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/204">趣题：哪条线段最长，哪条线段最短</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/58">几个把平面几何问题的辅助线做到空间去的数学趣题</a></li>
</ul>

<h2 id="section-2">概率统计</h2>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5165">趣题：测量两根木棒长度的更优方案</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/6015">Penney 的游戏：正所谓后发制人，先发制于人</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/6151">趣题：用两枚硬币随机生成 1 到 n 之间的整数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4534">生成函数的妙用：平均抛掷多少次硬币才会出现连续两个正面？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4429">趣题：公司应该雇用多少员工？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4125">趣题：随机折断的木棒</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/3936">趣题：平均要取到第几个随机数才会让序列第一次下降</a></li>
  <li>★★ <a href="http://www.matrix67.com/blog/archives/3638">用数学解赌博问题不稀奇，用赌博解数学问题才牛B</a> </li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/3507">惊人的答案：平均要取多少个(0,1)中的随机数才能让和超过1</a></li>
  <li>★★ <a href="http://www.matrix67.com/blog/archives/2494">Buffon投针实验：究竟为什么是pi？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2339">趣题：构造骰子使其与两个标准骰子等价</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/879">随机洗牌：哪一种算法是正确的？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/572">设计调查问卷的艺术：怎样才能绝对地保证个人隐私不被泄露</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/432">非传递性骰子：A比B好，B比C好，A不一定比C好</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/412">概率学的创立：Chevalier de Méré问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/366">KMP算法与一个经典概率问题</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/364">趣题：直觉 VS 理性思考 经典概率问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/273">趣题：非常具有启发性的概率问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/251">又是黑色星期五！为什么总是黑色星期五呢？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/191">又一个比较诡异的悖论</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/205">趣题：阿米巴的生存</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/136">信息学竞赛中可能有用的概率学知识</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/120">什么是生成函数？</a></li>
</ul>

<h2 id="section-3">程序算法</h2>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5190">网络流和棒球赛淘汰问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/3985">神秘常量复出！用0x077CB531计算末尾0的个数</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/3066">如此排序能成吗？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2605">贪心算法的一个出人意料的应用</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1255">一个简单而有用的数据结构</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/1241">趣题：在双向有序链表中查找指定的数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1089">趣题：用正则表达式判断一个二进制数是否能被3整除</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1057">漫话二分（下）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1013">漫话二分（上）</a></li>
  <li>★★ <a href="http://www.matrix67.com/blog/archives/954">趣题：用最少的“并行交换”完成排序</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/944">趣题：只用赋值、自增和循环操作实现减法运算</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/901">停机问题、Chaitin常数与万能证明方法</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/858">趣题：用最少的块移动实现逆序操作</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/813">趣题：用位运算生成下一个含有k个1的二进制数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/730">思考的乐趣：UyHiP趣题之用最少的块移动实现逆序操作</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/511">趣题：寻找出现了奇数次的数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/475">牛B的正则表达式：素数判定与线性方程求解</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/415">趣题：经典二分问题的一个扩展</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/393">计算阶乘的另一些有趣的算法</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/371">标题党 之 密码学家用PS3成功预测美国2008大选结果</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/362">旧闻一则：神秘的0x5f3759df 不可思议的Quake III源码</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/342">趣题：Anagram辅助程序的数据结构</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/331">Google面试题中的两道趣题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/333">编辑距离、拼写检查与度量空间：一个有趣的数据结构</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/276">十个利用矩阵乘法解决的经典题目</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/268">位运算简介及实用技巧（四）：实战篇</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/266">位运算简介及实用技巧（三）：进阶篇(2)</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/264">位运算简介及实用技巧（二）：进阶篇(1)</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/263">位运算简介及实用技巧（一）：基础篇</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/185">OI之外的一些东西：简单谈谈排序网络</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/178">从零开始学算法：十种排序算法介绍（下）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/166">从零开始学算法：十种排序算法介绍（中）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/166">从零开始学算法：十种排序算法介绍（上）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/115">KMP算法详解</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/112">最长公共上升子序列的另一个O(mn)的算法</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/92">《数据结构与算法分析》5000字缩写（下）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/91">《数据结构与算法分析》5000字缩写（中）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/90">《数据结构与算法分析》5000字缩写（上）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/30">原创科普说明文：递归</a></li>
</ul>

<h2 id="section-4">数学证明</h2>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5562">立方和公式的一个组合数学证明</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/6105">利用重心推导平方和公式</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4955">正多边形的滚动与旋轮线下方的面积</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4891">Fibonacci数列性质的组合证明</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2904">经典证明：1+2+3+…+(n-1) = C(n,2)</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2753">利用阶乘因子数公式证明素数无穷多</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2700">经典证明：用信息熵证明素数无穷多</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/768">最酷的证明：Pick定理另类证法</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/495#more-495">《什么是数学》读书笔记（一）：反证法、数学归纳法与唯一分解定理</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/358">局部变动原理：算术平均数不小于几何平均数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/228">推荐： The Hundred Greatest Theorems</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/206">又一种证明根号2是无理数的方法</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/156">令人称奇的简单证明：五种方法证明根号2是无理数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5094">经典证明：Ptolemy定理的无字证明</a></li>
</ul>

<h2 id="section-5">益智趣题</h2>

<p>益智趣题的数量很多，想要准确的细分类较难，所以标题里的“粗分类”用在这里了……</p>

<h3 id="section-6">组合数学与图论</h3>

<ul>
  <li>★ <a href="http://www.matrix67.com/blog/archives/801">趣题：奇怪的有向图 任两点间两步之内可达的路径有且仅有一条</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/751">趣题：2n+1个点中任n个都与同一点相连，则存在一个连接所有点的点</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/746">趣题：循环赛中总存在一人“可传递一次”地打败了所有人</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/461">趣题：鸽笼原理的应用 IMO 2001 Problem #3</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2538">趣题：某个经典结论的妙用</a></li>
</ul>

<h3 id="section-7">博弈/最优策略</h3>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5523">趣题：庄家的秘密序列</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4966">趣题：八根并排放置的水管</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4631">趣题：旋转桌子避免灯泡全亮</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/456">趣题：猜帽子游戏与Hamming编码</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/452">很诡异的博弈问题分析方法</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/444">100囚犯问题、100囚犯问题加强版与选择公理（下）</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/443">100囚犯问题、100囚犯问题加强版与选择公理（上）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/3771">UyHiP趣题：100囚犯之黑白手套</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/2762">趣题：数轴上的潜水艇</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2712">瓶魔悖论与不完全信息</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1671">一道智力题：世上最毒的毒药</a></li>
</ul>

<h3 id="section-8">几何相关</h3>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5270">经典证明：任意三角形都能被分成n≥4个等腰三角形</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5382">趣题：设计多边形围墙使得对于某一观察点所有的墙都不完全可见</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5313">趣题：同时等分三角形周长和面积的直线</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4525">趣题：能否在等边三角形点阵中画一个正方形？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4480">盯着结论看，直到它变得显然成立为止</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5040">贴着另一枚硬币旋转一周则自身转了两周：不同的解释方法</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5004">趣题：构造多边形使得过边界上某一点的任意直线均能等分面积</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5521">两两接触的等粗且无限长的圆柱体</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5495">趣题：把比萨分成若干等份使得至少有一份不含边</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/3878">趣题：面积为1的凸多边形总能放进一个面积为2的矩形里</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/853">为什么平分圆面积的所有曲线中以直径最短？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/528">趣题：直尺不够长时如何作出连接两点的直线？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/405">趣题：n为奇数时，正n边形的三角形剖分内有且仅有一个锐角三角形</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/300">趣题：单位正方形内相互分离的两个小正方形，其边长和小于1</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/6204">趣题：构造点集使得每条直线上的点都一样多</a></li>
</ul>

<h3 id="section-9">物理方法</h3>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/470">物理方法解决数学问题（五）：一个与椭圆有关的性质</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/422">物理方法解决数学问题（四）：Fermat-Torricelli问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/419">物理方法解决数学问题（三）：神奇的Fermat原理</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/392">物理方法解决数学问题（二）：Archimedes与球体积公式</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/391">物理方法解决数学问题（一）：从一个简单的平面几何题谈起</a></li>
</ul>

<h3 id="section-10">有趣的构造</h3>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/4731">经典证明：能否在平面上写下不可数个不相交的Y？</a></li>
  <li>★★ <a href="http://www.matrix67.com/blog/archives/4248">趣题：能否把三维空间分成无穷个圆？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/3851">画圈圈和画叉叉的区别</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4459">趣题：连接多个数字串时怎样避免歧义？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2830">如何构造一个平滑的最大值函数</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/910">趣题：如何用集合来定义有序对</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/733">趣题：奇怪的自然数集划分</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/330">函数上某一点导数为正，该点邻域不一定形成单增区间</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/304">趣题：用最简单的话来描述一个集合</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/698">趣题：构造一个[0,1]到(0,1)的一一映射</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1972">趣题：构造整数域上的函数f使得f(f(n))等于-n</a></li>
</ul>

<h3 id="section-11">趣题集锦</h3>

<p>题目描述简短，有不少精彩解答，就不逐个加 ★ 了。</p>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5083">难倒犹太人的五个数学问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4881">12个经典的行程问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4649">难倒犹太人的11个数学问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/3243">Which Way Did the Bicycle Go 趣题选（下）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/3172">Which Way Did the Bicycle Go 趣题选（中）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/3113">Which Way Did the Bicycle Go 趣题选（上）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2671">10个精彩的智力问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/2348">最近几天碰到的几个有趣的问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/1591">Harvard-MIT Mathematics Tournament 2009: Guts Round</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/502">分享一些有趣的面试智力题（下）</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/501">分享一些有趣的面试智力题（上）</a></li>
</ul>

<h3 id="section-12">其它</h3>

<ul>
  <li><a href="http://www.matrix67.com/blog/archives/5330">UyHiP趣题：用最少的称重次数验证硬币的重量</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4793">趣题：舞台里的狮子</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4698">UyHiP趣题：按照盒子的三边长之和来计费有没有漏洞？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4690">趣题：只允许加倍操作的水桶倒水问题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4644">趣题：从1到4000中各位数字之和能被4整除的有多少个？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4491">千万不要迷信规律：大反例合集</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5167">趣题：证明边权递增的路径始终存在</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5182">趣题：Alice和Bob的等值交易</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5070">趣题：证明所有乘积的总和与分拆的方式无关</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/5063">趣题：由0和1构成的虫子</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4746">趣题：所有人手上的糖数最终会变得一样多</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/6090">趣题：竞技场里的狮子能否保证抓住最高速度相同的小明？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/5941">在 2048 里能够得到的最大的数是多少？</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4361">趣题：老鼠与毒药问题的推广</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4318">不动点与线性代数</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/4270">UyHiP趣题：如果每个人都随大流，结果会怎样？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4263">UyHiP趣题：拉灯游戏总有解吗？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/4064">趣题：两步猜出多项式的各项系数</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/1160">趣题：匿名的消息广播</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/996">UyHiP趣题：(√2 +√3)^1948小数点后第48位是多少？</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/959">《从一到无穷大》选谈：思维的尺度</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/701">“解答和题目一样长”：更多的一句话证明</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/548">趣题：不断将各数替换为右侧比其小的数的个数，数列终将不再变化</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/351">等高线模式：解决极大极小问题的另类策略</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/396">趣题：估算小数点后第三位</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/173">Think Outside the Box: 一道原创智力题</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/127">关于套套：最近流行的一道智力题</a></li>
  <li>★ <a href="http://www.matrix67.com/blog/archives/33">非常奇妙的证明：图形必在格点之外</a></li>
  <li><a href="http://www.matrix67.com/blog/archives/83">几个很强的数列</a></li>
</ul>

<h2 id="section-13">总结</h2>

<p>虽然链接数量很多，不过穿插在平时作碎片阅读也会很快的，更何况你会发现看着看着<strong>根本停不下来</strong>！</p>

<p>10 年的时间过去，在博客中评论的同学的博客很多已经寻不见踪迹或停更，但 M 牛还是能一直坚持到今天，真的是不容易。个人揣想，一方面是真的热爱，另一方面围绕这个博客也形成了一个小圈子，大家的期待也是一种动力，再就是为了<strong>吸引 MM</strong> 吧……</p>

<p>如果新浪博客的一些生活杂记也算的话，自己的博龄也四年多了。<strong>回看曾经的一些篇文章，不免觉得幼稚、小家子气</strong>。博客搬到这里也算是一种决裂，从此更多的记录工作生活中的思考、遇到的实际问题与解决方法等，这样一来，文章也会更有<strong>生命力</strong>一些。</p>

<p>M 牛博客的高度是无法企及了，只是希望自己能够坚持下去。</p>

<p><strong>立存此照，以观后效</strong>。</p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/">http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《测试驱动开发和函数式编程》在线演示]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/"/>
    <updated>2014-11-27T16:08:27+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>在 Scala 微信群里了解到了 <a href="http://together.iagile.me/activities/28">《万花筒活动: 测试驱动开发和函数式编程 —— 在线代码演示如何对函数式语言 (Scala) 进行测试驱动开发》</a> 这么一个活动，以在线视频会议的形式举行。跟着讲解抄代码，对 <a href="http://baike.baidu.com/subview/76310/8243857.htm#viewPageContent">TDD</a>（Test-Driven Development）有了点粗浅的了解。</p>

<p>讲解围绕一道叫 <a href="http://codingdojo.org/">KataAnagram</a> 的题目展开，用《哈利·波特》里面的例子很好解释。</p>

<blockquote>
  <p>Tom Marvolo Riddle =&gt; I am Lord Voldemort</p>
</blockquote>

<p>上面是一个字母重排的过程。给定一个单词 S 和一个单词列表 L，要求从 L 中找到两个词（可以重复），用这两个词的全体字母重排出 S。</p>

<p>讲者主要是用这道题讲解测试驱动开发的思路流程，顺便讲解一下如何在代码重构时从 Java 转换到函数式编程的思维，而不是从算法角度考虑最优。</p>

<p>讲者开始提到测试驱动开发的大致思路是</p>

<ol>
  <li>写一个失败的测试；</li>
  <li>写最简单的代码使得测试通过；</li>
  <li>重构代码和测试。</li>
</ol>

<p>2、3 步骤应该是迭代进行的。从以下测试代码的撰写思路上，可以看到想法的逐层深入。</p>

<!-- excerpt end -->

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>测试代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">import</span> <span class="nn">org.junit.Assert.assertEquals</span>
</span><span class="line"><span class="k">import</span> <span class="nn">org.junit.Test</span>
</span><span class="line"><span class="k">import</span> <span class="nn">org.scalatest.junit.JUnitSuite</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">TestAnagram</span> <span class="k">extends</span> <span class="nc">JUnitSuite</span> <span class="o">{</span>
</span><span class="line">
</span><span class="line">	<span class="k">def</span> <span class="n">assertAnagramEqual</span><span class="o">(</span><span class="n">expectedAnagram</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">],</span> <span class="n">input</span><span class="k">:</span> <span class="kt">String</span><span class="o">,</span> <span class="n">wordList</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="k">=</span> <span class="o">{</span>
</span><span class="line">		<span class="k">val</span> <span class="n">generator</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Anagram</span><span class="o">(</span><span class="n">wordList</span><span class="o">)</span>
</span><span class="line">		<span class="n">assertEquals</span><span class="o">(</span><span class="n">expectedAnagram</span><span class="o">,</span> <span class="n">generator</span><span class="o">.</span><span class="n">generate</span><span class="o">(</span><span class="n">input</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>	
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理空单词列表输入</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">empty_word_list_and_input_is_any_word</span> <span class="o">{</span>
</span><span class="line">		<span class="k">val</span> <span class="n">generator</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Anagram</span><span class="o">(</span><span class="nc">List</span><span class="o">())</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(),</span> <span class="s">&quot;anyWord&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">())</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理只含一个元素的单词列表，double 出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">one_character_word_list_and_input_is_double_of_this_word</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a a&quot;</span><span class="o">),</span> <span class="s">&quot;aa&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理只含一个元素的单词列表，不存在符合条件的两单词</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">one_word_list_and_input_has_no_anagram</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(),</span> <span class="s">&quot;bb&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理只含一个元素的单词列表，double 时有字母序的变化</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">one_word_list_and_input_has_anagram_with_different_character_order</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;an an&quot;</span><span class="o">),</span> <span class="s">&quot;anna&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;an&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理含有两个元素的单词列表，最后一个单词 double 出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">two_word_list_and_input_has_anagram_of_second_word</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a a&quot;</span><span class="o">),</span> <span class="s">&quot;aa&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;b&quot;</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理含有三个元素的单词列表，最后一个单词 double 出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">three_word_list_and_input_has_anagram_of_third_word</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a a&quot;</span><span class="o">),</span> <span class="s">&quot;aa&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;c&quot;</span><span class="o">,</span> <span class="s">&quot;b&quot;</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理含有多个元素的单词列表，其中某个单词 double 出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">more_than_one_word_list_and_input_has_anagram_of_single_word</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;b b&quot;</span><span class="o">),</span> <span class="s">&quot;bb&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;c&quot;</span><span class="o">,</span> <span class="s">&quot;b&quot;</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">,</span> <span class="s">&quot;d&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理含有多个元素的单词列表，其中两个单词重排出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">two_word_list_and_input_has_anagram_of_both_word</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a b&quot;</span><span class="o">),</span> <span class="s">&quot;ab&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">,</span> <span class="s">&quot;b&quot;</span><span class="o">))</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a b&quot;</span><span class="o">),</span> <span class="s">&quot;ab&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;c&quot;</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">,</span> <span class="s">&quot;b&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line">	<span class="c1">// 处理含有多个元素的单词列表，其中多对单词重排出单词 S</span>
</span><span class="line">	<span class="nd">@Test</span> <span class="k">def</span> <span class="n">input_has_two_anagrams</span> <span class="o">{</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;a bc&quot;</span><span class="o">,</span> <span class="s">&quot;ab c&quot;</span><span class="o">),</span> <span class="s">&quot;abc&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;a&quot;</span><span class="o">,</span> <span class="s">&quot;bc&quot;</span><span class="o">,</span> <span class="s">&quot;ab&quot;</span><span class="o">,</span> <span class="s">&quot;c&quot;</span><span class="o">))</span>
</span><span class="line">		<span class="n">assertAnagramEqual</span><span class="o">(</span><span class="nc">List</span><span class="o">(</span><span class="s">&quot;ab ab&quot;</span><span class="o">,</span> <span class="s">&quot;ba ba&quot;</span><span class="o">,</span> <span class="s">&quot;ab ba&quot;</span><span class="o">,</span> <span class="s">&quot;abb a&quot;</span><span class="o">),</span> <span class="s">&quot;abba&quot;</span><span class="o">,</span> <span class="nc">List</span><span class="o">(</span><span class="s">&quot;ab&quot;</span><span class="o">,</span> <span class="s">&quot;ba&quot;</span><span class="o">,</span> <span class="s">&quot;abb&quot;</span><span class="o">,</span> <span class="s">&quot;d&quot;</span><span class="o">,</span> <span class="s">&quot;a&quot;</span><span class="o">))</span>
</span><span class="line">	<span class="o">}</span>
</span><span class="line">	
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在功能代码的实现方面，经过了多次函数化重构，最后一种比较简单的方式如下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>功能代码</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="scala"><span class="line"><span class="k">class</span> <span class="nc">Anagram</span><span class="o">(</span><span class="n">wordList</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="o">{</span>
</span><span class="line">
</span><span class="line">	<span class="k">def</span> <span class="n">generate</span><span class="o">(</span><span class="n">input</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span> <span class="k">=</span> <span class="o">{</span>			
</span><span class="line">			
</span><span class="line">		<span class="k">def</span> <span class="n">isAnagram</span><span class="o">(</span><span class="n">candidates</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="k">=</span> <span class="o">(</span><span class="n">candidates</span><span class="o">.</span><span class="n">mkString</span><span class="o">).</span><span class="n">sorted</span> <span class="o">==</span> <span class="n">input</span><span class="o">.</span><span class="n">sorted</span>
</span><span class="line">		
</span><span class="line">		<span class="k">def</span> <span class="n">output</span><span class="o">(</span><span class="n">anagrams</span><span class="k">:</span> <span class="kt">List</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="k">=</span> <span class="n">anagrams</span><span class="o">.</span><span class="n">mkString</span><span class="o">(</span><span class="s">&quot; &quot;</span><span class="o">)</span>
</span><span class="line">
</span><span class="line">		<span class="k">def</span> <span class="n">candidates</span> <span class="k">=</span> <span class="nc">List</span><span class="o">(</span><span class="n">wordList</span><span class="o">,</span> <span class="n">wordList</span><span class="o">).</span><span class="n">transpose</span> <span class="o">++</span> <span class="n">wordList</span><span class="o">.</span><span class="n">combinations</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span>
</span><span class="line">		
</span><span class="line">		<span class="k">return</span> <span class="n">candidates</span><span class="o">.</span><span class="n">filter</span><span class="o">(</span><span class="n">isAnagram</span><span class="o">).</span><span class="n">map</span><span class="o">(</span><span class="n">output</span><span class="o">)</span>
</span><span class="line">		
</span><span class="line">	<span class="o">}</span>
</span><span class="line"><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>历次重构的过程写起来就比较啰嗦了，不在这里列出。不过从测试代码一点点完善的过程里，能够看出一个大致的思路。</p>

<p>对于一个小问题，如果技艺熟练，完全有可能直接写出功能代码的最简形式，不过对于一个较大规模的项目来说，这种做法确实有优势，学习了。</p>

<p>最后附上老师课后分享的资料。</p>

<ul>
  <li><a href="https://github.com/JosephYao/Kata-Anagram/tree/iteration_19/src">代码</a> </li>
  <li><a href="http://www.tudou.com/programs/view/NUPTlyGkVcU/">视频</a></li>
  <li><a href="https://www.evernote.com/shard/s188/sh/55ba699d-05f7-4baa-9032-1692fff28cad/c08df590e81753fef302b5773b3b7d8e">Kata 接力</a></li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/">http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面试经验分享四篇]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/"/>
    <updated>2014-11-25T15:13:28+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian</id>
    <content type="html"><![CDATA[<!-- excerpt start -->

<p>一个月前，我在<a href="http://frank19900731.github.io/blog/2014/10/25/qiu-zhi-ji-de-yi-dian-jing-yan-zhi-tan/">《求职季的一点经验之谈》</a> 的末尾提到，将从 <code>机器学习与大数据</code>、<code>智力题</code>、<code>数据结构与算法</code>、<code>编程语言</code> 四方面分享自己的面试总结，现在总算是把这句话给圆了。</p>

<p>虽然在文章里我也列举了很多题目，但我<strong>尽量不写成面试题解，而是面试经验</strong>。更确切的说，是一些比较容易落实在笔头上的经验，毕竟一些事情不亲身经历，别人磨穿了嘴皮子去描述也是没用的。</p>

<p>具体有哪些经验呢，大概是算法工程师有哪些工作职责，有怎样的能力要求，平时要注重培养自己哪方面的能力，哪些书籍资料有较高阅读价值，以什么样的心态来学习知识、应对考试是比较合适的，怎样转变角色把面试当做促进自身提高的一种反馈机制，等等（其实也没别的了，呵呵）。</p>

<p>多的咱就不说了，<strong>水平有限，欢迎指正；如有裨益，不胜荣幸</strong>。</p>

<p>访问入口：</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">智力题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/18/mian-shi-jing-yan-fen-xiang-zhi-shu-ju-jie-gou-suan-fa-fen-xiang/">数据结构与算法题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">编程语言题</a></li>
</ul>

<!-- excerpt end -->

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/">http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[面试经验分享之编程语言题]]></title>
    <link href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/"/>
    <updated>2014-11-25T10:13:30+08:00</updated>
    <id>http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti</id>
    <content type="html"><![CDATA[<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">概述</a></li>
  <li><a href="#section-2">基础问题</a></li>
  <li><a href="#section-3">进阶问题</a></li>
  <li><a href="#section-4">总结</a></li>
</ul>

<h2 id="section">前言</h2>

<!-- excerpt start -->

<h2 id="section-1">概述</h2>

<p>编程语言题这个设定太狭隘了，应该说是偏工程类的题目，其中有些带有经验性质。出题范围大概是操作系统、数据库、网络、面向对象编程思想、编程语言特性理解和语法掌握等。<strong>相关书籍或或网络教程当然是要看的，但并不意味着你都看了就能有好的发挥，要理论、实践两手抓</strong>。</p>

<p>对于算法工程师岗位来说，这种题目大量出现在笔试试卷中，比如概念理解啦、判断程序的运行输出啦，可以参见我的博客 <a href="http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/">《2014 年百度、腾讯与搜狐的校招笔试回忆》</a>。在这里插入分享在另外一家公司的笔试里遇到的一道有意思的题目。</p>

<p>请问如下程序的输出。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>一道笔试题</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span class="kt">double</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="kt">double</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">99</span><span class="p">;</span>
</span><span class="line"><span class="k">while</span><span class="p">(</span><span class="kc">true</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="kt">double</span> <span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span>
</span><span class="line">	<span class="k">if</span><span class="p">(</span><span class="n">c</span> <span class="o">==</span> <span class="n">a</span> <span class="o">||</span> <span class="n">c</span> <span class="o">==</span> <span class="n">b</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
</span><span class="line">	<span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>
</span><span class="line">	<span class="n">b</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">a</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>解答：</strong></p>

<p style="color: #AAA;">

浮点数判等，会无限循环么？由于浮点数精度有限，所以这个程序迭代个五六十次就终止了，又由于 cout 有默认的输出精度，所以输出结果应该是66。

</p>

<p>面试过程中虽然以算法为主，不过在让你纸上写代码、询问你项目经历的过程中，面试官也能考察出你的工程底子。以下我们分基础问题和进阶问题分别介绍。</p>

<!-- excerpt end -->

<h2 id="section-2">基础问题</h2>

<p>这类基础问题的引子一般是，“你熟悉什么编程语言呀”，“你平常用什么语言比较多呀”，“这个项目你们用什么语言实现的呀”。</p>

<p>如果不是真大牛，就挑一个相对而言自己掌握最熟的语言或最有准备的语言，不要用过啥就说啥。这么一来，无外乎 Java，C/C++，Python，PHP 等几种主流程序语言，Shell、SQL 等都是比较好的添头。就个人对算法工程师和数据挖掘工程师岗位的了解，Python、Scala、Go 很可能是加分项，如果此前没有用过，也可以在面试前学习了解，一句“正在学习”也可以让面试官感受到你的<strong>诚意</strong>哈。</p>

<p>总结自己在面试中被问到的基础问题如下。</p>

<ol>
  <li>面向对象编程的各类问题，多态、虚函数等；</li>
  <li>C++ 和 Java 的区别有哪些；</li>
  <li>你用过这种语言的哪些库；</li>
  <li>对 STL 是否熟悉；</li>
  <li>Java 虚拟机了解么，解释垃圾回收机制的原理；</li>
  <li>线程/进程间通信如何实现，写过多线程的程序么；</li>
  <li>大数据处理框架用过哪些（其实就算是编程语言的杀手应用吧）；</li>
  <li>机器学习、数据可视化的库用过哪些；</li>
  <li>java 中 final 的用法，C/C++ 中的 const 的用法； </li>
  <li>MySQL 的如何建立索引进行查询的，存储方式是怎样的，为什么要分块；</li>
  <li>堆区和栈区的区别在哪里；</li>
  <li>malloc 执行的时候发生了那些事情；</li>
  <li>正则表达式的写法；</li>
  <li>vim 中执行某项操作的快捷键；</li>
  <li>……</li>
</ol>

<p>这些问题想要第一次遇到时就都回答得正确完善恐非易事，主要还在于总结积累。虽然可供考察的知识点和题目变式浩如烟海，但是<strong>一定量的面试能给我们指出高频在哪里</strong>，理由有三。</p>

<ul>
  <li>面试官中的绝大多数也是通过面试选拔上来的，他们在准备的过程中应该也知道常考什么样的问题；</li>
  <li>高频题目提供了可比较性，有筛选价值，而即便你背了网上的解答也可能是不全面的（<strong>我一般把网上看到的和自己的使用经验一起说，显得比较真实…</strong>）；</li>
  <li>有闲情雅致给你出新题、难题的面试官毕竟是少数。</li>
</ul>

<p><strong>这种高频基础题都回答不好，又指望面试官怎么看你呢</strong>。所以说每次面试回来后回忆一下自己遇到的问题，<strong>如果你做出了回答，查一查是否需要修正或补充什么；如果你被问住了，那更得查阅资料学习</strong>。</p>

<h2 id="section-3">进阶问题</h2>

<p>虽然我没有遇到过，但我觉得有两个例子可以表示我对进阶问题的定义。</p>

<ul>
  <li><a href="http://fex.baidu.com/blog/2014/05/what-happen/">从输入 URL 到页面加载完成的过程中都发生了什么？</a></li>
  <li><a href="http://mooc.guokr.com/note/13202/">C 语言编译时发生了什么？</a>，以及扩展阅读 <a href="https://bojieli.com/2014/11/c-compiler/">《编译：一个 C 程序的艺术之旅》</a>。</li>
</ul>

<p>第一个问题曾在微博上引发热议。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-11/3.png" class="img-up" title="微博提问"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-11/3.png" width="80%" title="微博提问" /></a></p>

<p>这种问题既开放又确定。开放在于广度，涉及到的知识点与环节很多，你可以从你了解的部分去叙说；确定在于深度，每一个知识点或环节都是扎实的，不容信口开河。</p>

<p>类似的问题还可以提出很多，不过我们的知识储备未必有那么深广。个人认为，相比于对基础问题的了解，能够较为完善地回答出这类进阶问题，才是 IT 从业者素质与能力的真实体现。</p>

<p>当然，知识的积累要一点一点来，<strong>保持一颗好奇心比功利心或三分钟热血更重要</strong>。</p>

<p><strong>日拱一卒，乐在学中，与君共勉</strong>。</p>

<h2 id="section-4">总结</h2>

<p>用四篇文章分享了自己的面试经验，这是最后一篇。尽力之所及，恰在一个月后兑现了自己的 <a href="http://frank19900731.github.io/blog/2014/10/25/qiu-zhi-ji-de-yi-dian-jing-yan-zhi-tan/">承诺</a>，也算是苦劳一件。</p>

<p>从这四篇总结应该可以看出，本人的应试能力还是比较强的，享受过它带来的好处，也越发体会到它可能带来的弊端，那就是<strong>对技巧的追求超过了知识本身</strong>。</p>

<p>如果不是因为面试或者考试，很多人懒得问自己为什么。一种可能的场景是，程序出错了，Google/百度出了解决方案，调通了，也就过了。<strong>就好像刷题拿了高分，错误中蕴含的价值却没学到</strong>。我也当过很长一段时间这样的人，不过后来发现有些问题重复性的犯，而有些问题有很强的相似性，自己逐渐意识到需要记录错误解决的过程、思考产生错误的原因。坚持一段时间后发现，对原因的探寻不但能够加深记忆，也能够提高自己跨语言、跨应用场景的问题解决能力。</p>

<p>针对面试，或者不仅仅针对面试，我想说我们也可以<strong>假想自己是面试官，在习以为常的场景中多问自己为什么</strong>，学问也都在这里头了。</p>

<p>最后的最后，希望我的面试经验分享可以对各位看官产生一点帮助，比如提早规划、准备；也欢迎大家的提出建议、指出错误。</p>

<p>面试经验分享之 <code>机器学习、大数据问题</code>、<code>智力题</code>、<code>数据结构与算法题</code>、<code>编程语言题</code> 已经撰写完毕，访问入口如下。</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">智力题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/18/mian-shi-jing-yan-fen-xiang-zhi-shu-ju-jie-gou-suan-fa-fen-xiang/">数据结构与算法题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">编程语言题</a></li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
]]></content>
  </entry>
  
</feed>
