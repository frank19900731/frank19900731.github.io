
<item>
    <title>数说 2014</title>
    <link>http://realjenius.com/blog/2014/12/23/shu-shuo-2014/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-12-23T01:31:29+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/12/23/shu-shuo-2014/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">写在前面</a></li>
  <li><a href="#section-1">邮件</a></li>
  <li><a href="#section-2">应用程序</a></li>
  <li><a href="#section-3">网页访问</a></li>
  <li><a href="#section-4">网络流量</a></li>
  <li><a href="#section-5">看过18部电影</a></li>
  <li><a href="#section-6">玩过3款游戏</a></li>
  <li><a href="#section-7">追过9部视频</a></li>
  <li><a href="#section-8">完整读过0本纸版书</a></li>
  <li><a href="#section-9">写了33篇博客</a></li>
  <li><a href="#section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</a></li>
  <li><a href="#section-11">参与报告/讲座/会议20场</a></li>
  <li><a href="#section-12">添置了6个设备</a></li>
  <li><a href="#section-13">参加54场面试，7场笔试</a></li>
  <li><a href="#section-14">其它</a></li>
  <li><a href="#section-15">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">写在前面</h2>

<p>打小对数字和总结有感情，所以就有了这篇 《数说 2014》。</p>

<p><strong>数据不能告诉你全部，但数据对真实情况的刻画比你自以为的更客观</strong>。</p>

<blockquote><p>数据可能给你当头棒喝，因为你在某些方面乏善可陈；</p><p>数据可能让你羞愧难当，因为它拆穿了你的自以为是；</p><p>数据可能令你懊悔不已，因为你看到了大把时间的浪费。</p></blockquote>

<p><strong>希望在年末的细细回望，能督促自己在新的一年里过得更加充实，像个年轻人应该有的样子</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">邮件</h2>

<p>2014 年邮件往来一万余封。</p>

<p>发送方面，126 邮箱（Frank）发出 926 封，gamil 邮箱（宋成儒）发出 255封，负责维护的博士生论坛邮箱（Forum）发出 298 封。</p>

<p>接收方面，数量靠前的，除了讨厌的广告、推荐（好东西传送门还是很赞的，CSDN 偶尔赞），只剩下四个个人账号。</p>

<ul>
  <li>刘新益老师负责就业，发了很多就业相关的信息；</li>
  <li>黄海燕老师在系办负责研究生相关的工作，信息比较杂。</li>
  <li>花隽芃是上任系研会主席，陈苏是上任研会学术副主席，俺作为上任学术助理协助他俩儿举办了清华大学第 366 期博士生论坛，想想也是颇感慨的。</li>
</ul>

<p>具体收发统计如下（图表数据来自 <a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">Chronories</a>，由 <a href="http://www.chartjs.org/">Chart.js</a> 生成，下同）。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="mail-from-legend" style="text-align: left;"></div>
   <canvas id="mail-from" style="margin-top: 20px;"></canvas>
</div>

<p>下图是分时段的收信量统计，看来应该<strong>多在中午十二点和下午六点查收/删除邮件</strong>，感觉是一句废话。</p>

<canvas id="mail-session"></canvas>

<h2 id="section-2">应用程序</h2>

<p>2014 年全年应用程序使用情况统计如下，单位是小时。Launched 表示软件打开（在内存中驻留吧），Active 表示软件使用（获得输入焦点吧）。</p>

<div style="position: relative; width: 100%; margin-bottom: 10px;">
   <canvas id="application-2014"></canvas>
   <div id="application-2014-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>稍作分析</p>

<ul>
  <li>因为 Finder 在系统中始终处于 Launched 状态，所以粗略估计 <strong>2014 年电脑开机时间超过 180 天</strong>；</li>
  <li>Chrome 使用时间远远领先于其它软件，达到 50 天，<strong>结合下节网页访问的统计，不少时间浪费在社交媒体和视频网站上了</strong>。</li>
  <li>开着不用的典型软件是 Google Chrome、Mail、ZOC、Evernote、WeChat、OmniFocus。</li>
  <li>QSanguosha 就是太阳神三国杀，作为唯一一款游戏软件<strong>赫然在列</strong>。</li>
</ul>

<p>其中一些软件是从下半年开始使用的，所以为了更接近目前的状况，还统计了 2014 年下半年应用程序使用情况。</p>

<div style="position: relative;">
   <canvas id="application-2014-half"></canvas>
   <div id="application-2014-half-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>Ulysses、ByWord 使用时间占比增加，Evernote 已经看不见了。</p>

<p><strong>明年希望看到阅读类、笔记类和编程类软件的使用时间有较大提高</strong>。</p>

<h2 id="section-3">网页访问</h2>

<p>域名访问量统计，非一级域名。</p>

<div style="width: 100%; margin-bottom: 20px;">
   <div id="websites-legend" style="text-align: left;"></div>
   <canvas id="websites" style="margin-top: 20px;"></canvas>
</div>

<ul>
  <li>百度访问次数 23316 次还是让我很惊讶的，Google 访问次数是 8605 次。相比与 Google 的专业性，百度的快或许更实用，使用 Google 的场景，<strong>一种是预感肯定百度不到想要结果，另一种是确实没百度到想要的结果</strong>；</li>
  <li>微博（包括 t.cn，绝大部分是从微博来的）、人人（我真心不觉得有这么多访问，但事实就是如此）、优酷，是三大时间吸血鬼，这还不算上移动端的访问；</li>
  <li>localhost 访问次数多是因为有本地调试和本地 Wiki；</li>
  <li>百度百科、github 访问次数排名尚可，略感欣慰。</li>
</ul>

<p><strong>明年，人人、优酷还是算了吧，没什么营养，微博多用客户端，只关注有价值的分组</strong>。</p>

<h2 id="section-4">网络流量</h2>

<p>清华特色网络流量统计，数据来自清华大学校园网，单位 G。</p>

<div style="position: relative; margin-bottom: 10px;">
   <canvas id="network"></canvas>
   <div id="network-legend" style="position: absolute; top: 20px; right: 20px; text-align: left;"></div>
</div>

<p>近来网络访问有些猖獗，没营养又三俗的节目就别看了，<strong>浪费流量事小，浪费生命事大</strong>。</p>

<p>补一句，毕业了最不留恋的就是学校的网络。</p>

<h2 id="section-5">看过18部电影</h2>

<p>对科幻影片依旧无兴趣，没看过欧美电影，也没看过美剧！</p>

<p>喜欢国产写实影片，以及日本虐心片。</p>

<ul>
  <li><a href="http://movie.douban.com/subject/25779218/">匆匆那年（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/24695611/">北平无战事</a></li>
  <li><a href="http://movie.douban.com/subject/24879858/">分手大师</a></li>
  <li><a href="http://movie.douban.com/subject/25805741/">后会无期</a></li>
  <li><a href="http://movie.douban.com/subject/25798222/">亲爱的</a></li>
  <li><a href="http://movie.douban.com/subject/25717233/">心花路放</a></li>
  <li><a href="http://movie.douban.com/subject/10545939/">黄金时代</a></li>
  <li><a href="http://movie.douban.com/subject/24743711/">催眠大师</a></li>
  <li><a href="http://movie.douban.com/subject/3732800/">我们天上见</a></li>
  <li><a href="http://movie.douban.com/subject/3036997/">立春</a></li>
  <li><a href="http://movie.douban.com/subject/4268598/">告白</a></li>
  <li><a href="http://movie.douban.com/subject/1292444/">大逃杀</a></li>
  <li><a href="http://movie.douban.com/subject/24843198/">同桌的你</a></li>
  <li><a href="http://movie.douban.com/subject/24736566/">北京爱情故事（电影）</a></li>
  <li><a href="http://movie.douban.com/subject/1756073/">我们俩</a></li>
  <li><a href="http://movie.douban.com/subject/1293323/">大红灯笼高高挂</a></li>
  <li><a href="http://movie.douban.com/subject/24735062/">青春派</a></li>
  <li><a href="http://movie.douban.com/subject/1291858/">鬼子来了</a></li>
</ul>

<h2 id="section-6">玩过3款游戏</h2>

<ul>
  <li>太阳神三国杀</li>
  <li>千军破2</li>
  <li>影之刃</li>
</ul>

<p>影之刃、千军破2 都是为了网易游戏面试玩的，太阳神三国杀纯消磨时光。太阳神三国杀的 Mac 端那叫一个渣，顺手、过拆就能让程序崩溃，始终无人维护。即便如此，我还玩得挺嗨，也是服了自己。</p>

<p><strong>本年度手机端只有影之刃一款游戏，Mac 端只有太阳神三国杀一款，均已卸载，千军破2 已停玩，望继续保持</strong>。</p>

<h2 id="section-7">追过9部视频</h2>

<ul>
  <li>晓松奇谈（周五）</li>
  <li>罗辑思维（周五）</li>
  <li>鸿观（周五）</li>
  <li>相征（周四）</li>
  <li>都嘟（周三、周六）</li>
  <li>奇葩说（周六、周日）</li>
  <li>历代经济变革得失</li>
  <li>万万没想到、报告老板</li>
  <li><a href="http://i.youku.com/u/UMTE3Njc4ODM2">张坤解说三国杀</a>（不定）</li>
</ul>

<p>看三国杀解说是最无脑的放松方式，虽然我已经多年不上 Online 实操，<strong>明年要戒掉平时的，只看周末娱乐</strong>。</p>

<h2 id="section-8">完整读过0本纸版书</h2>

<p>回想一下好像确实是这样。</p>

<ul>
  <li>到图书馆借书主要是为参阅章节，比如《具体数学》，<strong>特别缺乏系统性学习</strong>；</li>
  <li>今年本身买书就很少，有电子书则不会购买纸质书，主要是考虑到快毕业了，减轻搬家负担；</li>
  <li>读了很多技术教程、博客，人文类书籍阅读很少。</li>
</ul>

<blockquote><p>书读得少人就容易浮躁，视频看得多人就容易浮夸。</p></blockquote>

<p><strong>毕业了就不能以学生身份为借口，何况岁数也不小了，明年要踏踏实实在书籍阅读上给自己做一点规划</strong>。</p>

<h2 id="section-9">写了33篇博客</h2>

<p>新浪博客两篇</p>

<ul>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">Mac实用软件及功能吐血总结</a></li>
  <li><a href="http://blog.sina.com.cn/s/blog_64ac3ab10102uwjo.html">word2vec代码注释</a></li>
</ul>

<p>Github 的博客 31 篇</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/08/24/wo-de-di-yi-pian-octopress-bo-ke/">我的第一篇 Octopress 博客</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/09/01/2015nian-xiao-zhao-ru-kou/">2015年校招入口</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/">提高效率与情趣的九种程序工具推荐</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/16/octopress-gai-zao-ji-lu/">Octopress 改造记录</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/yosemite-sheng-ji-ji-hou-xu/">Yosemite 升级及后续</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/">飞维美地笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/">IDG 联合招聘笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/">记某游戏公司面试经历</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的知识管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/25/qiu-zhi-ji-de-yi-dian-jing-yan-zhi-tan/">求职季的一点经验之谈</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/10/27/wo-de-shi-jian-guan-li-jing-yan-yu-gong-ju-fen-xiang/">我的时间管理经验与工具分享</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">面试经验分享之机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">面试经验分享之智力题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/">一个工具控的效率观</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/18/mian-shi-jing-yan-fen-xiang-zhi-shu-ju-jie-gou-suan-fa-fen-xiang/">面试经验分享之数据结构、算法题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/20/pocket-lei-mu-biao-qian-de-zhi-ding/">Pocket 类目标签的制订</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/">2014 年百度、腾讯与搜狐的校招笔试回忆</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/23/open-workshop-scalacong-ling-dao-ru-men-ke-tang-bi-ji/">《Open Workshop — Scala 从零到入门》课堂笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-zhi-bian-cheng-yu-yan-ti/">面试经验分享之编程语言题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/25/mian-shi-jing-yan-fen-xiang-si-pian/">面试经验分享四篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/27/ce-shi-qu-dong-kai-fa-he-han-shu-shi-bian-cheng-zai-xian-yan-shi/">《测试驱动开发和函数式编程》在线演示</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/29/matrix67-bo-ke-zhong-zhi-li-ti-cu-fen-lei/">Matrix67 博客中智力题粗分类</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/ruo-gan-you-yong-you-qu-de-wang-zhan/">若干有用有趣的网站</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/04/diy-deep-learning-for-vision-a-tutorial-with-caffe-bao-gao-bi-ji/">DIY Deep Learning for Vision: A Tutorial with Caffe 报告笔记</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/">微博卡片 — 微博收藏的可视化</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/14/mei-zhou-ruan-zhi-ri-ji-ruan-jian-chronories/">每周一软之日记软件 Chronories</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/20/wunderlist-tian-jia-kuai-jie-jian-qi-dong/">Wunderlist 添加快捷键启动</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/21/mei-zhou-ruan-zhi-markdown-bi-ji-ruan-jian-ulysses-iii/">每周一软之 Markdown 笔记软件 Ulysses III</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/">数说 2014</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/24/2014-qiu-zhi-hui-wang/">2014 面试终结篇</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/12/28/mei-zhou-yi-ruan-zhi-proxifier/">每周一软之 Proxifier</a></li>
</ul>

<p><strong>明年希望继续减少无病呻吟，保证一周1-2篇。缩短博客撰写时间，书面化的弊端就是耽于形式</strong>。</p>

<h2 id="section-10">撰写周报21篇、月报5篇，完成日常任务打分表80份</h2>

<p>8月11日那周开始写周报，8月末开始写月报，就是在周/月末抽半小时，对照任务管理软件梳理本周/月事项，总结得失，提出下阶段目标。现在回头翻看，说给自己听的鸡汤、对自己提出的批评、骂人/感谢的话等等，都鲜活还原了记录时的场景……</p>

<p>周报、月报对自己而言有三点好处</p>

<ul>
  <li>及时总结，快速调整状态；</li>
  <li><strong>机械、规律的行为，让工作、生活体现出阶段性，这阶段感是我从研究生不再上课以来一直求而不得的，阶段感带来紧张性，有助于避免拖延</strong>；</li>
  <li>汇集成一份完整、真实的年度总结，从中可以看到自己的成长、发现缺点不足，真心不是年底才想写就能够写出来的。</li>
</ul>

<p>10月13日制定日常任务完成度打分表并开始执行，目前每天在50分左右徘徊，明年应该会有大修订，并<strong>争取更高的完成度</strong>。</p>

<p>根据周报、月报的记录，自己这一年<strong>在加强运动、规律作息方面做的最差</strong>，特别是进入冬季以后。要向6月到8月的表现看齐，早七点半、晚十一点半，上班后应该就能做到吧。</p>

<h2 id="section-11">参与报告/讲座/会议20场</h2>

<ul>
  <li>Randomized Methods in Big Data Analytics, Ping Ma</li>
  <li>阿里图像搜索分享，雷音</li>
  <li>ICML 2014</li>
  <li>Statistical Learning Theory, Jerry Zhu</li>
  <li>CCF ADL-46 机器学习</li>
  <li>The Future of Mobile Computing, Hedy Lamarr</li>
  <li>Deep Learning in Object Detection, Segmentation, and Recognition, Xiaogang Wang</li>
  <li>Imaging Arithmetic Physics U Math &gt; Physics + Math, Gaurav Sharma</li>
  <li>Making the Impossible Possible Randomized Machine Learning Algorithms for Big Data, Rong Jin</li>
  <li>移动互联网时代的大数据挖掘技术研讨会，三星</li>
  <li>DIY Deep Learning for Vision: A Tutorial with Caffe</li>
  <li>Scaling Deep Learning, Jeaf Dean</li>
  <li>百度、阿里深度学习碰撞，余凯、漆远 </li>
  <li>百度技术沙龙53期，基于大数据的预测实践</li>
  <li>无穷沙龙 互联网泡沫真的来了吗</li>
  <li>无穷沙龙 走近 HTML5 的应用生态</li>
  <li>FreeWheel 技术分享，王迪</li>
  <li>万花筒活动: 测试驱动开发和函数式编程，姚若舟</li>
  <li>Open Workshop — Scala 从零到入门，吴雪峰</li>
  <li>码农大会 Spark 分享，连城</li>
</ul>

<p>如果听的时候热血沸腾，散场了就忘了个干净，那真的就是浪费了时间，不如不去。所以参加报告/讲座/会议一定要注意三点</p>

<ul>
  <li>认真听、认真记，不要指望自己会再听一遍录音/看一遍录像；</li>
  <li><strong>带着问题听，积极提问</strong>；</li>
  <li><strong>务必在当天查一查在听讲中遇到的陌生技术与概念，考虑是否可以为己所用</strong>。</li>
</ul>

<h2 id="section-12">添置了6个设备</h2>

<ul>
  <li>希捷 4T 移动硬盘，快毕业了，赶紧从北邮人、六维扒东西；</li>
  <li>三星 1T SSD，血本效率投资，还是很值的；</li>
  <li>Apple Magic Trackpad，基本没用;</li>
  <li>Wacom 数位板，写公式、画草图很实用；</li>
  <li>红米 Note，与中国移动携手保障了求职季里的通信畅通；</li>
  <li>小米手环，当闹钟用很实在。</li>
</ul>

<h2 id="section-13">参加54场面试，7场笔试</h2>

<p>其中实习面试 5 面，求职面试 49 面（电面 5 面）。</p>

<p>面试大部分集中在 9、10 月份，从八月初开始准备。一个自认为比较好也比较推荐的习惯是，<strong>在笔试、面试过后立刻回忆内容，针对弱点和错误进行学习完善</strong>。我的一般做法是从面试地点出来后用手机录制自己的快速复述，并务必在当年做书面化整理。</p>

<h2 id="section-14">其它</h2>

<ul>
  <li>运动健康统计缺乏数据，期待小米手环能开放 API；</li>
  <li>阅读论文篇数、写代码行数未知，明年要做规范的整理和统计，不是说越多越好，而是要用心积累；</li>
  <li>和父母的联系次数很多，和父母呆在一起的天数很少，想想就要工作了，可以拿来陪父母的时间又少了，不免伤感。</li>
</ul>

<h2 id="section-15">总结</h2>

<p>2014年，自己最深刻的一个感受是自身想法、观念变化越来越快，因为即将面临的是人生很重要的过渡期——从读书到工作。有压力，才会逼迫自己去思考之前懒得思考的问题。随着经验的累积、信息的收集与分析、和他人沟通讨论的深入，逐渐在自己身上发现了一些可喜的变化。不夸张地说，有时候回头看一个月前的自己，都会觉得幼稚可笑。</p>

<p><strong>有方向的忙碌才是充实</strong>，庆幸自己在2014年即将结束的时候，似乎找到了自己的方向，而属于2014年的诸多遗憾，希望在新的一年一一实现。</p>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/Chart.js"></script>

<script type="text/javascript" src="http://frank19900731.github.io/javascripts/mychart.js"></script>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/">http://frank19900731.github.io/blog/2014/12/23/shu-shuo-2014/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>微博卡片 — 微博收藏的可视化</title>
    <link>http://realjenius.com/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-12-09T15:23:26+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/</guid>
    <description><![CDATA[
     <!-- excerpt start -->

<p>平时自己会有一些新浪微博的收藏，主要是跟自己专业、兴趣相关的资讯、资料，随着积累的增多，如何有效回顾这些收藏成为了一个问题。</p>

<p>使用新浪微博自带的收藏页面，感觉翻页浏览不便；后来会在收藏的同时，把微博内容、图片分门别类拷贝到笔记中，但又不便于可视化。于是萌生了自己做一个微博可视化页面的想法，采用较为流行的瀑布流布局，每一条微博以卡片的形式展示。给出 <a href="https://github.com/frank19900731/weibocard">项目地址</a>  和 <a href="http://frank19900731.github.io/weibocard-demo/">Demo</a>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-12/25.png" class="img-up" title="微博卡片 Demo"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-12/25.png" width="80%" title="微博卡片 Demo" /></a></p>

<p>项目使用新浪微博 Python SDK 抓取已收藏的微博，mongodb 做存储，根据查询条件生成 json 文件供前端可视化，前端瀑布流是从 <a href="http://www.imooc.com/learn/101">这门课</a> 中学到的。多说一句，慕课网里关于前端的教学内容非常丰富，很适合我这种半瓶醋选手……</p>

<p>我只简单地实现了时间区间的提取，不过有了微博数据和可视化骨架在，定制精细化的整理、阅读方式应该不难。</p>

<!-- excerpt end -->

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/">http://frank19900731.github.io/blog/2014/12/09/wei-bo-qia-pian-wei-bo-shou-cang-de-ke-shi-hua/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>提高效率与情趣的九种程序工具推荐</title>
    <link>http://realjenius.com/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-10-16T17:28:06+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">选题目的</a></li>
  <li><a href="#section-1">介绍角度</a></li>
  <li><a href="#section-2">代码开发篇</a>    <ul>
      <li><a href="#section-3">引言</a></li>
      <li><a href="#git">Git</a></li>
      <li><a href="#shell-script">Shell Script</a></li>
    </ul>
  </li>
  <li><a href="#section-4">文档整理篇</a>    <ul>
      <li><a href="#section-5">引言</a></li>
      <li><a href="#markdown">Markdown</a></li>
      <li><a href="#octopress">Octopress</a></li>
      <li><a href="#knitr">knitr</a></li>
    </ul>
  </li>
  <li><a href="#section-6">自我展示篇</a>    <ul>
      <li><a href="#tpp2">tpp</a></li>
      <li><a href="#jmpressjs">jmpress.js</a></li>
    </ul>
  </li>
  <li><a href="#section-7">数据展示篇</a>    <ul>
      <li><a href="#shiny">Shiny</a></li>
      <li><a href="#d3">D3</a></li>
    </ul>
  </li>
  <li><a href="#section-8">其它工具</a></li>
  <li><a href="#section-9">总结</a></li>
</ul>

<!-- excerpt start -->
<p>自己平时爱鼓捣些工程上的小玩意儿，在一次实验室的Paper Reading上给大家分享了自己的一点体会，给大家推荐了几款能够提高工作效率与生活情趣的工具，整理于此。</p>

<p>想了解更多有趣的工具，请持续关注 <a href="http://frank19900731.github.io/category/%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87/">工作效率</a> 分类。</p>

<h2 id="section">选题目的</h2>

<ul>
  <li>把自己知道的，用过的，感觉有意思或有用的分享给大家，实现自己的知识梳理与输出</li>
  <li>让大家在遇到类似应用场景的时候知道有某种工具是很适用的</li>
  <li>督促大家掌握某种工具（比如 git，shell，markdown ），进而提升工作效率，也可以以工具为杠杆撬动更多的资源</li>
</ul>

<h2 id="section-1">介绍角度</h2>
<ul>
  <li>类型</li>
  <li>星级评定（1星-5星）
    <ul>
      <li>入门难度</li>
      <li>实用性</li>
      <li>装X效果</li>
    </ul>
  </li>
  <li>描述</li>
  <li>适用场合</li>
  <li>实例说明</li>
  <li>参考资料</li>
</ul>

<!-- excerpt end -->

<h2 id="section-2">代码开发篇</h2>

<h3 id="section-3">引言</h3>
<p>摘自<a href="http://www.oschina.net/question/817257_112066">《程序员装逼指南》</a></p>

<blockquote><p>千万不要说自己是做Java或者.Net的，一下子就屌丝了。</p><p>PHP也不行，Python稍微有点烂大街，但还是明显要强过前几个。</p><p>剩下的可以说自己是做Ruby的，但不要做Rails，说Sinatra。</p><p>Go、Erlang、Clojure、Scala能给80分，你要是说会个Lisp就是85分，Haskell直接捅到90分，但是千万注意，一定要说只是精通Haskell，没事喜欢研究Haskell，千万不要说干这个的。</p><p>最后再拽出来一个Prolog就成仙了。</p><p>如果怕被继续追问就说自己做C++的，就是放了个大烟雾弹，让对面也猜不透究竟有几斤几两。</p><p>C是什么？不知道。</p></blockquote>

<p>以上顺序列举的编程语言（C、C++除外）学习难度增大，对逻辑思维能力要求提升，代码实现向人的思维靠拢。</p>

<p>TIOBE程序语言排行榜<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>，2014年5月最新统计（括号内前一数值为排名，后一数值为占比）：</p>

<p>Java（2，16.907%）</p>

<p>.Net（C# 6，3.745%，VB.NET 11，1.264%，F# 13，1.030%）</p>

<p>PHP（7，3.386%） Python（8，3.057%）</p>

<p>Ruby（12，1.242%）</p>

<p>Go（31，0.423%） Erlang（47，0.236%） Clojure（65, -） Scala（35，0.331）</p>

<p>Lisp（16，0.967）</p>

<p>Haskell（40，0.281%）</p>

<p>Prolog（45，0.252%）</p>

<p>C++ （4，5.986%）</p>

<p>C （1，16.926%）</p>

<p>以上结果与《程序员装逼指南》中对编程语言的逼格划定大致接近。</p>

<p>至于C、C++，个人感觉，它们向来是程序员入门语言，使用的人也很多，但真正驾驭它们还是很难的。有兴趣请移步欣赏 <a href="http://v.youku.com/v_show/id_XNzEyMDU2NDYw.html">猿泡沫</a></p>

<p>更多有关程序语言的种类与它们之间的程序关联请见 <a href="http://exploringdata.github.io/vis/programming-languages-influence-network/">编程语言关系图</a>，这是一件优美的数据可视化作品，托管于Github。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/1.png" class="img-up" title="程序语言关系图"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/1.png" width="80%" title="程序语言关系图" /></a></p>

<p>扯远了，举例说明与人类语言、思维相近的编程语言：</p>

<ul>
  <li>Haskell</li>
</ul>

<p>Haskell号称“证明即程序，命题为类型”。</p>

<p>以下代码中，<code>[a | a &lt;- xs, a &lt;= x]</code> 是集合语言，<code>smallerSorted ++ [x] ++ biggerSorted</code> 蕴含了递归。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Haskell 快速排序</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="haskell"><span class="line"><span class="nf">quicksort</span> <span class="ow">::</span> <span class="p">(</span><span class="kt">Ord</span> <span class="n">a</span><span class="p">)</span> <span class="ow">=&gt;</span> <span class="p">[</span><span class="n">a</span><span class="p">]</span> <span class="ow">-&gt;</span> <span class="p">[</span><span class="n">a</span><span class="p">]</span>
</span><span class="line"><span class="nf">quicksort</span> <span class="kt">[]</span> <span class="ow">=</span> <span class="kt">[]</span>
</span><span class="line"><span class="nf">quicksort</span> <span class="p">(</span><span class="n">x</span><span class="kt">:</span><span class="n">xs</span><span class="p">)</span> <span class="ow">=</span>
</span><span class="line">  <span class="kr">let</span> <span class="n">smallerSorted</span> <span class="ow">=</span> <span class="n">quicksort</span> <span class="p">[</span><span class="n">a</span> <span class="o">|</span> <span class="n">a</span> <span class="ow">&lt;-</span> <span class="n">xs</span><span class="p">,</span> <span class="n">a</span> <span class="o">&lt;=</span> <span class="n">x</span><span class="p">]</span>
</span><span class="line">      <span class="n">biggerSorted</span> <span class="ow">=</span> <span class="n">quicksort</span> <span class="p">[</span><span class="n">a</span> <span class="o">|</span> <span class="n">a</span> <span class="ow">&lt;-</span> <span class="n">xs</span><span class="p">,</span> <span class="n">a</span> <span class="o">&gt;</span> <span class="n">x</span><span class="p">]</span>
</span><span class="line">  <span class="kr">in</span> <span class="n">smallerSorted</span> <span class="o">++</span> <span class="p">[</span><span class="n">x</span><span class="p">]</span> <span class="o">++</span> <span class="n">biggerSorted</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Prolog</li>
</ul>

<p>人工智能中的演绎推理，谓词逻辑。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>Prolog 示例</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="prolog"><span class="line"><span class="nf">human</span><span class="p">(</span><span class="s-Atom">kate</span><span class="p">).</span>
</span><span class="line"><span class="nf">human</span><span class="p">(</span><span class="s-Atom">bill</span><span class="p">).</span>
</span><span class="line"><span class="nf">likes</span><span class="p">(</span><span class="s-Atom">kate</span><span class="p">,</span><span class="s-Atom">bill</span><span class="p">).</span>
</span><span class="line"><span class="nf">friend</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span><span class="nv">Y</span><span class="p">):-</span><span class="nf">likes</span><span class="p">(</span><span class="nv">X</span><span class="p">,</span><span class="nv">Y</span><span class="p">),</span><span class="nf">likes</span><span class="p">(</span><span class="nv">Y</span><span class="p">,</span><span class="nv">X</span><span class="p">).</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>引言讲了这么多，意义何在？</strong></p>

<ul>
  <li>茶余饭后的谈资；</li>
  <li>程序语言的设计也是一门很深的学问，流行的语言有自身的优势，小众的语言也有不俗的理念，多一些了解有助于我们认清程序语言——我们每天打交道的日常工具——的本质属性；</li>
  <li>程序语言是开源世界的钥匙。</li>
</ul>

<h3 id="git">Git</h3>

<p><strong>类型</strong>  ——  版本控制</p>

<p><strong>入门难度</strong>  ——  ★✩✩✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★★</p>

<p><strong>装X效果</strong>  ——  ★★✩✩✩</p>

<p><strong>描述</strong></p>

<ul>
  <li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137402760310626208b4f695940a49e5348b689d095fc000">Git诞生的故事</a></li>
  <li>集中式（SVN为代表） vs 分布式（Git为代表）</li>
  <li>SVN与Git的区别与优劣争论有很多，不予详述，但Github着实具有很强的吸引力</li>
  <li>Github Education
    <ul>
      <li>Private空间免费使用</li>
      <li>教学使用
        <ul>
          <li>收发作业的平台</li>
          <li>自动测试</li>
        </ul>
      </li>
      <li>申请方式
        <ul>
          <li>个人名义：需要学校邮箱，立即审核通过，5个private项目</li>
          <li>组织名义：一周审批时间，可能不通过……</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Github 提供免费空间建站，如本站
    <ul>
      <li>稳定性强，小网站不太担心流量冲击</li>
    </ul>
  </li>
  <li>在自己的linux系统上搭建git服务器（gitosis），并安装Gitweb提供外部访问
    <ul>
      <li>适合小团队内部使用，比如实验室，但要注意备份！</li>
      <li>项目访问权限可控，网页上项目可见性可控</li>
    </ul>
  </li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>代码分享</li>
  <li>合作开发
    <ul>
      <li>版本控制</li>
      <li>冲突合并</li>
      <li>新功能添加</li>
      <li>Bug查找</li>
    </ul>
  </li>
</ul>

<p>详见参考资料中的实用教程。</p>

<p><strong>实例说明</strong></p>

<p>Github建站实例：<a href="http://gabrielecirulli.github.io/2048/">2048游戏</a></p>

<p>Gitweb实例：<a href="https://git-wip-us.apache.org/repos/asf?p=spark.git;a=summary">Spark</a></p>

<p><strong>参考资料</strong></p>

<p><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git实用教程</a></p>

<p><a href="http://wiki.ubuntu.org.cn/index.php?title=Git%E6%9C%8D%E5%8A%A1%E5%99%A8Gitosis%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE&amp;variant=zh-hans">Git服务器配置</a></p>

<h3 id="shell-script">Shell Script</h3>

<p><strong>类型</strong>  ——  文本处理，系统设置</p>

<p><strong>入门难度</strong>  ——  ★★✩✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★★</p>

<p><strong>装X效果</strong>  ——  ★★★★✩</p>

<p><strong>描述</strong></p>

<ul>
  <li>Shell：操作系统中，提供访问内核所提供之服务的程序，比如终端（Terminal）。</li>
  <li>Bourne Again Shell (bash)
    <ul>
      <li>bash是GNU计划的一部分，用于基于GNU的系统如Linux。大多数的Linux都以bash作为缺省的shell。</li>
    </ul>
  </li>
  <li>Shell Scripts 书写与matlab脚本类似，使用变量、逻辑控制、linux命令等完成较为底层的操作
    <ul>
      <li>环境变量设置，如在hadoop设置中的运用</li>
      <li>文本处理，如网站log分析、天猫大赛数据处理</li>
      <li>复杂功能的集成与自动运行，如下文中tunet自动登录脚本</li>
    </ul>
  </li>
  <li>文本处理 awk/gawk sed</li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>文本数据（特别是有规范格式的）处理</li>
  <li>重复性劳动</li>
</ul>

<p><strong>实例说明</strong></p>

<p>tunet登录脚本（摘自网络），实测可用：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>tunet 登录脚本 </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/bash</span>
</span><span class="line"><span class="c"># your info&#39;s username</span>
</span><span class="line"><span class="nv">uname</span><span class="o">=</span>your account name
</span><span class="line"><span class="c"># your info&#39;s password&#39;s md5sum</span>
</span><span class="line"><span class="nv">pass</span><span class="o">=</span>md5sum of your password
</span><span class="line"><span class="c">####################################################</span>
</span><span class="line">do_login<span class="o">()</span> <span class="o">{</span>
</span><span class="line"><span class="nv">login_data</span><span class="o">=</span><span class="s1">&#39;username=&#39;</span><span class="nv">$uname</span><span class="s1">&#39;&amp;password=&#39;</span><span class="nv">$pass</span><span class="s1">&#39;&amp;drop=0&amp;type=1&amp;n=100&#39;</span>
</span><span class="line"><span class="nv">check_data</span><span class="o">=</span><span class="s1">&#39;action=check_online&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c"># check whether already online</span>
</span><span class="line"><span class="nv">con</span><span class="o">=</span><span class="sb">`</span>curl -d <span class="nv">$check_data</span> -s http://net.tsinghua.edu.cn/cgi-bin/do_login<span class="sb">`</span>
</span><span class="line">
</span><span class="line"><span class="k">if</span> <span class="o">[</span> -z <span class="nv">$con</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="c"># start login</span>
</span><span class="line"><span class="nv">res</span><span class="o">=</span><span class="sb">`</span>curl -d <span class="nv">$login_data</span> -s http://net.tsinghua.edu.cn/cgi-bin/do_login<span class="sb">`</span>
</span><span class="line">
</span><span class="line"><span class="c">#handle result</span>
</span><span class="line"><span class="nv">pe</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$res</span> | grep error<span class="sb">`</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> -z <span class="nv">$pe</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Login Success!&quot;</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="nb">echo</span> <span class="nv">$pe</span>
</span><span class="line"><span class="nb">exit </span>0
</span><span class="line"><span class="k">fi</span>
</span><span class="line">
</span><span class="line"><span class="c"># display flux infomation</span>
</span><span class="line"><span class="nv">flux</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$res</span> | awk -F <span class="s1">&#39;,&#39;</span> <span class="s1">&#39;{print $3}&#39;</span><span class="sb">`</span>
</span><span class="line"><span class="nv">a</span><span class="o">=</span><span class="k">$((</span><span class="nv">$flux</span><span class="o">/</span><span class="m">1000000000</span><span class="k">))</span>
</span><span class="line"><span class="nv">b</span><span class="o">=</span><span class="k">$((</span><span class="o">(</span><span class="nv">$flux</span><span class="o">%</span><span class="m">1000000000</span><span class="o">)/</span><span class="m">100000000</span><span class="k">))</span>
</span><span class="line"><span class="nv">c</span><span class="o">=</span><span class="k">$((</span><span class="o">(</span><span class="nv">$flux</span><span class="o">%</span><span class="m">100000000</span><span class="o">)/</span><span class="m">10000000</span><span class="k">))</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Used Flux: &quot;</span><span class="nv">$a</span><span class="s2">&quot;.&quot;</span><span class="nv">$b$c</span><span class="s2">&quot;G.&quot;</span>
</span><span class="line">
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Already Online!&quot;</span>
</span><span class="line">
</span><span class="line"><span class="c"># display flux information and online time</span>
</span><span class="line"><span class="nv">flux</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$con</span> | awk -F <span class="s1">&#39;,&#39;</span> <span class="s1">&#39;{print $3}&#39;</span><span class="sb">`</span>
</span><span class="line"><span class="nb">time</span><span class="o">=</span><span class="sb">`</span><span class="nb">echo</span> <span class="nv">$con</span> | awk -F <span class="s1">&#39;,&#39;</span> <span class="s1">&#39;{print $5}&#39;</span><span class="sb">`</span>
</span><span class="line"><span class="nv">a</span><span class="o">=</span><span class="k">$((</span><span class="nv">$flux</span><span class="o">/</span><span class="m">1000000000</span><span class="k">))</span>
</span><span class="line"><span class="nv">b</span><span class="o">=</span><span class="k">$((</span><span class="o">(</span><span class="nv">$flux</span><span class="o">%</span><span class="m">1000000000</span><span class="o">)/</span><span class="m">100000000</span><span class="k">))</span>
</span><span class="line"><span class="nv">c</span><span class="o">=</span><span class="k">$((</span><span class="o">(</span><span class="nv">$flux</span><span class="o">%</span><span class="m">100000000</span><span class="o">)/</span><span class="m">10000000</span><span class="k">))</span>
</span><span class="line"><span class="nv">h</span><span class="o">=</span><span class="k">$((</span><span class="nv">$time</span><span class="o">/</span><span class="m">3600</span><span class="k">))</span>
</span><span class="line"><span class="nv">m</span><span class="o">=</span><span class="k">$(($((</span><span class="nv">$time</span><span class="o">%</span><span class="m">3600</span><span class="k">))</span><span class="o">/</span><span class="m">60</span><span class="k">))</span>
</span><span class="line"><span class="nv">s</span><span class="o">=</span><span class="k">$(($((</span><span class="nv">$time</span><span class="o">%</span><span class="m">3600</span><span class="k">))</span><span class="o">%</span><span class="m">60</span><span class="k">))</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Used Flux: &quot;</span><span class="nv">$a</span><span class="s2">&quot;.&quot;</span><span class="nv">$b$c</span><span class="s2">&quot;G, Online Time: &quot;</span><span class="nv">$h</span><span class="s2">&quot;:&quot;</span><span class="nv">$m</span><span class="s2">&quot;:&quot;</span><span class="nv">$s</span><span class="s2">&quot;.&quot;</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line">do_logout<span class="o">()</span> <span class="o">{</span>
</span><span class="line"><span class="c"># start logout</span>
</span><span class="line"><span class="nv">res</span><span class="o">=</span><span class="sb">`</span>curl -s http://net.tsinghua.edu.cn/cgi-bin/do_logout<span class="sb">`</span>
</span><span class="line">
</span><span class="line"><span class="c">#handle result</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$res&quot;</span> <span class="o">==</span> <span class="s2">&quot;logout_ok&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Logout Success!&quot;</span>
</span><span class="line"><span class="k">elif</span> <span class="o">[</span> <span class="s2">&quot;$res&quot;</span> <span class="o">==</span> <span class="s2">&quot;not_online_error&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;You&#39;re not Online!&quot;</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Operation Failed!&quot;</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line"><span class="o">}</span>
</span><span class="line">
</span><span class="line"><span class="c">##################################################################################</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">==</span> <span class="s2">&quot;login&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line">do_login
</span><span class="line"><span class="k">elif</span> <span class="o">[</span> <span class="s2">&quot;$1&quot;</span> <span class="o">==</span> <span class="s2">&quot;logout&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line">do_logout
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="nb">echo</span> <span class="s2">&quot;Usage: &quot;</span><span class="nv">$0</span><span class="s2">&quot; {login|logout}&quot;</span>
</span><span class="line"><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>参考资料</strong></p>

<p>任意一本shell入门教程</p>

<h2 id="section-4">文档整理篇</h2>

<h3 id="section-5">引言</h3>

<p>摘自<a href="http://www.cnblogs.com/rollenholt/articles/2235713.html">《高级程序员装逼指南》</a></p>

<blockquote><p>在CSDN/ITeye/cnblogs这种地方写技术博客确实比在人人上写技术博客好多了</p><p>但是你要知道，大牛们都是有自己的个人网站的</p><p>而且，一个共同点是，他们的网站都是自己写的html（没有css）并且界面十分难看</p><p>整个网站散发着一种“我这的文章都很牛所以界面什么的都不重要”的气质</p><p>例如这个 <a href="http://xahlee.org/index.html" target="_blank">http://xahlee.org/index.html</a></p></blockquote>

<p><a href="http://frank19900731.github.io/img/post/2014-10/3.png" class="img-up" title="李杀网截屏"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/3.png" width="70%" title="李杀网截屏" /></a></p>

<p>当然，用优美的外在包裹充实的内在，总还是更加让人赏心悦目的。</p>

<p><strong>这个引言的目的是……</strong></p>

<ul>
  <li>输出重要，积累重要，有个网站就更好了。</li>
</ul>

<h3 id="markdown">Markdown</h3>

<p><strong>类型</strong>  ——  微量级文本标记语言</p>

<p><strong>入门难度</strong>  ——  ★✩✩✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★★</p>

<p><strong>装X效果</strong>  ——  ★★✩✩✩</p>

<p><strong>描述</strong></p>

<ul>
  <li>Evernote？有道笔记？XX笔记？
    <ul>
      <li>编辑复杂，小word</li>
      <li>先天不足，不是给科研人员用的，而是给大众记录用的，文字、图片、音频</li>
      <li>部分有偿使用，高级功能要收费</li>
      <li>分享方式单一</li>
    </ul>
  </li>
  <li>文档编辑类软件的一种趋势让人<strong>更专注于内容，而非格式</strong>，不必频繁在输入区和菜单工具栏之间切换</li>
  <li>语法简洁，容易学习（5分钟足够）</li>
  <li>导出格式丰富，latex，html，pdf，ebook，mobi……</li>
  <li><strong>样式丰富，内容与样式独立</strong>，由css文件及与之类似文件定制样式，称为主题</li>
  <li>扩展丰富
    <ul>
      <li>latex公式输入</li>
      <li>插入代码块 highlight.js</li>
      <li>……</li>
    </ul>
  </li>
  <li>较多在线编辑器可供使用，如<a href="https://www.zybuluo.com/mdeditor">作业部落</a>，Chrome插件 MaDe</li>
  <li>Github、StackOverflow、Google Code都支持</li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>快速写出有公式、有代码的笔记报告</li>
  <li>能够以较多方式分享自己的报告，特别是放在自己的个人主页上</li>
</ul>

<p><strong>实例说明</strong></p>

<p>本页面</p>

<p><strong>参考资料</strong></p>

<p><a href="http://wowubuntu.com/markdown/">markdown语法说明</a></p>

<h3 id="octopress">Octopress</h3>

<p><strong>类型</strong>  ——  博客</p>

<p><strong>入门难度</strong>  ——  ★★★✩✩</p>

<p><strong>实用性</strong>  ——  ★★★✩✩</p>

<p><strong>装X效果</strong>  ——  ★★★★✩</p>

<p><strong>描述</strong></p>

<ul>
  <li><a href="http://blog.csdn.net/pongba/article/details/3896311">《[BetterExplained]为什么你应该（从现在开始就）写博客》</a></li>
  <li>Wordpress？ 摘自 <a href="http://www.tuicool.com/articles/rA7Bjq">从wordpress到octopress</a>
    <ul>
      <li>编辑环境复杂</li>
      <li>臃肿，累赘功能多</li>
      <li>定制性差</li>
      <li>过度依赖数据库，数据安全性低</li>
      <li>速度慢，优化门槛高</li>
      <li>迁移成本高</li>
    </ul>
  </li>
  <li>所需知识
    <ul>
      <li>ruby基础知识</li>
      <li>Git基本命令</li>
      <li>Github用法</li>
    </ul>
  </li>
  <li>基于Jekyll</li>
  <li><strong>纯静态</strong>，响应快</li>
  <li><strong>版本化管理</strong>，Word及其他笔记软件无法提供</li>
  <li><strong>不依赖数据库</strong>，Disqus、多说</li>
  <li><strong>定制容易，开源支持多</strong></li>
  <li><strong>支持Markdown</strong></li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>文章内容以文字图片居多，不需要视频音频或者华丽的动画效果</li>
</ul>

<p><strong>实例说明</strong></p>

<p>本博客</p>

<p><strong>参考资料</strong></p>

<p><a href="http://blog.devtang.com/blog/2012/02/10/setup-blog-based-on-github/">Github搭建Octopress博客的方法</a></p>

<h3 id="knitr">knitr</h3>

<p><strong>类型</strong>  ——  自动化报告</p>

<p><strong>入门难度</strong>  ——  ★★★✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★★</p>

<p><strong>装X效果</strong>  ——  ★★✩✩✩</p>

<p><strong>描述</strong></p>

<ul>
  <li>国人写的R包，出于对功能相近的 Sweave 的不满足</li>
  <li>代码与文档混编，编译时执行代码输出结果（数据、图片）
    <ul>
      <li><strong>数据可伪造，图形可拷贝，只有源代码是最可靠的</strong></li>
      <li>代码可以进行版本管理</li>
    </ul>
  </li>
  <li>文学化编程，Knuth</li>
  <li>支持 latex，markdown 等多种文档类型</li>
  <li><a href="http://ggplot2.org/">ggplot2</a> 的诱惑力
    <ul>
      <li>入门缓慢，功能强大</li>
    </ul>
  </li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>收取、检查作业</li>
  <li>写一份图文码并茂的报告</li>
</ul>

<p><strong>实例说明</strong></p>

<p><a href="http://www.rpubs.com/">RPubs</a></p>

<p><strong>参考资料</strong></p>

<p><a href="http://yihui.name/knitr/">knitr官网</a> 顺便说一句，这个官网就是用Octopress搭建的</p>

<h2 id="section-6">自我展示篇</h2>

<h3 id="tpp2">tpp<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup></h3>

<p><strong>类型</strong>  ——  命令行展示</p>

<p><strong>入门难度</strong>  ——  ★✩✩✩✩</p>

<p><strong>实用性</strong>  ——  ★★✩✩✩</p>

<p><strong>装X效果</strong>  ——  ★★★★✩</p>

<p><strong>描述</strong></p>

<ul>
  <li>基于ncurses（字符终端处理库），ruby-ncurses，figlet（字符图）</li>
  <li>名称来源是PPT的逆向</li>
  <li>语法极易（1分钟？）</li>
  <li>支持中文</li>
  <li>支持导出latex、txt格式</li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>纯linux命令行下文档记录、演示</li>
</ul>

<p><strong>实例说明</strong></p>

<p><a href="http://songchengru.eicp.net/tpp/">展示效果</a> in Chrome Extension - Secure Shell</p>

<p><strong>参考资料</strong></p>

<p><a href="http://www.ngolde.de/tpp.html">官网</a></p>

<p><a href="https://github.com/chinageek/fun/tree/master/tpp">实例代码</a></p>

<p><a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=705965">字符编码 bug fix</a></p>

<h3 id="jmpressjs">jmpress.js</h3>

<p><strong>类型</strong>  ——  浏览器富动态效果展示</p>

<p><strong>入门难度</strong>  ——  ★★★★✩</p>

<p><strong>实用性</strong>  ——  ★★★✩✩</p>

<p><strong>装X效果</strong>  ——  ★★★★★</p>

<p><strong>描述</strong></p>

<ul>
  <li>非线性展示
    <ul>
      <li>一个页面</li>
      <li>区域间可跳跃</li>
      <li>位移、缩放与旋转</li>
      <li>揭示概念、事物间的复杂联系</li>
      <li>动态思维导图</li>
    </ul>
  </li>
  <li>Prezi vs jmpress.js
    <ul>
      <li>Adobe Flash &amp; Flex vs HTML5</li>
      <li>臃肿 vs 轻量级</li>
      <li>扩展受限（中文、字体等） vs 开源支持（大量js功能支持）</li>
      <li>所见即所得 vs 较复杂设计</li>
    </ul>
  </li>
  <li>impress.js 受Prezi启发，jmpress.js在其基础上进行了封装，成为jQuery插件
    <ul>
      <li>支持新版Chrome、Safari、Firefox，IE 10 poorly supported</li>
    </ul>
  </li>
  <li>所需知识
    <ul>
      <li>熟悉CSS3、Javascript</li>
    </ul>
  </li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>有趣的故事、新颖的观点，不仅仅是为了追求酷炫的过渡效果（TED talk）</li>
  <li>网站上的个性化介绍、流程展示</li>
</ul>

<p><strong>实例说明</strong></p>

<p><a href="http://songchengru.eicp.net/jmpress/ex1/">Demo</a></p>

<p><a href="http://andrewyuan.github.io/methodology.html#/init">巴西世界杯预测</a></p>

<p><strong>参考资料</strong></p>

<p><a href="https://github.com/jmpressjs/jmpress.js">Github 项目托管地址</a></p>

<h2 id="section-7">数据展示篇</h2>

<h3 id="shiny">Shiny</h3>

<p><strong>类型</strong>  ——  数据动态交互展示</p>

<p><strong>入门难度</strong>  ——  ★★★✩✩</p>

<p><strong>实用性</strong>  ——  ★★★★✩</p>

<p><strong>装X效果</strong>  ——  ★★★★✩</p>

<p><strong>描述</strong></p>

<ul>
  <li>Data visualization or data visualisation is a modern branch of descriptive statistics. It involves the creation and study of the visual representation of data, meaning “information that has been abstracted in some schematic form, including attributes or variables for the units of information”.  ——  摘自维基百科</li>
  <li>数据可视化工具种类繁多，网搜都是“XX种数据可视化工具推荐”
    <ul>
      <li>Online vs Desktop</li>
      <li>代码开发 vs 图形界面操作</li>
    </ul>
  </li>
  <li>属于 <a href="http://rdata.wicp.net/rstudio/">RStudio</a>  这一火热的开源项目</li>
  <li><strong>动态展示</strong>，以R的丰富资源为支撑
    <ul>
      <li><a href="http://rdata.wicp.net/shiny/imgsvd/">SVD实例</a></li>
      <li>自动生成HTML、CSS、Javascript，只需编写R代码</li>
      <li>申请项目空间 <a href="https://www.shinyapps.io/">Shiny app 空间</a></li>
    </ul>
  </li>
  <li>R最大的优势是：它是由统计学家们开发的。R最大的劣势是……它是由统计学家门开发的。—— Bo Cowgill
    <ul>
      <li>速度慢</li>
      <li>需要对R有了解</li>
    </ul>
  </li>
</ul>

<p><strong>适用场合</strong></p>

<ul>
  <li>简单的数据交互、模型演示</li>
</ul>

<p><strong>实例说明</strong></p>

<p><a href="http://rdata.wicp.net/shiny/">Shiny 例程</a></p>

<p><strong>参考资料</strong></p>

<p><a href="http://shiny.rstudio.com/">Shiny 官网</a></p>

<h3 id="d3">D3</h3>

<p><strong>类型</strong>  ——  数据静态展示</p>

<p><strong>入门难度</strong>  ——  ★★★★✩</p>

<p><strong>实用性</strong>  ——  ★★★★✩</p>

<p><strong>装X效果</strong>  ——  ★★★★★</p>

<p><strong>描述</strong></p>

<ul>
  <li>D3（Data Driven Documents），支持SVG渲染，图表类型丰富
    <ul>
      <li>数据绑定网页元素</li>
      <li>设置元素可视化属性</li>
      <li>元素变换与动态过渡</li>
    </ul>
  </li>
  <li>所需知识
    <ul>
      <li>jQuery</li>
      <li>CSS</li>
      <li>SVG</li>
      <li>数据可视化知识</li>
    </ul>
  </li>
  <li>浏览器兼容性好</li>
  <li>有多款基于D3开发的适用于不同展示对象的工具
    <ul>
      <li>Planetary.js 地理信息</li>
      <li>Ember Charts、 xCharts 图表库</li>
      <li>Richshaw 绘制时序图</li>
    </ul>
  </li>
  <li>BSD许可，适用于商业或非商业目的</li>
</ul>

<p><strong>适用场合</strong>
* 展示已有数据规律，且数据可以共享</p>

<p><strong>实例说明</strong></p>

<p><a href="https://github.com/mbostock/d3/wiki/Gallery">官方示例</a></p>

<p><a href="http://andrewyuan.github.io/EDAV-project.html">巴西世界杯预测</a></p>

<p><strong>参考资料</strong></p>

<p><a href="http://d3js.org/">D3 官网</a></p>

<p><a href="https://github.com/mbostock/d3">Github托管地址</a></p>

<h2 id="section-8">其它工具</h2>

<p><strong>ADOBE MUSE - 自我展示类工具</strong></p>

<p><a href="http://muse.adobe.com/">官方网站</a> 教程丰富，讲解细致 </p>

<p>无须编程，实现流行的网页效果</p>

<p>例如 <a href="http://songchengru.eicp.net/scroll/">Scroll Effects</a></p>

<p><strong>LATEX CV - 自我展示类工具</strong></p>

<p><a href="https://launchpad.net/moderncv">mordencv官网</a></p>

<p><a href="http://www.ctan.org/tex-archive/macros/latex/contrib/moderncv">mordencv代码</a></p>

<p><strong>PROCESSING - 数据展示类工具</strong></p>

<p>MIT Media laboratory 创制的编程绘图语言，连接艺术设计与计算机程序</p>

<p><a href="http://processing.org/">Processing 官网</a></p>

<p><a href="https://www.processing.org/exhibition/">作品展示</a></p>

<p>基于Processing的jQuery插件：<a href="http://processingjs.org/">processing.js</a></p>

<h2 id="section-9">总结</h2>

<ul>
  <li>蜻蜓点水，抛砖引玉</li>
  <li>经验之谈，一家之言</li>
  <li>如能产生一点启发，激发一点兴趣，也不枉一番准备</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/">http://frank19900731.github.io/blog/2014/10/16/ti-gao-xiao-lu-yu-qing-qu-de-jiu-chong-cheng-xu-gong-ju-tui-jian/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>一种语言的占比等于其在8大网站（Google 30%，Blogger 30%，Wikipedia 15%，YouTube 9%，Baidu 6%，Yahoo! 3%，Bing 3%，Amazon 3%）上被搜索出的结果总数，除以前50名语言的结果总数。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p>展示结束后，又发现了一款名为 <a href="https://github.com/visit1985/mdp">MDP</a> 的命令行展示工具，大家可以试试，当然，以 Markdown 为书写语言的网页版展示工具就更多了，比如 <a href="https://github.com/onesuper/weakpoint">WeakPoint</a>。<a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>

  ]]></description>
</item>
