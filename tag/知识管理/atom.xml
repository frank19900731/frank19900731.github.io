
<item>
    <title>一个工具控的效率观</title>
    <link>http://realjenius.com/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-11-13T15:49:04+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">时间轴</a>    <ul>
      <li><a href="#section-2">2014年5月12日</a></li>
      <li><a href="#section-3">2014年6月3日补充</a></li>
      <li><a href="#section-4">2014年6月20日补充</a></li>
      <li><a href="#section-5">2014年6月21日补充</a></li>
      <li><a href="#section-6">2014年8月17日补充</a></li>
      <li><a href="#section-7">2014年8月21日补充</a></li>
      <li><a href="#section-8">2014年8月24日补充</a></li>
      <li><a href="#section-9">2014年8月27日补充</a></li>
      <li><a href="#section-10">2014年8月29日补充</a></li>
      <li><a href="#section-11">2014年10月13日补充</a></li>
      <li><a href="#section-12">2014年10月29日补充</a></li>
      <li><a href="#section-13">2014年11月8日补充</a></li>
    </ul>
  </li>
</ul>

<!-- excerpt start -->

<h2 id="section">前言</h2>

<p><strong>这是一篇在不断更新中的文章，主要用于记录我在学习工作过程中为解决效率瓶颈而发掘的软件工具，以及该工具的使用体验和配套的工作方式。</strong></p>

<ul>
  <li><code>何为工具控？</code> 在使用 MacBook Pro 的近两年时间里，自己大大小小“使用”过超过1000款软件，常驻笔记本里的大概有700款，每周都会有添加删除，详细列表见 <a href="http://blog.sina.com.cn/s/blog_64ac3ab10101f4it.html">这篇文章</a>。“使用”的含义可就多了，可能是常用以至于开机自启动，可能是专门用于某项用途，也可能只是摸过、了解功能和适用场景。这么多软件，管理上主要使用 QuickSilver（因为自己最早用的就是这个，虽然现在大家更多提到的是 Alfred）。我觉得自己还担不起拜物教的名号，顶多是个实用主义者和收藏强迫症。工具对我的意义有两点，<strong>其一是提供了外界刺激，让我内在的学习动力有了平稳释放的渠道，比如记录美感刺激、时间规划刺激、任务消除刺激，其二是让我有了记录成长历程的手段，解放了大脑</strong>。</li>
  <li><code>工具如何提高效率？</code>
    <ul>
      <li>加速知识记录、知识分享、知识利用的过程，质量也得到保障；</li>
      <li>时间规划清晰合理，帮助自己应对纷繁复杂的事务和对象；</li>
      <li>通常，工具是手脚的延伸，而这篇文章里将要提到的软件工具则是主要是感官和记忆的延伸，让大脑做更有意义的事情，也就是思考。</li>
    </ul>
  </li>
  <li><code>为什么是 Mac？</code> 当然可以不是 Mac，只是这篇文章里的很多软件在别的操作系统上是没有的。Mac 在<strong>易用性</strong>（比如系统的升级，软件的安装卸载，强悍的 trackpad）的角度来看是最佳的，优秀的图形界面和基于 UNIX 的操作系统也算是在 Windows 和 Linux 之间取得了良好的折中，适用于科研工作者和程序猿（最近走访的一些企业要么是全 Mac，要么是 Mac 比例在提升），而 MacBook Air 的时尚感与轻便性（索尼的本感觉也有这样的特性）则赢得了白领、女性的青睐。其他方面的话不好评价优劣，毕竟我们大多数人对于 Windows和Linux的掌握也只是皮毛，别人在 Windows 下效率比你在 Mac 下高也是很正常的，因人而异。我不是果吹，但还是有一个比较矫情的想法，那就是我总感觉<strong>在 Mac 上是我在工作，而在 Windows 上是工在做我</strong>。</li>
</ul>

<p>现在 MacBook 已然不是高枝上的凤凰了，其他厂商的笔记本价格与 MacBook 持平或更贵的有很多，强烈建议有换电脑打算的时候给予考虑。有钱把手机换成 iPhone 6、6+，还不如攒个 MacBook，个人感觉性价比更高，<strong>壕请忽略我的话</strong>。</p>

<!-- excerpt end -->

<h2 id="section-1">时间轴</h2>

<h3 id="section-2">2014年5月12日</h3>

<p>最近这段时间使用Ulysses真是如有神助，</p>

<ul>
  <li>Markdown书写；</li>
  <li>层次清晰分明，非常方便组织思路，文字有魂不零碎；</li>
  <li>输出格式丰富，主题模板也很赞，直接看原稿就已经很舒服了；</li>
  <li>界面清爽，全屏模式酷炫；</li>
  <li>Typewriter 模式，写作代入感强；</li>
  <li>支持版本保存，功能相当不鸡肋；</li>
  <li>支持过滤器，虽然自己还没有用过；</li>
  <li>可以附加笔记、图片、关键词和协作目标，有助于搜索，也可以作为效率上的督促。</li>
</ul>

<p>不足之处在于，不能够编辑公式，代码段比较简单，也不能输入表格。</p>

<p>正在使用的有助效率提升的软件梳理</p>

<ul>
  <li><code>OmniFocus</code> GTD 工具，配合 iCalendar 使用爽歪歪，功能暂时掌握不全，但不耽误基本使用。</li>
  <li><code>Evernote</code> 大有被取代之势，重要性在降低，记录一些零七碎八的事情。</li>
  <li><code>FocusMask</code> 效率新贵，提高自身工作时注意力！！！</li>
  <li><code>Papers</code> 支持文献阅读、批注与引用的好工具，可以和 iOS 设备同步。</li>
  <li><code>Eggscellent</code> 番茄工作法，分段限时完成工作，把自己<strong>从无截止时间估计的低效率工作状态中拉出来</strong>。</li>
  <li><code>Timeline 3D</code> 制作高逼格的时间计划表。</li>
  <li><code>Ulysses</code> 出色的写作软件，之前说过，废话不表。</li>
</ul>

<p>期待日后更多的发现。</p>

<h3 id="section-3">2014年6月3日补充</h3>

<ul>
  <li><code>Pocket</code> 极佳的网页保存待查工具，有 Mac、iOS 客户端以及 Chrome 插件，<strong>特别适用于记录问题解决过程中所查询的重要网页资料，省得要保留大量标签页或者来回翻找浏览历史</strong>。</li>
  <li><code>Wunderlist</code> OmniFocus 的精细化补充，跨平台通用。</li>
</ul>

<h3 id="section-4">2014年6月20日补充</h3>

<p>ICML、实习接踵而至，是时候 Papers（读 Paper）以及 Ulysses（会议记录，每日总结）发挥作用的时候了。最近要<strong>规范化记录的方式方法</strong>，让自己在暑假里高效运转起来。</p>

<h3 id="section-5">2014年6月21日补充</h3>

<p>今天被 Ulysses 坑到了，软件无响应，强制关闭，重新打开后部分文件夹和文件顺序错乱、名称显示错误，今后一定要<strong>注意备份</strong>。</p>

<h3 id="section-6">2014年8月17日补充</h3>

<p>Ulysses 虽然非常强大，但是有些事情做得还不是那么好，比如表格上不如 Numbers，而涉及到复杂计算和图表，Numbers 又不如 Excel。</p>

<p>最近调试 ODPS 的过程中发现，还是需要 Numbers 做记录，才能够使得每一个步骤清晰明确，每一个对比结果记录可靠。</p>

<h3 id="section-7">2014年8月21日补充</h3>

<p>目前个人效率存在的三大瓶颈</p>

<ul>
  <li><strong>资料碎片化，需要跳跃式阅读的时候寻址消耗大</strong>；</li>
  <li><strong>项目繁多，接头人、需求、目标、工期预计等需即时管理</strong>；</li>
  <li><strong>文档管理体系亟待完善，不能沿用文件夹模式</strong>。</li>
</ul>

<p>Ulysses 搜索功能还很弱（注：当时系统还是装在机械硬盘上，后来在光驱位加了一块 1T 的 SSD 后，那都不是事儿了），要打造 Ulysses 周边生态环境。</p>

<ul>
  <li><code>Producteev</code> 可以创建 Network 和 Project，适合多项目跟踪，界面美观，可定制项丰富，满足多人协作需求。</li>
  <li><code>iDocument</code> 可导入本地文件夹，也可以维护一个iDocument自身的目录，保存相关的文件，提供标签查找。</li>
  <li><code>OneNote</code> 富文本、交互式文本定制，可以保存图片、生成表格、插入文件，排版布局方便，是对 Ulysses 的有益补充。</li>
  <li><code>mediawiki</code> 网页版 wiki，常见于某些实验室的网站，优点是其索引、链接能力，便于分享，还可以输入表格、公式，大大弥补了 Ulysses 的不足。</li>
</ul>

<h3 id="section-8">2014年8月24日补充</h3>

<p>补充使用体验</p>

<ul>
  <li><code>Producteev</code> 评论功能很赞，可以存储事件相关的命令行、网页链接、文件等，使得在众多事情的切换中保持脑袋不乱。</li>
  <li><code>iDocument</code> 界面很棒，今后零散的微博文件分享也有方法保存啦！每一个文件都要打好 tag，方便搜索查找，目前 iDocument 还不支持文件的内容搜索，可以用 EasyFind 实现。</li>
  <li><code>mediawiki</code> 从这两天的经验看，Ulysses 里面经常翻阅的东西就要考虑写到 mediawiki 中了，作为个人知识库的 cache。最最最重要的是，<strong>有效解决了诸如 Ulysses、Evernote 等笔记软件中笔记间无法加链接的问题</strong>。</li>
</ul>

<h3 id="section-9">2014年8月27日补充</h3>

<ul>
  <li><code>Octopress</code> 用法见 <a href="http://frank19900731.github.io/blog/2014/08/24/wo-de-di-yi-pian-octopress-bo-ke/">此篇博客</a>，配置见 <a href="http://frank19900731.github.io/blog/2014/10/16/octopress-gai-zao-ji-lu/">此篇博客</a>。养成知识输出与分享的习惯，争取让自己的博客小有名气。</li>
  <li><code>Byword</code> 考察了不下十款 Mac 下的 Markdown 编辑器，最终敲定此软件。非常棒的界面设计，写起来很带感的说，段落聚焦（Paragraph Focus）的功能尤赞，专注写作的不二之选，Typewritter 模式也可用，支持字体的自定义，用于 Octopress 写作。</li>
</ul>

<h3 id="section-10">2014年8月29日补充</h3>

<ul>
  <li><code>Dash</code> API大全，程序员必备，从诞生伊始就开始关注，一直用到现在，作为一个收藏强迫症患者当然全部下载，<strong>光是索引文件就有40多G</strong>，但是心里满满的踏实感。支持代码片段存储，且在 Dash 开启时，支持在代码编辑器中使用缩写替换，问题在于没有办法进行云同步。</li>
  <li><code>Gistify</code> 这是 gist 的比较好的 Mac 客户端，缺点是不能指定文件名和Description，优点是创建后自动生成的 url 在剪贴板里，可以到网页上进行修改。</li>
  <li><code>PopClip</code> 万金油，插件丰富强大，功能在不断完善。</li>
</ul>

<h3 id="section-11">2014年10月13日补充</h3>

<ul>
  <li><code>Caffeinated</code> RSS阅读器，虽然还有这排版上的一些问题，但是其优雅的展示效果还是令我不能舍弃。最近花了大力气整理了各方面的RSS资源，希望能够养成此类阅读习惯，将碎片化的时间以及之前浪费在游戏等方面的时间充分利用起来。此外，<strong>这还相当于一个优质博客集合的入口，比起让这些链接沉睡在浏览器收藏夹里要好很多</strong>。</li>
</ul>

<h3 id="section-12">2014年10月29日补充</h3>

<ul>
  <li><code>SketchBookPro</code> <strong>配合 Wacom 手写输入板，记录公式快快哒</strong>。</li>
</ul>

<h3 id="section-13">2014年11月8日补充</h3>

<ul>
  <li><code>Notebooks</code> 较好的三列组织形式，支持 Markdown 语言，是较好的写书工具。</li>
  <li><code>Gitbook</code> 类似于 pandoc，支持丰富格式导出，比如 epub、mobi、pdf、网页版，特别是网页版会有较好的传播价值。</li>
  <li><code>Daum Equation Editor</code> Latex 公式书写利器，方便博客写作。</li>
  <li><code>花瓣网（Chrome插件）</code> 图片采集神器，非常有于前端积累，<strong>给图片的高效保存提供了较完美的解决方案</strong>。</li>
</ul>

<p><strong>未完待续</strong></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/">http://frank19900731.github.io/blog/2014/11/13/yi-ge-gong-ju-kong-de-xiao-lu-guan/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>我的知识管理经验与工具分享</title>
    <link>http://realjenius.com/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-10-23T18:21:07+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">你的知识问题</a></li>
  <li><a href="#section-2">知识学习</a></li>
  <li><a href="#section-3">知识保存</a></li>
  <li><a href="#section-4">知识分享</a></li>
  <li><a href="#section-5">总结</a></li>
  <li><a href="#section-6">附录</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">前言</h2>

<p>最近我阅读了田志刚先生撰写的<a href="http://book.douban.com/subject/4630664/">《你的知识需要管理》</a>一书。这本书出版于2010年，虽然当中介绍的工具已跟不上现代的潮流，但书中的观点和例证还是发人深省，特别是第一章 <code>你的知识问题</code>。</p>

<p>阅读过程中，我感觉书中部分内容和自己在实践中摸索出的一些观点和方法很契合，于是萌生了将自己的一点知识管理经验整理并分享的念头，这就是撰写本文的初衷。</p>

<p>在你开始正式阅读之前，我先给出一点阅读忠告：</p>

<p>就我个人阅读此类文章或书籍的经验来看，如果不是有过类似的实践经验或者当前正面临类似的问题，一般不太容易产生共鸣，反而会觉得是个大杂烩，或者尝试后觉得根本不好用嘛。对于这样的想法，我想举两个例子：</p>

<ul>
  <li>高考结束后，有些小朋友（主要是学习成绩不理想的）找我学习经验，当时自己苦口婆心讲得口干舌燥，不过效果远不如我所想。后来意识到，每个人都是一个个性化的系统，经验移植很困难，自己摸索出来的才是最合适的。</li>
  <li><code>我知道很多的道理，却依然过不好这一生</code>  这句话曾风行一时，我觉得这是乱呻吟。首先道理是要放到情境里学习的（读高中的时候我对《你的知识需要管理》应该会是无感的，但快研究生毕业、要找工作了就不同了），听懂了、记住了有毛线用；其次，道理是死、人心要活，很多事情是反复博弈的或者可以举一反三，榆木脑袋才会一生都过不好（但往往是没过完一生的年轻人喜欢说这种话，彰显个性么？不懂……）；道理没给你带来好生活，你在抱怨道理、抱怨告诉你道理的人之余，是不是还得想想自身可能存在的问题呢？</li>
</ul>

<p>我觉得写这篇文章的目的不在于告诉读者你现在应该马上行动起来不怎么做、要怎么做，只是单纯的经验和工具分享，也是我阶段性的自我总结。如果有一天当你遇到和我类似的场景与问题或受困于自身的发展瓶颈时，而你隐约记得曾经有篇文章的内容可以为你所用，我所介绍的经验和工具或许就可以帮上你的忙，<strong>最最起码你会知道，有一个家伙曾经跟你一样，你不是个案</strong>……</p>

<!-- excerpt end -->

<h2 id="section-1">你的知识问题</h2>

<p>首先要区分容易混淆的三个概念，“数据”、“信息”和“知识”。在原书作者看来：</p>

<ul>
  <li>数据：单纯的数据不表示意思，比如39；</li>
  <li>信息：赋予数据以环境，比如就诊时向医生提供信息，体温是39摄氏度；</li>
  <li>知识：<strong>经过实践证明的，可以用来决策和行动的信息</strong>，比如医生运用自己的医学知识和行医经验在我提供的体温信息的基础上判定我发烧了。</li>
</ul>

<p>下面这段是我结合书中例子自行补充的……</p>

<p><strong>根据体温判定是否发烧的知识是怎么来的呢？</strong></p>

<p>医学课本里可能会写人在不同年龄段的正常体温范围是多少。</p>

<p><strong>那第一个写课本的人是怎么知道的呢？</strong></p>

<p>可能是根据更早的医生的行医经验总结得来的。</p>

<p><strong>那没有体温计的时候是怎么判定发烧的呢？</strong></p>

<p>大概是用手心触摸额头与其他人对比。</p>

<p>我其实是想通过以上三个问题表达我对于知识积累脉络的认识：从<strong>定性知识</strong>（触摸额头）到<strong>定量知识</strong>（计量体温），从<strong>隐性知识</strong>（行医经验）到<strong>显性知识</strong>（医学课本）。</p>

<p><strong>定量是科学化、标准化的目标，显性知识有利于知识的积累与传播</strong>。</p>

<p>不过需要补充两点：</p>

<ol>
  <li>某些知识领域，定量化很难做，比如名厨的经验。厨艺知识的实践性很强，知识的获取有赖于自我摸索与师徒传承。“鸡肉500g，黄瓜丁300g，鸡精5g……”，这只是给大众看的菜谱。而且也不同于化学实验，即便同样的菜谱不同的人做味道也会不同。以“鱼香肉丝”、“宫保鸡丁”为例，似乎各有各的做法。食材的选择，火候的把握，都是要靠年头磨练的，而磨练的最终结果往往是“此中有真意，欲辨已忘言”。</li>
  <li>显性知识的建立并不是终结，而是要在分享传播中、在生产实践中与更多人的隐性知识做结合，得到这些隐性知识的印证、修正与补充。</li>
</ol>

<p>从《你的知识需要管理》一书的例子中可以看出，作者其实将定量化的知识（已成书面的理论或判据）默认为显性知识，将定性化的知识（在人们头脑中俗语或经验）默认为隐性知识，所以下面的讨论仅区分隐性知识和显性知识。</p>

<p>书中提到了隐性知识、显性知识的四种转换形式：</p>

<ul>
  <li><strong>隐性知识到显性知识</strong>
    <ul>
      <li>印堂发黑的视觉认识 到 真实测量印堂亮度并规定判定为黑的阈值；</li>
    </ul>
  </li>
  <li><strong>显性知识到隐性知识</strong>
    <ul>
      <li>阅读书籍，引发自己的思考；</li>
    </ul>
  </li>
  <li><strong>显性知识到显性知识</strong>
    <ul>
      <li>阅读书籍，引发自己的思考，并写出读书笔记；</li>
    </ul>
  </li>
  <li><strong>隐性知识到隐性知识</strong>
    <ul>
      <li>师徒相承。</li>
    </ul>
  </li>
</ul>

<p>俗话说，“社会是最好的大学，生活/工作是最好的老师”，只要是一个有心人，每天能够获得的隐性知识量还是挺大的，但是极少有人坚持做显性化的工作。有的时候我们会给自己找理由说就是懒得写，真实原因是我们的理解还不够、表达能力也不够；有的时候我们会抱怨这东西我也会呀，就是运气不好没那个命，真实原因你会不会和别人知不知道你会是两回事儿，你的知识憋着就你自己知道，还比不上粪便能憋出沼气来……</p>

<p>类似的问题不一而足，这些问题就是书中所说的“你的知识问题”。</p>

<p>本书要和我们探讨的，就是作为一个<strong>信息时代的知识工作者</strong>，我们如何能够做好以下五点：</p>

<ul>
  <li><code>知识学习</code>  学什么，学习目标的聚焦，学习资源的搜集，学习的方法，保持终身学习不落伍； </li>
  <li><code>知识保存</code>  有规划、成系统的保存，便于查询；</li>
  <li><code>知识分享</code>  让别人知道你知道；</li>
  <li><code>知识利用</code>  与项目或任务结合，申请专利，知识产品化；</li>
  <li><code>知识创新</code>  需求是创新的动力，思维导图。</li>
</ul>

<p>限于社会阅历与工作经验，自己仅在前三点有些经验和工具可以分享，后两点乏善可陈。</p>

<h2 id="section-2">知识学习</h2>

<p>本科前期，受高中学习思维的影响，自己买了大量的技术书籍阅读（常去中关村图书大厦，逛亚马逊），也曾沉溺于 <a href="http://blog.sina.com.cn/s/blog_64ac3ab10100gg4u.html">谷歌搜索的奇技淫巧</a> 。后来了解了一些 ftp 站点（比如清华大学自动化系）和 P2P 软件（比如汉魅，堪比快播啊……），再到 Corsair、MeePo，下载了不少课程资源和书籍，一度陷入了大误区（见 <a href="#section-3">知识保存</a>）。</p>

<p>目前，自己的技术学习主要依赖技术官网的 Tutorial、网络教程、博客和问答网站，从BT站点（北邮人、六维空间）下载的视频教程以及公开课（Cousera、果壳MOOC、网易公开课、腾讯大讲堂），偶尔会买觉得有收藏价值的书籍。</p>

<p>需要补充的是，对于一些好的博客站点和专业知识网站，<strong>仅仅是加入收藏夹只会让它们死在那里</strong>，最好能够获取到该网站的 RSS 订阅链接，加入到你自己的 RSS 阅读器中。大多数此类网站都是有订阅链接的，因为它们是利用现成的框架搭建的，比如 Wordpress，Flask，Jekyll (Octopress) 等。即便页面上隐藏了 RSS 图标，你也能从网页源代码里搜索出来（比如搜 rss 等关键字）。实在不行可以试一试 <code>http://yu-ming/atom.xml</code> 或者 <code>http://yu-ming/rss.xml</code> 或者 <code>http://yu-ming/feed</code> 这样的链接，也许就是该网站的订阅链接。</p>

<p>推荐一款名为 Caffeinated 的阅读器，虽然称不上完美，但阅读界面还算是可选择软件当中最赏心悦目的。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/3.jpg" class="img-up" title="Caffeinated 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/3.jpg" width="80%" title="Caffeinated 界面展示" /></a></p>

<p>我的初始 RSS 源来自这份 <a href="http://www.zhihu.com/question/19580096">知乎问答</a>，之后就是在浏览网页的过程中发现、补充。有人对于这种碎片化阅读模式表示担忧，认为不如系统性的学习。我觉得大家说的都有道理，就想和一把稀泥。打个比方说吧，大部头的书籍像鲜花，培育费心费力，成长不易，长成则一枝独秀；碎片化阅读像水稻、棉花，大量培养，普普通通，满足基本需求。<strong>专与博，辩不出孰优孰劣，只要选择有利于现阶段自身成长的途径就可以了</strong>。</p>

<p>我觉得由对碎片化阅读的质疑引申出的一个问题更值得我们思考，那就是<strong>你到底想要学什么</strong>？</p>

<p>《你的知识需要管理》提到，</p>

<blockquote>
  <p>学习任何领域的知识必须达到一定的深度，否则你的知识就是常识。</p>

  <p>……</p>

  <p>由于现在知识更新周期很短，知识和经验在快速贬值，今天的知识可能明天就成为常识，如果你仅仅学某领域知识的基础部分，那么这些只是无法给你带来“超级价值”和竞争优势。</p>
</blockquote>

<p>书中还引用了俞敏洪的一句话，</p>

<blockquote>
  <p>要引人敬意，就要研究一个非常专业的领域，在那个领域中，你是最顶尖的，至少是中国前10名，这样无论任何时候你都有话说，有事情可做。</p>
</blockquote>

<p>看了之后顿时觉得后脊背发凉，关于“专”自己做的还远远、远远、远远不够，由于没啥成功经验，这块儿也不多说了……</p>

<p>目前自己使用比较多的知识获取工具还有：</p>

<ul>
  <li>鲜果阅读：和 RSS 类似，只是有移动 App，更适合碎片化时间；</li>
  <li>微博：微博不提供知识，但能帮你了解到你所在领域的那拨人在关心什么，他们给出的链接相当于是筛选过的知识；</li>
  <li>小酱油：也不提供知识，但能帮你汇集身边的讲座、招聘、比赛等活动信息，告诉你你身边将要发生的知识分享。</li>
</ul>

<p>此外，我已经卸载了微博、今日头条，感觉信息质量越来越低了。在今日头条的新闻评论中，你往往能找到这么一类评论：“小便（编）你过来，我保证不打死你”。</p>

<p>最后值得一提的视频自媒体，我每周必跟的是《晓松奇谈》（原《晓说》）、《罗辑思维》和《鸿观》，都是周五更新，所以周五简直像节日。我的观看习惯是记笔记并查阅相关或延伸的资料，结合自己的历史观、价值观做一些评注。</p>

<p>积累下来的效果就是，聊天的谈资多了，还帮我回答了一道面试题。</p>

<p>在百度的一轮面试中，面试官本应面我技术，但只见他看着我的简历直摇头，叹了一口气对我说，你说我问你点儿啥好？没给我吓尿了，我说都行吧，你先问。他说，你跟我说说现在大街上的垃圾箱都有啥问题？我心想新闻里好像说 <a href="http://www.oschina.net/news/41616/in-head-hunting-big-data-may-not-be-such-a-big-deal">Google现在都不面这种题</a> 了吧，但还是列了五六点说了。他又问，要是你负责北京市所有垃圾箱的管理，你会怎么办？我心想，上周五刚看过《罗辑思维》（第二季第29期，《市场的广度》），介绍过一个德国公共厕所市场化改造的案例，直接可以拿来用啊。于是我就说可以在垃圾桶表面引入商业广告，明星示范效应 + 企业对自身形象的重视 + 商业投入与运作应该可以解决当前存在的一些问题吧。面试官听后可算不摆苦瓜脸了，他说，“看来你还挺聪明，知识面挺广”。我心说，“叫你不看《罗辑思维》，真好唬啊……”。</p>

<h2 id="section-3">知识保存</h2>

<p>知识保存就是将隐性知识或显性知识转化为显性知识的过程。</p>

<p>我猜想，在知识保存方面，人们走过的弯路是大致相同的。一开始是大量文件下载、网页收藏以及 Word 复制粘贴，之后会考虑使用云盘或者云笔记。</p>

<p>就我自身而言，除非想在博文里分享文件，否则用云盘的机会不多，都是本地存储，建立 ftp 分享给身边的人。对于云笔记，自己很早就用过 Evernote，后来出了印象笔记，但越来越发现它不能满足自己所要记录内容的复杂性、分享需求以及格式定制灵活性，就逐渐放弃了。</p>

<p><strong>拿最简单的一条来说吧</strong>，印象笔记目录结构太扁平，只是笔记本+笔记本中的笔记。如果我想专门记给我妈妈的信，我要建一个笔记本，但我又想记给我女友的信，且不想弄混，我又得建一个笔记本。目录结构是</p>

<ul>
  <li>给妈妈的信</li>
  <li>给女友的信</li>
  <li>给二叔的信</li>
  <li>给三舅的信</li>
  <li>给隔壁老王的信</li>
</ul>

<p>我需要的是可定制目录逻辑的，比如</p>

<ul>
  <li>信件保存
    <ul>
      <li>给家人的信
        <ul>
          <li>妈妈
            <ul>
              <li>历史存档</li>
              <li>2014年</li>
            </ul>
          </li>
          <li>女友</li>
        </ul>
      </li>
      <li>给亲戚的信
        <ul>
          <li>二叔</li>
          <li>三舅</li>
        </ul>
      </li>
      <li>给邻居的信
        <ul>
          <li>隔壁老王</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p>如果想达到这样的目的，我只能采用在磁盘自建目录、在目录里保存文件的土办法，如此一来我得在脑子里把目录存储起来，或者专门建一个文件存储目录索引。这样一来就完全丧失了印象笔记所能提供的资源整合能力和灵活机动性！</p>

<p>直到我了解了 Markdown，用上了 Ulysses，一切都有了质的飞跃。</p>

<p>当前我正在使用 Ulysses 撰写这篇文章，截图如下。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/4.jpg" class="img-up" title="Ulysses 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/4.jpg" width="80%" title="Ulysses 界面展示" /></a></p>

<p>不用我多说，应该都能感觉到这种目录定制形式以及三列结构对于大规模写作有多大的好处了吧。如果说印象笔记能够做碎片积累、写文章，Ulysses完全可以写一本书好么。</p>

<p>Ulysses的其他好处在于支持丰富的导出格式，比如 PDF、Word、HTML 和电子书等，采用 Markdown 语言书写，格式与内容分离，由专门的文件指定。</p>

<p>最让我惊艳的是全屏模式，适于专心写作或者听报告的时候记笔记，如下图所示。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/5.jpg" class="img-up" title="Ulysses 全屏界面"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/5.jpg" width="80%" title="Ulysses 全屏界面" /></a></p>

<p>总而言之，在使用 Ulysses 的这五个多月（五月份开始）里，自己的工作习惯发生了很大的变化，特别是在知识输出方便，变得积极而高效。</p>

<p>当然，Ulysses 也不是那么完美的，它的同步性不好，只支持 iCloud 和 Daedalus，所以要注意内容的及时备份，不过也省得隐私泄露了。</p>

<p>虽然我不再使用印象笔记，但并不代表这不是一款好软件，只是它跟我的需求不符，而且我也在关注印象笔记新功能的添加。我对印象笔记可以创建公共笔记本的功能很喜欢，如果将来有多人协作的需要可能会选择，当然， Tower 等团队协作工具可能做的更全面。</p>

<p>知识保存了就是用来查的，Ulysses 提供了全局查找、指定文件夹查找以及文章内查找的功能，算是对查找功能的一个全方位实现，但问题还是在使用过程中暴露出来了。我需要频繁查找分布在若干文件里的重要文字或数据，要么我得记住它们在哪个文件夹，要么我得记住查询条件。在网站架构里，这部分数据是要放到 cache 里的，那么什么工具可以成为我的 cache 呢？此时 mediawiki 出现在了我的脑海，虽然我以前一直不知道应该怎么将它嵌入我的工作里。</p>

<p>我主要将一些常用指令、数据路径以及脚本代码写到 mediawiki 当中，需要时在浏览器中拷贝即可。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/6.jpg" class="img-up" title="mediawiki 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/6.jpg" width="80%" title="mediawiki 界面展示" /></a></p>

<p>如果我们能将每天遇到的知识都转化文字记录那固然是好的，但事实上我们没有这样的精力。对于一些文档和大量的网页，需要有工具帮助我们保存并方便日后查找。其实我的要求也不高，就是必须可以添加标签，从个人经验来看，<strong>不加标签的资源只能成为你知识库里的垃圾</strong>。</p>

<p>对于文档，我选择 iDocument Plus，界面如下</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/7.jpg" class="img-up" title="iDocument Plus 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/7.jpg" width="80%" title="iDocument Plus 界面展示" /></a></p>

<p>对于网页，我选择 Pocket，有好用的 Chrome Extension 和客户端，跨各类平台共享。</p>

<p>此外还有代码片段需要管理，可以使用 Gistify 或者 Dash。有 Mac 下开发经验的人应该不用我介绍 Dash 有多牛逼，记得刚出这款软件的时候内购价格18元，现在在 App Store 卖20刀。这款软件整合了 150 多种编程语言的 API，还有丰富的 Stack Overflow 问答资源的离线版本，同时支持 <a href="https://xuelangzf.github.io/10-13-2014/html2dash.html">用户定制文档</a>。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/8.jpg" class="img-up" title="Dash 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/8.jpg" width="80%" title="Dash 界面展示" /></a></p>

<h2 id="section-4">知识分享</h2>

<p>知识分享的重要意义，引用书中的两段话来说明。</p>

<blockquote>
  <p>不在于你认识什么人，而在于什么人认识你；不在于什么人影响了你，而在于你影响了什么人。</p>
</blockquote>

<p>还记得那位热衷于给青年人写信的导师么，还记得《XX之巅》系列丛书的作者么，他们都通过这种知识分享传播的方式在中国年轻人心目中、在业界给自己赢得了受尊敬的地位，而这是埋头苦干、成果丰硕但不善包装的学问家们所没法比拟的。当然，并不是说通过知识分享扩大影响力是一件沽名钓誉的事情，我觉得满足两点条件就还是好的：<strong>保证你肚子里有干货；保证不大量夹带私货</strong>。</p>

<blockquote>
  <p>你必须有意识地去做这些显性化的工作，必须有意识地让别人能明白你知道的道理。如果你养成了这个习惯，它会促进你更深入地探究问题的本源，提升自己对知识的掌握程度。如果养成了有意识地显性化你的知识的习惯，你就会发现自己对问题的了解越来越深入，从而摆脱了许多一知半解的状态，提高了个人的知识竞争力。</p>
</blockquote>

<p>正如我们之前说到的，你不是懒得去写，而是你根本写不出来、写不对。杨绛先生回忆钱钟书先生读书都要读多遍、记笔记，每次都有<strong>新收获</strong>，更何况我辈。听懂了、看懂了和真懂了是很不一样的，真懂了和真会用又很不一样。问问自己，看懂了别人的算法和代码，事后让你重写一遍，能否保证运行正确；看懂了别人的公式推导，事后让你重推一遍，能否保证不卡壳。从自身的经验来看，强迫自己将重要知识、复杂知识显性化并分享出来是一件很有益的工作，最起码你得担心你写错了被别人笑话吧。</p>

<p>总的来说，我认为<strong>知识分享之于普通人，类似于学术论文之于学者</strong>。</p>

<p>最后，书中提醒我们在分享的过程中要注意的一点是</p>

<blockquote>
  <p>不管面对什么样的共享对象，有一个共同的原则，那就是在知识共享中不要故意炫耀和卖弄自己的知识，要尽力用平实、通俗的语言去传递你的知识，尤其不要满口或者满篇都夹杂着外语和专业术语，从知识管理的角度看，这是一种对于知识掌握不够深入的表现，同时也会引起大部分人的反感。</p>
</blockquote>

<p>除了软件名称，这篇文章没怎么用英文……</p>

<p>我的知识分享主要通过博客，前期是 <a href="http://blog.sina.cn/frank19900731">新浪博客</a>，现在在使用 Github 上搭建的 Octopress 博客。</p>

<p>好处显而易见，博客可以保存在本地，以 Markdown 格式书写，界面自由定制，想要实现的功能都可以自行添加，比如中文搜索、输入公式、定制代码块等等。</p>

<p>Markdown 输入工具我采用的是 Byword，能够满足我这个软件外观控，以下是本文编辑界面的展示。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/9.jpg" class="img-up" title="Byword 界面展示"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/9.jpg" width="80%" title="Byword 界面展示" /></a></p>

<p>要强调的是，<strong>搭建博客什么的都不是什么难事，最难的就是坚持写作、坚持分享</strong>，立存此照，作为督促。</p>

<p>Markdown 的优势还不止体现在这里，我们完全可以用它来写书。比如 <a href="https://github.com/jgm/pandoc">pandoc</a> ，<a href="https://github.com/marchtea/mdtogh">mdtogf</a>。这两个工具功能当然强大，定制灵活，不过还是不适合小白用户。再推荐一款 <a href="https://www.gitbook.io/">Gitbook</a>，有客户端可供使用。</p>

<p>除了写博客，知识分享的途径还有很多，比如到百度知道、知乎等综合性问答网站或者 Stack Overflow 等专业问答网站上回答问题，再比如到专业论坛中和别人讨论交流（不是帝吧那种的……）。在这个过程中，相信你的影响力、表达能力和专业水平都会有提高的。</p>

<h2 id="section-5">总结</h2>

<p>本文是在《你的知识需要管理》的启发下写成的，主要分享了自己在知识管理方面的经验教训和现阶段使用的工具。希望给大家的知识管理提供一个思路和借鉴，如果对你产生了些许实质性的帮助那我不胜荣幸。要点归纳如下：</p>

<ul>
  <li>“数据”、“信息”和“知识”有很大差别，我们要做的不仅仅是走马观花的关注信息，更要将遇到的有价值的信息、知识内化为自己的隐性知识，并在输出为显性知识的过程中加深理解，甚至有所创见；</li>
  <li>碎片化学习和系统学习并重，更重要的是明白自己要学什么，什么才是自己的核心竞争力，持续深入的挖掘下去，否则你的知识将很快变成人们的常识；</li>
  <li>知识分享的良好习惯能够督促我们进行知识显性化输出，提高专业水平、扩大影响力，让自身实力体现出应有的价值。</li>
</ul>

<h2 id="section-6">附录</h2>

<p>本文提到的部分软件的图标集合</p>

<p>知识学习</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/5.png" class="img-up" title="Caffeinated"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/5.png" width="20%" title="Caffeinated" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/17.png" class="img-up" title="小酱油"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/17.png" width="20%" title="小酱油" /></a></p>

<p>知识保存</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/7.png" class="img-up" title="Evernote"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/7.png" width="20%" title="Evernote" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/13.png" class="img-up" title="Ulysses"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/13.png" width="20%" title="Ulysses" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/16.png" class="img-up" title="MediaWiki"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/16.png" width="20%" title="MediaWiki" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/15.png" class="img-up" title="iDocument Plus"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/15.png" width="20%" title="iDocument Plus" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/6.png" class="img-up" title="Dash"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/6.png" width="20%" title="Dash" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/10.png" class="img-up" title="Pocket"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/10.png" width="20%" title="Pocket" /></a></p>

<p>知识分享</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/4.png" class="img-up" title="Byword"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/4.png" width="20%" title="Byword" /></a>
<a href="http://frank19900731.github.io/img/post/2014-10/18.png" class="img-up" title="Octopress"><img class="imgcenter-no-shadow" src="http://frank19900731.github.io/img/post/2014-10/18.png" width="20%" title="Octopress" /></a></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/">http://frank19900731.github.io/blog/2014/10/23/wo-de-zhi-shi-guan-li-jing-yan-yu-gong-ju-fen-xiang/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>
