
<item>
    <title>2014 年百度、腾讯与搜狐的校招笔试回忆</title>
    <link>http://realjenius.com/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-11-21T21:38:54+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">写在前面</a></li>
  <li><a href="#section-1">百度笔试</a></li>
  <li><a href="#section-2">腾讯笔试</a></li>
  <li><a href="#section-3">搜狐笔试</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">写在前面</h2>

<ul>
  <li>这三家公司大家的关注度应该都比较高，我所申请的其他公司，要么是自己走了其他渠道没参加笔试（比如阿里、360），要么是有签订保密协议（比如 FreeWheel 和 世坤）；</li>
  <li>腾讯、搜狐笔试题中有很多选择题，无法一一记清，考场上没有刻意记录，只能考后回忆，很多题只能说考了哪个知识点；</li>
  <li>百度申请的是数据挖掘工程师岗位，腾讯申请的是基础研究职位（后来发现给我安排的是深圳腾讯游戏的数据挖掘岗，由此得出的经验教训是，选定期望工作城市后，慎选服从城市调剂，不然都给你拉到深圳去），搜狐申请的是数据挖掘工程师岗位，题目自然与职位有关；</li>
  <li>我不记得是不是有 A、B 卷之分，但以下内容都被考察过无疑。</li>
</ul>

<p>接下来，记忆的闸门开始缓缓打开……</p>

<!-- excerpt end -->

<h2 id="section-1">百度笔试</h2>

<p>在面试的时候，百度会把已判分的试卷发给你，想不回忆清楚都难。当然，俺还没猥琐到拍照的程度……</p>

<ol>
  <li>举例说 C++ 中继承、多态和组合的应用。</li>
  <li>进程间通信方法，列举至少三种。</li>
  <li>写贝叶斯公式，描述朴素贝叶斯的分类方法。</li>
  <li>X、Y 是向量，每一维上的元素都服从 N(0, 1)，计算他们的相关系数 Z
    <ul>
      <li>求 Z 的期望和标准差（求职季笔试里见过的最有趣的一问，解答见我的博文<a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">《面试经验分享之智力题》</a> 中的题目五）；</li>
      <li>编程用蒙特卡洛方法计算期望和标准差。</li>
    </ul>
  </li>
  <li>豆瓣音乐，评分不同，但是想要随机播放概率和评分成正比，设计随机算法并代码实现。</li>
  <li>给出一次函数、二次函数…… n 次函数回归的损失函数，推导随机梯度下降公式，简述模型/参数选择标准和选择机制。</li>
</ol>

<h2 id="section-2">腾讯笔试</h2>

<p>25 道选择题只回忆了两道，因为与之相关的知识点掌握得不熟，其他题目大都是 C++ 面向对象编程的常见题。</p>

<ol>
  <li>关于虚基类构造函数的调用顺序。</li>
  <li>预编译指令 <a href="http://baike.baidu.com/view/2317161.htm?fr=aladdin">#pragma pack</a> 的考察，给出一个结构体，问占用多大空间。</li>
</ol>

<p>笔答题有三道</p>

<ol>
  <li>求三阶矩阵行列式。</li>
  <li>根据用户的满足感、荣誉感、挫折感及失望感建模用户口碑。</li>
  <li>预测即将流失的用户，一种方法是使用 SQL 在数据库中查询，提取近三个月登陆次数递减的用户，交给客服处理
    <ul>
      <li>可否这么做；</li>
      <li>不然要怎么做。</li>
    </ul>
  </li>
</ol>

<h2 id="section-3">搜狐笔试</h2>

<p>笔试题目范围非常广泛，涉及机器学习、网络编程、hadoop、C++、多线程和智力题。</p>

<ol>
  <li><a href="http://blog.csdn.net/mengtnt/article/details/8477747">小白鼠喝毒水问题</a></li>
  <li><a href="http://f.dataguru.cn/forum.php?mod=viewthread&amp;tid=34799&amp;highlight=">hadoop 在 HDFS 上文件存储的默认冗余参数是3</a>。</li>
  <li>两个线程同时累加一个全局变量，比如利用 for 循环进行 50 次自增操作，问该该全局变量的最终结果范围。</li>
  <li><a href="http://www.cnblogs.com/hnrainll/archive/2011/10/14/2212415.html">TCP 的三次握手，四次挥手</a>。</li>
  <li>关于 TCP 双方关闭连接，涉及到 <a href="http://blog.csdn.net/samulelin/article/details/3957118">TIME_WAIT</a> 的概念。</li>
  <li>SVM、条件随机场、隐马尔科夫模型、最大熵模型中，哪个是生成式模型？应该是隐马尔科夫模型<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。</li>
  <li>还是以上四个模型，哪个模型不符合凸模型+有全局最优解的条件？应该还是隐马尔科夫模型。</li>
  <li>贝叶斯网络是有向无环图。</li>
  <li>分词中最大正向匹配，最大逆向匹配的概念。</li>
  <li>linux 平台下有一个三列文件，列之间用逗号分隔，请编程对第二列数字求和。</li>
  <li>左值不能赋值。</li>
  <li>hadoop 默认 block 大小是 64M，JobTracker 和 NameNode在同一台机器上。</li>
  <li>hadoop 采用 Combiner、采用压缩率高的文件格式以及在 map 过程中去掉无效数据都是为了减少数据传输量，与这些优化方法不同的是优化 Partitioner，因为它是为了均衡数据量，而非减少数据量。</li>
  <li>熵的计算公式和熵最大的条件。</li>
  <li><a href="http://www.cnblogs.com/daniagger/archive/2012/06/19/2555321.html">复杂链表的复制</a>，所谓复杂是指一个节点除了指向后继，还随机指向链表中的一个节点或 NULL。</li>
  <li>问如下代码的输出，其实就是统计二进制表示中 1 的个数。</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>题目</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="cpp"><span class="line"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">9999</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="k">while</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="n">count</span><span class="o">++</span><span class="p">;</span>
</span><span class="line">	<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span>		
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">count</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/">http://frank19900731.github.io/blog/2014/11/21/bai-du-teng-xun-yu-sou-hu-de-bi-shi-hui-yi/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>
<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p>参考资料为：<a href="http://en.wikipedia.org/wiki/Discriminative_model">Discriminative model</a>，<a href="http://blog.csdn.net/wolenski/article/details/7985426#0-tsina-1-17355-397232819ff9a47a7b7e80a40613cfe1">判别式模型与生成式模型</a>。<a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>

  ]]></description>
</item>

<item>
    <title>IDG 联合招聘笔试回忆</title>
    <link>http://realjenius.com/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-10-19T21:53:07+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/</guid>
    <description><![CDATA[
     <!-- excerpt start -->

<p>IDG 投资的公司有脸萌、蘑菇街、果壳网等，详见此<a href="http://campus.idgvc.ourats.com/about-us/companys">链接</a>。对于这些小规模创业公司自己还是挺感兴趣的，参加联合招聘也很省事，笔试题目（B卷）回忆如下。</p>

<h2 id="section">选择题</h2>

<ol>
  <li>三个汽水瓶可以换一瓶汽水，要让28人都喝一瓶，买几瓶水？    答： 19瓶。</li>
  <li>50人中有两人生日相同的概率是多少？    答：0.97（注意是选择题，不是当场算的……）。</li>
  <li>1000人，三场演出，分别有500，350，250人观看，400人至少看两场，100人看三场，问多少人一场没看？    答：400人。</li>
  <li>逻辑判断，条件一：<code>x or y</code>；条件二：<code>not y or not z</code>；条件三：<code>非z 则 非y</code>，可以肯定的是哪项？    答：x 为 true。假设 非x，则 y，则 非z，则 非y，矛盾。</li>
  <li>安卓属于那种系统？    答：软实时系统 。</li>
  <li>分布式系统 与 网络系统 的区别？    答：协调多个机器完成同一任务。</li>
  <li>位示图的作用？    答：管理磁盘空间。</li>
  <li>6 个方块排一排，用三种颜色涂刷，要求相邻方块不同色且三种颜色都用上，有几种涂法？    答：90种。<code>3 * 2^5 - 3*2</code></li>
  <li>二叉树，第五层最多有多少个节点？（根节点是第一层）   答：16。</li>
  <li>红球、黑球、白球共60个，摸了一阵，统计红球大约15%，黑球大约45%，问有多少个白球？    答：16。</li>
  <li>253的16进制和二进制表示？    答：0xFD，11111101</li>
  <li>ABCDE，不可能的出栈顺序？</li>
  <li>快速排序，第一次运行后的结果是？</li>
  <li>程序题，问 c 的输出是多少？    答：-1。</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>程序题</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="c"><span class="line"><span class="kt">int</span> <span class="n">a</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line"><span class="k">do</span> <span class="p">{</span>
</span><span class="line">    <span class="o">--</span><span class="n">c</span><span class="p">;</span>
</span><span class="line">    <span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span> <span class="k">while</span><span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>还有一道想不起来了……</p>

<h2 id="section-1">综合题</h2>

<ol>
  <li>链表每隔K个翻转，要求常数空间存储，代码实现。比如 <code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6</code>，k=2 变成  <code>2-&gt;1-&gt;4-&gt;3-&gt;6-&gt;5</code>，k=3 变成  <code>3-&gt;2-&gt;1-&gt;6-&gt;5-&gt;4</code>。</li>
  <li>M X N方格，从 (0,0) 走到 (M,N) 有多少种走法记为L，如果 M、N 很大那么 L 这个数也是很大的，设计算法计算 L % 13。</li>
</ol>

<h2 id="section-2">总结</h2>

<p>一开始 IDG 说将由很牛的 ACM 选手出题，心里挺忐忑，现场做题才发现不是这样。虽然题目不难，不过限时 1 小时，自己只是将将做完。</p>

<!-- excerpt end -->

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/">http://frank19900731.github.io/blog/2014/10/19/idg-lian-he-zhao-pin-bi-shi-hui-yi/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>飞维美地笔试回忆</title>
    <link>http://realjenius.com/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-10-18T22:29:30+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">简介</a></li>
  <li><a href="#section-1">题目</a>    <ul>
      <li><a href="#linux">Linux题</a></li>
      <li><a href="#sql">SQL</a></li>
      <li><a href="#section-2">逻辑题</a></li>
      <li><a href="#section-3">读程序题</a></li>
      <li><a href="#section-4">写程序题</a></li>
      <li><a href="#section-5">网络题</a></li>
      <li><a href="#section-6">算法题</a></li>
      <li><a href="#section-7">广告算法</a></li>
      <li><a href="#section-8">吞吐量预测</a></li>
    </ul>
  </li>
  <li><a href="#section-9">总结</a></li>
</ul>

<!-- excerpt start -->

<p>这是面试、笔试总结的第一篇，其余会陆续更新直至十一月末，欢迎持续关注 <a href="http://frank19900731.github.io/category/%E9%9D%A2%E8%AF%95%E6%B1%82%E8%81%8C/">面试求职</a> 分类。</p>

<h2 id="section">简介</h2>
<p><a href="http://baike.baidu.com/view/5038799.htm?fr=aladdin">飞维美地</a> 这家公司是校招季才了解的一家公司，隶属 Comcast， 提供互联网视频广告投放、监测、预测、增值等关键解决方案，业务在欧美。公司主体在中国，纽约也有分部，恰可以提供 24 小时不间断服务。据称北京公司有120人，目标扩增至240人。</p>

<p>之前和靳导在东主楼参加了他们的算法分享会，干货多，实在。宣讲会上，进一步了解了公司的培训发展体系，感觉像一个小型大学，学习与成长的氛围都不错的样子，比较适合想在毕业后打好技术基础的同学，当然也能锻炼英语。不过作为在中国没有业务的小型外企，估计是没有北京户口吧。</p>

<p>书归正传，说题。据说这些题是公司员工近一个月想出来的，挺用心思的。共九类题，120分钟时间，可以全做，也可以挑选自己擅长的发挥。</p>

<!-- excerpt end -->

<h2 id="section-1">题目</h2>

<h3 id="linux">Linux题</h3>

<ol>
  <li>如何查看已使用的内存和剩余内存？</li>
  <li>如何查看所有进程，如何按照内存占比排序？</li>
  <li>给出 <code>ls -l</code> 的结果，写出文件类型和权限代码。</li>
  <li>子网 IP 为 192.168.10.0，子网掩码为 255.255.255.192，问子网格数和每个子网主机 IP 数？</li>
  <li>解释 DNS 的作用，举例说明 CNAME 的应用场景。</li>
</ol>

<h3 id="sql">SQL</h3>

<ul>
  <li>具体题目不描述了，反正是可以用 left + join 和 嵌套查询解决的问题。</li>
</ul>

<h3 id="section-2">逻辑题</h3>
<ul>
  <li>给定一种运算 NOTAND 及其真值表，让你仅用 NOTAND 表示 
    <ul>
      <li>OR（真值表给出）;</li>
      <li>命题（真值表给出）。</li>
    </ul>
  </li>
</ul>

<h3 id="section-3">读程序题</h3>
<ul>
  <li>GO 语言书写的二分查找，如果找到返回 Index，未找到返回 -1；现让你修改一行，使得如果找到返回 Index，未找到则返回小于待查找数的最大的数的 Index，如果还是没有，返回 -1。</li>
</ul>

<h3 id="section-4">写程序题</h3>
<ul>
  <li>给出一些函数及解释（pthread_mutex_lock， pthread_mutex_unlock， pthread_cond_wait， pthread_cond_signal， pthread_cond_broadcast），让你实现一个线程安全队列类中的 6 个函数（构造函数、析构函数、enqueue、dequeue、size、destroy，这里 destroy 的作用是清空队列 + 清空插入等待和读取等待）。</li>
</ul>

<h3 id="section-5">网络题</h3>
<ol>
  <li>页面由 A 重定向到 B，站点接受要访问 A 的请求，返回的代码是 302 还是 301，HEAD 头里 B 对应的属性是 Location 还是 Referral。 </li>
  <li>跨站脚本攻击相关</li>
  <li>忘了……</li>
</ol>

<h3 id="section-6">算法题</h3>
<ul>
  <li>如果可以在多项式时间内解决判断正整数集合内是否存在和相等的两个子集（互为补集）的问题并给出一组解，请问如何设计高效算法解决判断正整数集合内是否存在一个子集的和等于指定值这一问题并给出一组解？</li>
</ul>

<h3 id="section-7">广告算法</h3>
<ul>
  <li>已有按照优先级排列的广告，要处理广告请求。一个广告请求包含若干个指定时长的广告中断，约束条件有
    <ul>
      <li>有些广告对儿不能出现在同一个广告请求中；</li>
      <li>有些广告对儿不能出现在同一个广告中断中；</li>
      <li>广告中断中的广告时间总和不超过广告中断时长；</li>
    </ul>

    <p>请设计Advertisement、Request、Break类，实现这一算法。</p>
  </li>
</ul>

<h3 id="section-8">吞吐量预测</h3>
<ul>
  <li>给出网络带宽，读写速度，文件大小，压缩比，单条记录的长度，单服务器处理速度等数据，以及日志的处理方法，
    <ul>
      <li>要求估算单台机器处理500G 日志需要多长时间。</li>
      <li>现在想要实时处理日志，5分钟处理之前15分钟的，估计需要多少台机器。</li>
    </ul>
  </li>
</ul>

<p>这道题大致是这个意思吧，当时都给我整晕了，大概算了算，肯定不完善。</p>

<h2 id="section-9">总结</h2>

<p>题型比较广泛，不太需要 ACM 等相关技能，主要看分析思考的能力。当然，对于一些固定知识点的考察（比如网络相关的），也着实让我觉得有必要在考后夯实一下基础。<strong>基础还是记在脑子里比较好，不要太依赖搜索引擎。</strong></p>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/">http://frank19900731.github.io/blog/2014/10/18/fei-wei-mei-di-bi-shi-hui-yi/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>
