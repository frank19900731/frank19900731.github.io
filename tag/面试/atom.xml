
<item>
    <title>面试经验分享之智力题</title>
    <link>http://realjenius.com/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-11-07T14:56:13+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">前言</a></li>
  <li><a href="#section-1">题目介绍</a></li>
  <li><a href="#section-2">其它经典题目</a></li>
  <li><a href="#section-3">总结</a></li>
</ul>

<!-- excerpt start -->

<h2 id="section">前言</h2>
<p>我在算法工程师面试中遇到的智力题主要是指涉及到一些数学计算、证明的题目，基本是中小学奥数题。喜欢问这类问题的主要有互联网创业公司或外企，招收数值策划的游戏公司，当然，更多的是金融、投资相关的企业。从题目类型上分，有排列组合题、概率题等。</p>

<h2 id="section-1">题目介绍</h2>

<p><strong>题目一：给定天平，问要称重1-N N种不同质量，最少需要多少种砝码？</strong></p>

<p><strong>1）砝码只允许放在天平的一端；</strong></p>

<p><strong>2）砝码可以放在天平的两端。</strong></p>

<p><strong>解答：</strong> </p>

<ul>
  <li>只允许放在一边的情况，开始自己以为是斐波那契数列，不过显然数列生成方式里存在冗余（1+2=3）。1、2 肯定是最基本的数字，<strong>新添加的砝码质量应该是原砝码集合所能称量的最大质量加一</strong>，如此生成的数列就是2的幂次，1，2，4，……想到正整数二进制表达的唯一性，应该是不存在冗余的。可表示性是有了，对于1-N N种不同的质量，最少需要 <script type="math/tex">\left\lceil \log _{ 2 }{ (N+1) }  \right\rceil </script> 种不同的砝码，那是不是最少的呢？这种做法没有冗余，且表示范围是砝码的排列组合（每一个砝码可用可不用），应该就是最少了的，不过这不是严格证明。</li>
  <li>允许放在两边的情况，1、3是最基本的，因为 2 可以用 3-1 表达，<strong>新添加砝码的质量应该满足的条件是原砝码集合所能称量的最大质量加上这个最大质量的下一个质量</strong>。这种构造方法同样没有冗余，且表示范围是砝码的排列组合（每一砝码可加、可减、可不用，再排除掉和非正数的情况），所以应该也是最少的。按照这个思路生成的数列就是3的幂次，1，3，9，27……可以用数学归纳法证明如下。</li>
</ul>

<!-- excerpt end -->

<p><strong>证明：数列 <script type="math/tex">1，3，…，3^{n-1}</script>，任取其中若干进行加减组合可以表示 <script type="math/tex">1</script> 到 <script type="math/tex">\frac{3^n - 1}{2}</script> （允许减法的排列组合所能表示的最大范围）间的不同数值。</strong></p>

<p>1）<script type="math/tex">k=1</script> 时，显然满足；</p>

<p>2）<script type="math/tex">k=n</script> 时，有 <script type="math/tex">1，3，……，3^{n-1}</script> 可以表出 <script type="math/tex">1</script> 到 <script type="math/tex">\frac{3^n - 1}{2}</script>；</p>

<p>3）<script type="math/tex">k=n+1</script> 时，要证明 <script type="math/tex">1，3，……，3^n</script> 可以表出 <script type="math/tex">1</script> 到 <script type="math/tex">\frac{3^{n+1} - 1}{2}</script> </p>

<p>3-1）<script type="math/tex">1</script> 到 <script type="math/tex">\frac{3^n - 1}{2}</script> 显然可由 <script type="math/tex">1，3，……，3^{n-1}</script> 表出； </p>

<p>3-2）<script type="math/tex">\frac{3^n + 1}{2}</script> 到 <script type="math/tex">3^n - 1</script> 可以由 <script type="math/tex">3^n</script> 减去 <script type="math/tex">\frac{3^n - 1}{2}</script>  到 <script type="math/tex">1</script> 表出；</p>

<p>3-3）<script type="math/tex">3^n</script> 是新加入的数，可以单独表出；</p>

<p>3-4）<script type="math/tex">3^n + 1</script> 到 <script type="math/tex">\frac{3^{n+1} - 1}{2}</script> 可以由 <script type="math/tex">3^n</script> 加上 <script type="math/tex">1</script> 到 <script type="math/tex">\frac{3^n - 1}{2}</script> 表出。</p>

<p>综上，有原命题成立。</p>

<p>有关本题的更多讨论参见果壳网的 <a href="http://www.guokr.com/article/3742/">这篇文章</a>。</p>

<p><strong>题目二：如下图所示概率密度分布，左边平缓，右边陡峭，指定中位数的位置，问均值在中位数的左侧还是右侧？</strong></p>

<p><a href="http://frank19900731.github.io/img/post/2014-11/1.png" class="img-up" title="概率分布，中位数和均值的位置关系"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-11/1.png" width="40%" title="概率分布，中位数和均值的位置关系" /></a></p>

<p><strong>解答：</strong> </p>

<p>我的感觉是均值在中位数的左侧，不过我希望用严格的数学推导证明出来，后来发现很有难度，因为没有给出概率密度分布的具体形式。面试官及时“制止”了我，让我想一点直观的解释。</p>

<p>我觉得可以用收入分布来类比，左边高收入人群少，右边是低收入群体，占很大的比重。统计局公布的人居年收入是均值，网友纷纷表示自己拉低了平均收入，不上网的人收入水平可能更低一些。综上，姑且认为超过一半的人收入不及均值（只是为回答问题而做的推测，超过平均水平的一般不会自己说出来，所以可能统计有偏差），也即中位数在均值的右侧。</p>

<p>面试官给出的解释比我的好很多。类比一把斧头的质量密度，中位数左右的半边斧头质量相等，而均值则是斧头的支撑平衡点（假设均值为0，这个支撑平衡点就是原点），根据力矩平衡原理，支撑点要比中位数更偏向斧头的木把儿一边。</p>

<p><strong>题目三：玩家打怪，通关一次掉落 A 装备的概率是 0.1，掉落 B 装备的概率是0.2，该玩家要获得 A、B 两件装备的期望通关次数是多少？</strong></p>

<p><strong>解答：</strong> </p>

<p>画图表示 A 和 B 的关系</p>

<p><a href="http://frank19900731.github.io/img/post/2014-11/2.png" class="img-up" title="A 和 B 的三种关系"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-11/2.png" width="70%" title="A 和 B 的三种关系" /></a></p>

<ul>
  <li>如果 A 和 B 是互斥事件，首先考虑第一次拿到一件装备的期望通关次数，这件装备有 <script type="math/tex">\frac{1}{3}</script> 的可能性是 A，<script type="math/tex">\frac{2}{3}</script> 的可能性是 B，接下来根据几何分布的无后效性进行计算，期望次数为 </li>
</ul>

<script type="math/tex; mode=display">\frac{1}{0.1 + 0.2} + \frac{1}{3}  \times  \frac{1}{0.2} + \frac{2}{3} \times \frac{1}{0.1} = \frac{35}{3}</script>

<ul>
  <li>如果 B 事件 包含 A 事件，则期望次数为 </li>
</ul>

<script type="math/tex; mode=display">\frac{1}{0.1} = 10</script>

<ul>
  <li>其他情况，期望次数在 <script type="math/tex">10</script> 和 <script type="math/tex">\frac{35}{3}</script> 之间。</li>
</ul>

<p><strong>变式：玩家一打掉落 A 装备的怪，玩家二打掉落 B 装备的怪，相互独立，他们协作收集 A、B 两件装备，则期望多少轮集齐？</strong></p>

<ul>
  <li>
    <p>思路一：有三种可能性，先拿到 A 再拿到 B，概率是 <script type="math/tex">\frac{4}{14}</script>，先拿到 B 再拿到 A，概率是 <script type="math/tex">\frac { 9 }{ 14 } </script>； A、B同时拿到，概率是 <script type="math/tex">\frac { 1 }{ 14 }</script> 。这些概率可以通过列写等比数列求和公式得到，本文不赘述，因为思路二提供了更简单的计算方法。计算期望得 </p>

    <script type="math/tex; mode=display">\frac{4}{14} \times  \frac{1}{0.2} + \frac{9}{14}  \times  \frac{1}{0.1} + \frac{1}{14} \times \frac{1}{0.1 \times 0.2} = \frac{80}{7}</script>

    <p>关于最后一项 <script type="math/tex">\frac{1}{14} \times \frac{1}{0.1 \times 0.2}</script> 的解释是，玩家一、二一定是在某一轮同时分别获得 A 和 B，那么可以认为是<strong>一个人在玩，而该关卡要么同时掉落 A 和 B，要么什么也不掉落</strong>。由这样一种解释也就自然想到了思路二。</p>
  </li>
  <li>
    <p>思路二：玩家一、玩家二可以统一为一个人，只不过这个人在通关后获得 A、B 的概率是相互独立的，<script type="math/tex">P\left( AB \right) =P\left( A \right) \cdot P\left( B \right) </script>。由此前的计算思路可得期望为 </p>

    <script type="math/tex; mode=display">\frac{1}{0.28} + \frac{0.08}{0.28} \times  \frac{1}{0.2} + \frac{0.18}{0.28}  \times  \frac{1}{0.1} + \frac{0.02}{0.28} \times 0 = \frac{80}{7}</script>
  </li>
</ul>

<p><strong>题目四：一群人每人说一到一百间的整数，接近平均数的三分之二的人会获奖，该说什么数字才能使获奖机率最大？</strong></p>

<p><strong>解答：</strong> </p>

<p>假设每个人都是理性的，那么没有人会选择 67-100，再次分析可知没有人会选择 45-66，以此类推，最终只有选择 1。<strong>不过实际当中并不是所有人都这么聪明理性，做适当的假设可以得到更接近真实情况的结果</strong>。</p>

<blockquote><p>1987年，《金融时报》刊登了一个很诡异的广告，说你可以随便写一个0~100（与本题略有不同）之间的整数	寄回编辑部，然后如果你写的这个数最接近所有寄来的数的平均数的2/3，你就可以获得一张伦敦到纽约的头等舱往返机票。最后得到的结果是……平均数为18.9。也就是写13的人赢了。</p></blockquote>

<p>更多分析见果壳网的 <a href="http://www.guokr.com/question/292144/">这篇文章</a>。</p>

<p><strong>题目五：考虑 n 维向量 X、Y，其中每个元素独立同分布，分布为 N(0，1)，请计算 X、Y 相关系数的均值和标准差。</strong></p>

<p><strong>解答：</strong></p>

<p>本题其实是百度笔试的一道题，只有5分，但还是颇有难度的，实际上本题无需进行任何复杂的积分计算。相关系数的均值表达式如下</p>

<script type="math/tex; mode=display">% <![CDATA[

\begin{align}
E\left( r \right)  &= \iint { \frac { \left( X-EX \right) \cdot \left( Y-EY \right)  }{ \left\| X-EX \right\| \left\| Y-EY \right\|  } \cdot p\left( X \right) \cdot p\left( Y \right) dXdY }  \\
&= \iint { \frac { X\cdot Y }{ \left\| X \right\| \left\| Y \right\|  } \cdot p\left( X \right) \cdot p\left( Y \right) dXdY } 
\end{align}
 %]]></script>

<p>考察 X （或Y）<strong>关于原点的对称抵消特性</strong>，知期望值为 0。</p>

<p>相关系数的方差表达式为：</p>

<script type="math/tex; mode=display">% <![CDATA[

\begin{align}
Var\left( r \right)  &= E{ \left( r-E\left( r \right)  \right)  }^{ 2 } \\
&= E{ r }^{ 2 } \\
&= \iint { \frac { \left( \left( X-EX \right) \cdot \left( Y-EY \right)  \right) ^{ 2 } }{ { \left\| X-EX \right\|  }^{ 2 }{ \left\| Y-EY \right\|  }^{ 2 } } \cdot p\left( X \right) \cdot p\left( Y \right) dXdY }   \\
&= \iint { \frac { \left( X\cdot Y \right) ^{ 2 } }{ { \left\| X \right\|  }^{ 2 }{ \left\| Y \right\|  }^{ 2 } } \cdot p\left( X \right) \cdot p\left( Y \right) dXdY } \\
&= \iint { { \left( \frac { X }{ \left\| X \right\|  } \cdot \frac { Y }{ \left\| Y \right\|  }  \right)  }^{ 2 }\cdot p\left( X \right) \cdot p\left( Y \right) dXdY } 
\end{align}
 %]]></script>

<p>最后一个式子中，X、Y 的关系是对称的，几何含义是<strong>单位球面上两个随机向量的内积平方的期望</strong>。与其让 X、Y 都随机，我们可以固定其中一个，只计算<strong>随机向量和固定向量的内积平方的期望</strong>，<strong>如果任取固定向量都有这个期望值相同，那么这个期望就是本题的待求期望</strong>。</p>

<p>我们先取固定向量为 <script type="math/tex">{ \left( 0,\quad 0,\quad \dots \quad 1 \right)  }^{ T }</script>，则积分式子转化为</p>

<script type="math/tex; mode=display">\int { \frac { { Y }_{ n }^{ 2 } }{ \sum _{ i=1 }^{ n }{ { Y }_{ i }^{ 2 } }  } \cdot p\left( Y \right) dY } </script>

<p>乍一看分子分母都是卡方分布，不过二者不是相互独立的，也就不构成 F 分布，怎么求解呢？要用到 <script type="math/tex">{ Y }_{ i }</script> 的轮换对称性。</p>

<script type="math/tex; mode=display">\int { \frac { { Y }_{ 1 }^{ 2 } }{ \sum _{ i=1 }^{ n }{ { Y }_{ i }^{ 2 } }  } \cdot p\left( Y \right) dY } =\dots =\int { \frac { { Y }_{ n }^{ 2 } }{ \sum _{ i=1 }^{ n }{ { Y }_{ i }^{ 2 } }  } \cdot p\left( Y \right) dY } </script>

<p>又</p>

<script type="math/tex; mode=display">\sum _{ k=1 }^{ n }{ \int { \frac { { Y }_{ k }^{ 2 } }{ \sum _{ i=1 }^{ n }{ { Y }_{ i }^{ 2 } }  } \cdot p\left( Y \right) dY }  } =1</script>

<p>所以</p>

<script type="math/tex; mode=display">\int { \frac { { Y }_{ k }^{ 2 } }{ \sum _{ i=1 }^{ n }{ { Y }_{ i }^{ 2 } }  } \cdot p\left( Y \right) dY } =\frac { 1 }{ n } ,\quad k=1,2,\dots ,n </script>

<p>也就是说标准差为 <script type="math/tex">\frac { 1 }{ \sqrt { n }  } </script> 咯？</p>

<p>如果随机向量在球面上是均匀分布的那我们的讨论也就停止了，不过事实并非如此。二维情况，考察单位圆周上的随机向量，斜率的分布（两个正态分布的均值为0时，它们的 <a href="http://mathworld.wolfram.com/NormalRatioDistribution.html">商是柯西分布</a> ）是不均匀的。在这种不均匀的情况下，想要得到积分值不变的结论好像没有那么直观。受 <script type="math/tex">{ \left( 0,\quad 0,\quad \dots \quad 1 \right)  }^{ T }</script> 的启发，我想到一个笨办法，还是用到轮换对称性。我们只要<strong>找到值相等的一些表达式，让他们相加等于一个常数即可</strong>。</p>

<p><span style="color: red;">更正：“不均匀”的说法是有问题的，这个不均匀是相对于斜率的不均匀，对于角度而言是均匀的，可以将柯西分布里的比值变量 <script type="math/tex">u</script> 替换为角度 <script type="math/tex">\theta </script>，由下面的表达式知是均匀分布。</span></p>

<script type="math/tex; mode=display">\int _{ -\infty  }^{ +\infty  }{ \frac { 1 }{ \pi \left( 1+{ u }^{ 2 } \right)  } du } =\int _{ -\frac { \pi  }{ 2 }  }^{ \frac { \pi  }{ 2 }  }{ \frac { 1 }{ \pi \left( 1+\tan ^{ 2 }{ \theta  }  \right)  } \frac { d\theta  }{ \cos ^{ 2 }{ \theta  }  }  } =\int _{ -\frac { \pi  }{ 2 }  }^{ \frac { \pi  }{ 2 }  }{ \frac { d\theta  }{ \pi  }  } </script>

<p><span style="color: red;">高维情况如下式所示，某向量的概率密度只与向量长度有关，而与角度无关，所以放缩到单位球面上关于角度是均匀的，所以只需要计算 <script type="math/tex">{ \left( 0,\quad 0,\quad \dots \quad 1 \right)  }^{ T }</script> 一种情况就可以。</span></p>

<script type="math/tex; mode=display">\frac { 1 }{ { \left( \sqrt { 2\pi  }  \right)  }^{ n } } { e }^{ -\frac { \sum _{ i=1 }^{ n }{ { x }_{ i }^{ 2 } }  }{ 2 }  }=\frac { 1 }{ { \left( \sqrt { 2\pi  }  \right)  }^{ n } } { e }^{ -\frac { { r }^{ 2 } }{ 2 }  }</script>

<p>轮换对称性分两步，首先是<strong>系数轮换</strong>，其次是<strong>符号轮换</strong>，以 4 维情况为例，假设固定向量为</p>

<script type="math/tex; mode=display">{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }</script>

<p>系数轮换是指以下四个固定向量计算得到的积分结果是相同的</p>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  } ,\quad \frac { 1 }{ \sqrt { 24 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  } ,\quad \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 2 }  } ,\quad \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  }  \right)  }^{ T }
</script>

<p>符号对称性是指以下八个固定向量计算得到的积分结果是相同的</p>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( -\frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad -\frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad -\frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( \frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad -\frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( -\frac { 1 }{ \sqrt { 24 }  } ,\quad -\frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( -\frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad -\frac { 1 }{ \sqrt { 3 }  } ,\quad \frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<script type="math/tex; mode=display">
{ \left( -\frac { 1 }{ \sqrt { 24 }  } ,\quad \frac { 1 }{ \sqrt { 8 }  } ,\quad \frac { 1 }{ \sqrt { 3 }  } ,\quad -\frac { 1 }{ \sqrt { 2 }  }  \right)  }^{ T }
</script>

<p><strong>系数轮换是为了保证加和结果中各平方项系数相等，可约去分母，符号轮换是为了保证加和结果中的交叉项系数为 0</strong>。对于 4 维向量，我们经过系数轮换和符号轮换获得了 32（<script type="math/tex">= 4 \times 8</script>） 个等值的积分表达式，累加和等于 8，每个积分表达式的值是 <script type="math/tex">{ \frac { 1 }{ 4 }  }</script>，也即 <script type="math/tex">{ \frac { 1 }{ n }  }</script>。</p>

<p>简单总结一下，系数轮换我们采用循环移位的策略，也就是 n 组系数；每组系数对应 <script type="math/tex">{ { 2 }^{ n-1 } }</script> 种（因为是平方，所以一半和另一半是等价的）符号选择。<strong>对于任给的固定向量，总可以通过这样的构造辅助等价固定向量的方式求解，而求得的积分结果总是 <script type="math/tex">{ \frac { 1 }{ n }  }</script></strong>。</p>

<p>综上，<strong>相关系数的均值是 0，标准差是 <script type="math/tex">{ \frac { 1 }{ \sqrt { n }  }  }</script></strong>。</p>

<p>以下是 Matlab 仿真结果：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>相关系数的均值、方差仿真</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="matlab"><span class="line"><span class="n">array</span> <span class="p">=</span> <span class="p">[];</span>
</span><span class="line"><span class="n">n</span> <span class="p">=</span> <span class="mi">5</span><span class="p">;</span>
</span><span class="line"><span class="n">iter</span> <span class="p">=</span> <span class="mi">100000</span><span class="p">;</span>
</span><span class="line"><span class="k">for</span> <span class="nb">i</span> <span class="p">=</span> <span class="mi">1</span><span class="p">:</span><span class="n">iter</span>
</span><span class="line"><span class="n">x</span> <span class="p">=</span> <span class="n">normrnd</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="n">y</span> <span class="p">=</span> <span class="n">normrnd</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
</span><span class="line"><span class="n">array</span> <span class="p">=</span> <span class="p">[</span><span class="n">array</span><span class="p">,</span> <span class="n">sum</span><span class="p">(</span><span class="n">x</span><span class="o">.*</span><span class="n">y</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="n">norm</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">*</span><span class="n">norm</span><span class="p">(</span><span class="n">y</span><span class="p">))];</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line"><span class="n">avg</span> <span class="p">=</span> <span class="n">mean</span><span class="p">(</span><span class="n">array</span><span class="p">);</span>
</span><span class="line"><span class="n">avar</span> <span class="p">=</span> <span class="n">var</span><span class="p">(</span><span class="n">array</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>10 万个相关系数样本，括号内为 <script type="math/tex">\frac{1}{n}</script> 的值</p>

<p>5 维，单次运行均值为 -0.0023，方差为 0.1999（0.2）；</p>

<p>11 维，单次运行均值为 -0.0011，方差为 0.0908（0.0909）；</p>

<p>23 维，单次运行均值为 0.0003，方差为 0.0433（0.0435）。</p>

<h2 id="section-2">其它经典题目</h2>

<ol>
  <li><a href="http://baike.baidu.com/view/2499752.htm?fr=aladdin">卡特兰数</a> 相关问题
    <ul>
      <li>括号化</li>
      <li>出栈次序</li>
      <li><a href="http://blog.csdn.net/jtlyuan/article/details/7440591">找钱问题</a></li>
    </ul>
  </li>
  <li><a href="http://blog.sina.com.cn/s/blog_519169510101bljn.html">帽子问题</a></li>
  <li><a href="http://blog.csdn.net/wangshihui512/article/details/8860193">海盗分金</a></li>
  <li><a href="http://www.zhihu.com/question/25420139">宝石升级</a></li>
  <li>……</li>
</ol>

<h2 id="section-3">总结</h2>

<ul>
  <li>简要复习概率、期望、常见概率分布、排列组合等知识；</li>
  <li>金融、投资领域的面试参加的不多，过段时间再补充几道有关概率、博弈论的题目;</li>
  <li>多关注 <a href="http://www.matrix67.com/blog/">Matrix67</a> 上的题目分享。</li>
</ul>

<p>继 <code>机器学习、大数据问题</code>、<code>智力题</code>，接下来的博文还会陆续分享 <code>编程语言题</code> 和 <code>数据结构与算法题</code>，敬请期待。</p>

<p>访问入口：</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">智力题</a></li>
  <li>数据结构与算法题</li>
  <li>编程语言题</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>面试经验分享之机器学习、大数据问题</title>
    <link>http://realjenius.com/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-11-06T14:38:33+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/</guid>
    <description><![CDATA[
     <p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">机器学习、大数据相关岗位的职责</a></li>
  <li><a href="#section-1">面试问题</a></li>
  <li><a href="#section-2">答题思路</a></li>
  <li><a href="#section-3">准备建议</a></li>
  <li><a href="#section-4">总结</a></li>
</ul>

<!-- excerpt start -->

<p>自己的专业方向是机器学习、数据挖掘，就业意向是互联网行业与本专业相关的工作岗位。各个企业对这类岗位的命名可能有所不同，比如数据挖掘/自然语言处理/机器学习算法工程师，或简称算法工程师，还有的称为搜索/推荐算法工程师，甚至有的并入后台工程师的范畴，视岗位具体要求而定。</p>

<h2 id="section">机器学习、大数据相关岗位的职责</h2>

<p>自己参与面试的提供算法岗位的公司有 BAT、小米、360、飞维美地、宜信、猿题库 等，根据业务的不同，岗位职责大概分为：</p>

<ol>
  <li>平台搭建类
    <ul>
      <li>数据计算平台搭建，基础算法实现，当然，要求支持<strong>大样本量、高维度数据</strong>，所以可能还需要底层开发、并行计算、分布式计算等方面的知识；</li>
    </ul>
  </li>
  <li>算法研究类
    <ul>
      <li><strong>文本挖掘</strong>，如领域知识图谱构建、垃圾短信过滤等；</li>
      <li><strong>推荐</strong>，广告推荐、APP 推荐、题目推荐、新闻推荐等；</li>
      <li><strong>排序</strong>，搜索结果排序、广告排序等；</li>
      <li>广告投放效果分析；</li>
      <li>互联网信用评价；</li>
      <li>图像识别、理解。</li>
    </ul>
  </li>
  <li>数据挖掘类
    <ul>
      <li><strong>商业智能</strong>，如统计报表；</li>
      <li><strong>用户体验分析</strong>，预测流失用户。</li>
    </ul>
  </li>
</ol>

<p>以上是根据本人求职季有限的接触所做的总结。有的应用方向比较成熟，业界有足够的技术积累，比如搜索、推荐，也有的方向还有很多开放性问题等待探索，比如互联网金融、互联网教育。在面试的过程中，一方面要尽力向企业展现自己的能力，另一方面也是在增进对行业发展现状与未来趋势的理解，特别是可以<strong>从一些刚起步的企业和团队那里，了解到一些有价值的一手问题</strong>。</p>

<p>以下首先介绍面试中遇到的一些真实问题，然后谈一谈答题和面试准备上的建议。</p>

<!-- excerpt end -->

<h2 id="section-1">面试问题</h2>

<ol>
  <li>你在研究/项目/实习经历中主要用过哪些机器学习/数据挖掘的算法？</li>
  <li>你熟悉的机器学习/数据挖掘算法主要有哪些？</li>
  <li>你用过哪些机器学习/数据挖掘工具或框架？</li>
  <li>基础知识
    <ul>
      <li>无监督和有监督算法的区别？</li>
      <li>SVM 的推导，特性？多分类怎么处理？</li>
      <li>LR 的推导，特性？</li>
      <li>决策树的特性？</li>
      <li>SVM、LR、决策树的对比？</li>
      <li>GBDT 和 决策森林 的区别？</li>
      <li>如何判断函数凸或非凸？</li>
      <li>解释对偶的概念。</li>
      <li>如何进行特征选择？</li>
      <li>为什么会产生过拟合，有哪些方法可以预防或克服过拟合？</li>
      <li>介绍卷积神经网络，和 DBN 有什么区别？</li>
      <li>采用 EM 算法求解的模型有哪些，为什么不用牛顿法或梯度下降法？</li>
      <li>用 EM 算法推导解释 Kmeans。</li>
      <li>用过哪些聚类算法，解释密度聚类算法。</li>
      <li>聚类算法中的距离度量有哪些？</li>
      <li>如何进行实体识别？</li>
      <li>解释贝叶斯公式和朴素贝叶斯分类。</li>
      <li>写一个 Hadoop 版本的 wordcount。</li>
      <li>……</li>
    </ul>
  </li>
  <li>开放问题
    <ul>
      <li>给你公司内部群组的聊天记录，怎样区分出主管和员工？</li>
      <li>如何评估网站内容的真实性（针对代刷、作弊类）？</li>
      <li>深度学习在推荐系统上可能有怎样的发挥？</li>
      <li>路段平均车速反映了路况，在道路上布控采集车辆速度，如何对路况做出合理估计？采集数据中的异常值如何处理？</li>
      <li>如何根据语料计算两个词词义的相似度？</li>
      <li>在百度贴吧里发布 APP 广告，问推荐策略？</li>
      <li>如何判断自己实现的 LR、Kmeans 算法是否正确？</li>
      <li>100亿数字，怎么统计前100大的？</li>
      <li>……</li>
    </ul>
  </li>
</ol>

<h2 id="section-2">答题思路</h2>

<ol>
  <li>用过什么算法？
    <ul>
      <li>最好是在<strong>项目/实习的大数据场景</strong>里用过，比如推荐里用过 CF、LR，分类里用过 SVM、GBDT；</li>
      <li>一般用法是什么，是不是自己实现的，有什么比较知名的实现，使用过程中<strong>踩过哪些坑</strong>；</li>
      <li>优缺点分析。</li>
    </ul>
  </li>
  <li>熟悉的算法有哪些？
    <ul>
      <li>基础算法要多说，其它算法要挑熟悉程度高的说，不光列举算法，也适当说说应用场合；</li>
      <li>面试官和你的研究方向可能不匹配，不过在基础算法上你们还是有很多共同语言的，你说得太高大上可能效果并不好，一方面面试官还是要问基础的，另一方面一旦面试官突发奇想让你给他讲解高大上的内容，而你只是泛泛的了解，那就傻叉了。</li>
    </ul>
  </li>
  <li>用过哪些框架/算法包？
    <ul>
      <li>主流的分布式框架如 Hadoop，Spark，Graphlab，Parameter Server 等择一或多使用了解；</li>
      <li>通用算法包，如 mahout，scikit，weka 等；</li>
      <li>专用算法包，如 opencv，theano，torch7，ICTCLAS 等。</li>
    </ul>
  </li>
  <li>基础知识
    <ul>
      <li>个人感觉高频话题是 SVM、LR、决策树（决策森林）和聚类算法，要重点准备；</li>
      <li>算法要从以下几个方面来掌握
        <ul>
          <li>产生背景，适用场合（数据规模，特征维度，是否有 Online 算法，离散/连续特征处理等角度）；</li>
          <li>原理推导（最大间隔，软间隔，对偶）；</li>
          <li>求解方法（随机梯度下降、拟牛顿法等优化算法）；</li>
          <li>优缺点，相关改进；</li>
          <li>和其他基本方法的对比；</li>
        </ul>
      </li>
      <li>不能停留在能看懂的程度，还要
        <ul>
          <li>对知识进行结构化整理，比如撰写自己的 cheet sheet，我觉得<strong>面试是在有限时间内向面试官输出自己知识的过程</strong>，如果仅仅是在面试现场才开始调动知识、组织表达，总还是不如系统的梳理准备；</li>
          <li>从面试官的角度多问自己一些问题，通过查找资料总结出全面的解答，比如如何预防或克服过拟合。</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>开放问题
    <ul>
      <li>由于问题具有综合性和开放性，所以不仅仅考察对算法的了解，还需要足够的实战经验作基础；</li>
      <li><strong>先不要考虑完善性或可实现性</strong>，调动你的一切知识储备和经验储备去设计，有多少说多少，想到什么说什么，方案都是在你和面试官讨论的过程里逐步完善的，不过面试官有两种风格：引导你思考考虑不周之处 or 指责你没有考虑到某些情况，遇到后者的话还请注意<strong>灵活调整答题策略</strong>;</li>
      <li>和同学朋友开展讨论，可以从上一节列出的问题开始。	</li>
    </ul>
  </li>
</ol>

<h2 id="section-3">准备建议</h2>

<ol>
  <li>基础算法复习两条线
    <ul>
      <li><code>材料阅读</code> 包括经典教材（比如 PRML，模式分类）、网上系列博客（比如 研究者July），系统梳理基础算法知识；</li>
      <li><code>面试反馈</code> <strong>面试过程中会让你发现自己的薄弱环节和知识盲区，把这些问题记录下来，在下一次面试前搞懂搞透</strong>。</li>
    </ul>
  </li>
  <li>除算法知识，还应适当掌握一些系统架构方面的知识，可以从网上分享的阿里、京东、新浪微博等的架构介绍 PPT 入手，也可以从 Hadoop、Spark 等的设计实现切入。</li>
  <li>如果真的是以就业为导向就要在平时注意实战经验的积累，在科研项目、实习、比赛（Kaggle，Netflix，天猫大数据竞赛等）中摸清算法特性、熟悉相关工具与模块的使用。</li>
</ol>

<h2 id="section-4">总结</h2>

<p>如今，好多机器学习、数据挖掘的知识都逐渐成为常识，要想在竞争中脱颖而出，就必须做到</p>

<ul>
  <li>保持学习热情，关心热点；</li>
  <li>深入学习，会用，也要理解；</li>
  <li>在实战中历练总结；</li>
  <li>积极参加学术界、业界的讲座分享，向牛人学习，与他人讨论。</li>
</ul>

<p>最后，希望自己的求职季经验总结能给大家带来有益的启发。</p>

<p>继 <code>机器学习、大数据问题</code>，接下来的博文还会陆续分享 <code>智力题</code>、<code>编程语言题</code> 和 <code>数据结构与算法题</code>，敬请期待。</p>

<p>访问入口：</p>

<ul>
  <li><a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">机器学习、大数据问题</a></li>
  <li><a href="http://frank19900731.github.io/blog/2014/11/07/mian-shi-jing-yan-fen-xiang-zhi-zhi-li-ti/">智力题</a></li>
  <li>数据结构与算法题</li>
  <li>编程语言题</li>
</ul>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/">http://frank19900731.github.io/blog/2014/11/06/mian-shi-jing-yan-zhi-ji-qi-xue-xi-da-shu-ju-wen-ti/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>

<item>
    <title>记某游戏公司面试经历</title>
    <link>http://realjenius.com/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/</link>
    <author>R.J. Lorimer</author>
    <pubDate>2014-10-20T22:34:31+08:00</pubDate>
    <guid>http://realjenius.com/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/</guid>
    <description><![CDATA[
     <p>本文原载笔者 <a href="http://blog.sina.com.cn/s/blog_64ac3ab10102v40l.html">新浪博客</a>，因契合 <a href="http://frank19900731.github.io/category/%E9%9D%A2%E8%AF%95%E6%B1%82%E8%81%8C/">面试求职</a> 主题，所以搬运到这里。</p>

<p><strong>目录</strong></p>

<ul id="markdown-toc">
  <li><a href="#section">题目</a></li>
  <li><a href="#section-1">设计思路</a>    <ul>
      <li><a href="#section-2">引导画面</a></li>
      <li><a href="#section-3">关卡设计</a></li>
      <li><a href="#section-4">创新点</a></li>
      <li><a href="#section-5">关卡细部</a></li>
      <li><a href="#section-6">玩法说明</a></li>
      <li><a href="#section-7">技能设计</a></li>
    </ul>
  </li>
  <li><a href="#section-8">面试过程</a></li>
  <li><a href="#section-9">经验总结</a></li>
</ul>

<!-- excerpt start -->
<p>最终的结果是面挂了。</p>

<h2 id="section">题目</h2>

<p>现场试玩三个经典游戏（十分钟），分别是贪吃蛇、别踩白块儿、泡泡龙，选一个做改编。每人发两张卡片，一个是人物，一个是场景。我的两个图片分别是Q版拿着弓箭的小女孩和中式的建筑群。要求将两幅图片融入三个经典游戏中的一款里面，编故事设计关卡技能。</p>

<ol>
  <li>设计游戏开始时的引导画面，介绍背景之类的，并埋下伏笔，接下在游戏里自然将伏笔揭开。 </li>
  <li>将游戏改造成经典关卡模式，但不改变游戏的原始玩法，要求设计三个创新点，融入关卡中。</li>
  <li>设计人物的两个技能，设定数值并分析强弱。</li>
</ol>

<p>设计时间共20分钟。</p>

<h2 id="section-1">设计思路</h2>

<p>我选择改造的是别踩白块儿，游戏玩法大概是屏幕上有很多行从上往下滑动，每行有四列，分别是三白一黑，我们要从下到上每一行只点黑块，误点白块就GG思密达，看谁坚持的时间长。</p>

<p>Q版带弓箭的的小女孩儿，唐宋风味的楼阁让我首先想到的是唐宋时期的战争题材，主角是女性角色，想到了杨家将里的杨九妹。</p>

<p>故事时代设定在北宋，正派人物杨九妹，反派人物潘仁美、耶律大王（化名，指代辽国主帅）和萧太后。</p>

<!-- excerpt end -->

<h3 id="section-2">引导画面</h3>

<ul>
  <li>第一幕：赵匡胤黄袍加身，攻北汉将杨家将收入帐下；</li>
  <li>第二幕：雁门关血战，因奸臣潘仁美的陷害和辽兵的诡计，杨家将死战沙场；</li>
  <li>第三幕：一个破损但迎风招展的杨字大旗，表明杨家忠良尽死，杨家枪法也随之失传（伏笔一）；</li>
  <li>第四幕：潘仁美恶人先告状，抄杨业的家，一本珍贵的古琴谱或者古诗集被潘仁美据为己有（伏笔二），萧太后、耶律大王对中原虎视眈眈，意图吞并；</li>
  <li>第五幕：佘太君和众嫂嫂的带领下，杨九妹要继承父兄遗志，在内清君侧，在外保卫国家的边疆安宁。</li>
</ul>

<p>故事的结局设计：杨九妹战场屡建奇功，宋辽签订和平条约（考虑到去大汉族沙文主义），边境百年安宁，百姓安居乐业，潘仁美受到了应有的惩罚。杨九妹上马可以驰骋沙场，下马也能粗茶淡饭，脱去武装能做女红，过上了普通人的幸福生活。</p>

<h3 id="section-3">关卡设计</h3>

<ol>
  <li><code>雁门血战</code>  boss为耶律大王，击败之获得杨家枪法，开始有武略值。</li>
  <li><code>为父报仇</code>  boss为潘仁美，严惩之获得古琴谱或古诗集，开始有文韬值。</li>
  <li><code>直捣黄龙</code>  boss为萧太后，击败之获得游戏最终胜利，宋辽边境自此和平，父兄志愿得以伸张。</li>
</ol>

<h3 id="section-4">创新点</h3>

<ol>
  <li>
    <p><code>前有堵截，后有追兵</code>  杨九妹单骑闯阵，安排一队辽兵在杨九妹的后面追赶，类似于神庙逃亡，这一队辽兵不出现，只是显示距离追上九妹还有多长时间，如果追上，则关卡挑战失败。杨九妹前方还有辽军营帐，她需要射箭攻击穿越营帐。九妹以固定的速度向营帐靠近（可以认为人物固定在iPad底部不动，场景以固定速度下移），如果九妹没有及时击溃兵营而与之相遇，则扣除一定的体力，在到达boss前体力为0则挑战亦失败。</p>
  </li>
  <li>
    <p><code>诗文、歌曲挑战</code>  杨九妹在成长中要培养自己的文韬武略，武略可以通过击杀敌人获得，而文韬则需要在诗词歌赋中锻炼。九妹前方可能出现文字矩阵（类似于文字矩阵中找成语），每一行取一个字可以连成一句诗（或者一首曲子啦，如果不是字而是简谱的话），比如游戏会提示是李白《侠客行》里面的一句诗，那你在第一行踩“十”、第二行踩“步”……对应于别踩白块儿中的黑块儿，形成一句诗“十步杀一人，千里不留行”。</p>
  </li>
  <li>
    <p><code>引入罚时机制</code>  想到一般游戏中有沼泽可以拖延人物的行动时间，我想可以在游戏中引入进来，相当于别踩沼泽，跟白块儿是一个意思，如果踩入，则罚时一定时间，但不会像别踩白块儿游戏那样，你踩错了就退出了。罚时机制还可以通过人物技能（保卫萝卜中的全屏冰冻、减速）以及掉落物品（比如打死小兵有几率获得一块香蕉皮，自动扔到你后面让追兵滑到）来实现。</p>
  </li>
</ol>

<h3 id="section-5">关卡细部</h3>

<p>分三种场景，兵营场景、诗歌场景和沼泽场景。</p>

<ol>
  <li><code>兵营场景</code>  对应创新点一，人物通过击杀可获得武略值</li>
  <li><code>诗歌场景</code>  对应创新点二，人物通过击杀可获得文韬值</li>
  <li><code>沼泽场景</code>  对应创新点三</li>
</ol>

<p>这些场景可以这样组合：<code>外围兵营</code> - <code>诗歌场景</code> - <code>近卫兵营</code> - <code>沼泽场景</code> - <code>中军兵营</code> - <code>boss</code>。越靠近boss的兵营血量或抗打击能力越强。每一个场景都还是多行四列的模式。</p>

<h3 id="section-6">玩法说明</h3>

<p>攻击兵营的方法是点击营垒，杨九妹就会在屏幕底部向相应的营垒射箭。</p>

<p>诗歌和沼泽跟原游戏玩法大致相同，每行只点唯一正确的那个格子即可。</p>

<h3 id="section-7">技能设计</h3>

<ol>
  <li><code>缓兵之计</code>  文韬值积累一定程度可施放技能缓兵之计，对追兵罚时5s</li>
  <li><code>以父之名</code>  武略值积累一定程度可施放技能以父之名，父兄的魂魄帮助你在5s内清空面前一切营垒（保卫萝卜的全屏炸弹）</li>
</ol>

<p>以父之名似乎会更厉害一些，可以留着在中军兵营处使用。</p>

<p>以上是20分钟内写下的设计草稿。</p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/1.jpeg" class="img-up" title="设计图一"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/1.jpeg" width="80%" title="设计图一" /></a></p>

<p><a href="http://frank19900731.github.io/img/post/2014-10/2.jpeg" class="img-up" title="设计图二"><img class="imgcenter" src="http://frank19900731.github.io/img/post/2014-10/2.jpeg" width="80%" title="设计图二" /></a></p>

<h2 id="section-8">面试过程</h2>

<p>展示使用黑板板书，对设计进行了详细介绍。</p>

<p>被问到的问题：</p>

<ol>
  <li>小兵的攻击范围是多少，血量怎么设计？</li>
  <li>人物可以左右移动么？人物射箭可以穿透兵营还是遇到兵营就停止？人物的射箭频率如何？</li>
  <li>记不清了……</li>
</ol>

<p>具体怎么回答的就不说了，大概的思路是设定一个通关率或者掉血率，然后经游戏志愿者实测调整而成，诸如此类。</p>

<h2 id="section-9">经验总结</h2>

<ol>
  <li>故事大框说说就好，更重要的可能是那些细节问题，比如人物的箭是否可以射穿了之类的，你没说但是被问到了，就说明你没有思考这些，你的策划方案就是有问题的。</li>
  <li>不同面试官风格也是不一样的，第一条经验也可能不对。</li>
</ol>

<p class="post-footer">原文地址: <a href="http://frank19900731.github.io/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/">http://frank19900731.github.io/blog/2014/10/20/ji-mou-you-xi-gong-si-mian-shi-jing-li/</a><br /> 作者 <a href="http://frank19900731.github.io">Frank Song</a>&nbsp; 发布于 <a href="http://frank19900731.github.io">http://frank19900731.github.io</a>&nbsp; 转载请注明</p>

  ]]></description>
</item>
